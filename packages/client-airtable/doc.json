{
	"id": 0,
	"name": "@ti-platform/client-airtable",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 133,
			"name": "CellFormat",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The format that should be used for cell values.\n\nThe "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Timezone",
						"target": 139,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "UserLocale",
						"target": 575,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " parameters are required when using "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " as the cell  format.\n\nNote: You should not rely on the format of these strings, as it is subject to change.\n\nThe default is "
					},
					{
						"kind": "code",
						"text": "`json`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 134,
					"name": "JSON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cells will be formatted as JSON, depending on the field type."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "json"
					}
				},
				{
					"id": 135,
					"name": "STRING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cells will be formatted as user-facing strings, regardless of the field type."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						134,
						135
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/enums.ts",
					"line": 10,
					"character": 12
				}
			]
		},
		{
			"id": 136,
			"name": "Direction",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The direction to sort results.\n\nThe default is "
					},
					{
						"kind": "code",
						"text": "`asc`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 137,
					"name": "ASC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sort in ascending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "asc"
					}
				},
				{
					"id": 138,
					"name": "DESC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sort in descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "desc"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						137,
						138
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/enums.ts",
					"line": 23,
					"character": 12
				}
			]
		},
		{
			"id": 139,
			"name": "Timezone",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The time zone that should be used to format dates when using "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " as the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CellFormat",
						"target": 133,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 142,
					"name": "AFRICA_ABIDJAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Abidjan"
					}
				},
				{
					"id": 143,
					"name": "AFRICA_ACCRA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Accra"
					}
				},
				{
					"id": 144,
					"name": "AFRICA_ADDIS_ABABA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Addis_Ababa"
					}
				},
				{
					"id": 145,
					"name": "AFRICA_ALGIERS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Algiers"
					}
				},
				{
					"id": 146,
					"name": "AFRICA_ASMARA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Asmara"
					}
				},
				{
					"id": 147,
					"name": "AFRICA_BAMAKO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Bamako"
					}
				},
				{
					"id": 148,
					"name": "AFRICA_BANGUI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Bangui"
					}
				},
				{
					"id": 149,
					"name": "AFRICA_BANJUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Banjul"
					}
				},
				{
					"id": 150,
					"name": "AFRICA_BISSAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Bissau"
					}
				},
				{
					"id": 151,
					"name": "AFRICA_BLANTYRE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Blantyre"
					}
				},
				{
					"id": 152,
					"name": "AFRICA_BRAZZAVILLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Brazzaville"
					}
				},
				{
					"id": 153,
					"name": "AFRICA_BUJUMBURA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Bujumbura"
					}
				},
				{
					"id": 154,
					"name": "AFRICA_CAIRO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Cairo"
					}
				},
				{
					"id": 155,
					"name": "AFRICA_CASABLANCA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 50,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Casablanca"
					}
				},
				{
					"id": 156,
					"name": "AFRICA_CEUTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Ceuta"
					}
				},
				{
					"id": 157,
					"name": "AFRICA_CONAKRY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Conakry"
					}
				},
				{
					"id": 158,
					"name": "AFRICA_DAKAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Dakar"
					}
				},
				{
					"id": 159,
					"name": "AFRICA_DAR_ES_SALAAM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 54,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Dar_es_Salaam"
					}
				},
				{
					"id": 160,
					"name": "AFRICA_DJIBOUTI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 55,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Djibouti"
					}
				},
				{
					"id": 161,
					"name": "AFRICA_DOUALA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Douala"
					}
				},
				{
					"id": 162,
					"name": "AFRICA_EL_AAIUN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/El_Aaiun"
					}
				},
				{
					"id": 163,
					"name": "AFRICA_FREETOWN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 58,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Freetown"
					}
				},
				{
					"id": 164,
					"name": "AFRICA_GABORONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Gaborone"
					}
				},
				{
					"id": 165,
					"name": "AFRICA_HARARE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Harare"
					}
				},
				{
					"id": 166,
					"name": "AFRICA_JOHANNESBURG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Johannesburg"
					}
				},
				{
					"id": 167,
					"name": "AFRICA_JUBA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Juba"
					}
				},
				{
					"id": 168,
					"name": "AFRICA_KAMPALA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Kampala"
					}
				},
				{
					"id": 169,
					"name": "AFRICA_KHARTOUM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Khartoum"
					}
				},
				{
					"id": 170,
					"name": "AFRICA_KIGALI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Kigali"
					}
				},
				{
					"id": 171,
					"name": "AFRICA_KINSHASA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Kinshasa"
					}
				},
				{
					"id": 172,
					"name": "AFRICA_LAGOS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Lagos"
					}
				},
				{
					"id": 173,
					"name": "AFRICA_LIBREVILLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Libreville"
					}
				},
				{
					"id": 174,
					"name": "AFRICA_LOME",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Lome"
					}
				},
				{
					"id": 175,
					"name": "AFRICA_LUANDA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 70,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Luanda"
					}
				},
				{
					"id": 176,
					"name": "AFRICA_LUBUMBASHI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 71,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Lubumbashi"
					}
				},
				{
					"id": 177,
					"name": "AFRICA_LUSAKA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Lusaka"
					}
				},
				{
					"id": 178,
					"name": "AFRICA_MALABO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Malabo"
					}
				},
				{
					"id": 179,
					"name": "AFRICA_MAPUTO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 74,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Maputo"
					}
				},
				{
					"id": 180,
					"name": "AFRICA_MASERU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 75,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Maseru"
					}
				},
				{
					"id": 181,
					"name": "AFRICA_MBABANE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Mbabane"
					}
				},
				{
					"id": 182,
					"name": "AFRICA_MOGADISHU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 77,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Mogadishu"
					}
				},
				{
					"id": 183,
					"name": "AFRICA_MONROVIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 78,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Monrovia"
					}
				},
				{
					"id": 184,
					"name": "AFRICA_NAIROBI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 79,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Nairobi"
					}
				},
				{
					"id": 185,
					"name": "AFRICA_NDJAMENA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 80,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Ndjamena"
					}
				},
				{
					"id": 186,
					"name": "AFRICA_NIAMEY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 81,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Niamey"
					}
				},
				{
					"id": 187,
					"name": "AFRICA_NOUAKCHOTT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 82,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Nouakchott"
					}
				},
				{
					"id": 188,
					"name": "AFRICA_OUAGADOUGOU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 83,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Ouagadougou"
					}
				},
				{
					"id": 189,
					"name": "AFRICA_PORTO_NOVO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 84,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Porto-Novo"
					}
				},
				{
					"id": 190,
					"name": "AFRICA_SAO_TOME",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 85,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Sao_Tome"
					}
				},
				{
					"id": 191,
					"name": "AFRICA_TRIPOLI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 86,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Tripoli"
					}
				},
				{
					"id": 192,
					"name": "AFRICA_TUNIS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 87,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Tunis"
					}
				},
				{
					"id": 193,
					"name": "AFRICA_WINDHOEK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 88,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Africa/Windhoek"
					}
				},
				{
					"id": 194,
					"name": "AMERICA_ADAK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 89,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Adak"
					}
				},
				{
					"id": 195,
					"name": "AMERICA_ANCHORAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 90,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Anchorage"
					}
				},
				{
					"id": 196,
					"name": "AMERICA_ANGUILLA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 91,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Anguilla"
					}
				},
				{
					"id": 197,
					"name": "AMERICA_ANTIGUA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 92,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Antigua"
					}
				},
				{
					"id": 198,
					"name": "AMERICA_ARAGUAINA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 93,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Araguaina"
					}
				},
				{
					"id": 199,
					"name": "AMERICA_ARGENTINA_BUENOS_AIRES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 94,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Buenos_Aires"
					}
				},
				{
					"id": 200,
					"name": "AMERICA_ARGENTINA_CATAMARCA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 95,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Catamarca"
					}
				},
				{
					"id": 201,
					"name": "AMERICA_ARGENTINA_CORDOBA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 96,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Cordoba"
					}
				},
				{
					"id": 202,
					"name": "AMERICA_ARGENTINA_JUJUY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 97,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Jujuy"
					}
				},
				{
					"id": 203,
					"name": "AMERICA_ARGENTINA_LA_RIOJA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 98,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/La_Rioja"
					}
				},
				{
					"id": 204,
					"name": "AMERICA_ARGENTINA_MENDOZA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 99,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Mendoza"
					}
				},
				{
					"id": 205,
					"name": "AMERICA_ARGENTINA_RIO_GALLEGOS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 100,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Rio_Gallegos"
					}
				},
				{
					"id": 206,
					"name": "AMERICA_ARGENTINA_SALTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 101,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Salta"
					}
				},
				{
					"id": 207,
					"name": "AMERICA_ARGENTINA_SAN_JUAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 102,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/San_Juan"
					}
				},
				{
					"id": 208,
					"name": "AMERICA_ARGENTINA_SAN_LUIS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 103,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/San_Luis"
					}
				},
				{
					"id": 209,
					"name": "AMERICA_ARGENTINA_TUCUMAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 104,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Tucuman"
					}
				},
				{
					"id": 210,
					"name": "AMERICA_ARGENTINA_USHUAIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 105,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Argentina/Ushuaia"
					}
				},
				{
					"id": 211,
					"name": "AMERICA_ARUBA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 106,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Aruba"
					}
				},
				{
					"id": 212,
					"name": "AMERICA_ASUNCION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 107,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Asuncion"
					}
				},
				{
					"id": 213,
					"name": "AMERICA_ATIKOKAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 108,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Atikokan"
					}
				},
				{
					"id": 214,
					"name": "AMERICA_BAHIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 109,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Bahia"
					}
				},
				{
					"id": 215,
					"name": "AMERICA_BAHIA_BANDERAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 110,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Bahia_Banderas"
					}
				},
				{
					"id": 216,
					"name": "AMERICA_BARBADOS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 111,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Barbados"
					}
				},
				{
					"id": 217,
					"name": "AMERICA_BELEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 112,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Belem"
					}
				},
				{
					"id": 218,
					"name": "AMERICA_BELIZE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 113,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Belize"
					}
				},
				{
					"id": 219,
					"name": "AMERICA_BLANC_SABLON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 114,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Blanc-Sablon"
					}
				},
				{
					"id": 220,
					"name": "AMERICA_BOA_VISTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 115,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Boa_Vista"
					}
				},
				{
					"id": 221,
					"name": "AMERICA_BOGOTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 116,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Bogota"
					}
				},
				{
					"id": 222,
					"name": "AMERICA_BOISE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 117,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Boise"
					}
				},
				{
					"id": 223,
					"name": "AMERICA_CAMBRIDGE_BAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 118,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Cambridge_Bay"
					}
				},
				{
					"id": 224,
					"name": "AMERICA_CAMPO_GRANDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 119,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Campo_Grande"
					}
				},
				{
					"id": 225,
					"name": "AMERICA_CANCUN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 120,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Cancun"
					}
				},
				{
					"id": 226,
					"name": "AMERICA_CARACAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 121,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Caracas"
					}
				},
				{
					"id": 227,
					"name": "AMERICA_CAYENNE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 122,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Cayenne"
					}
				},
				{
					"id": 228,
					"name": "AMERICA_CAYMAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 123,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Cayman"
					}
				},
				{
					"id": 229,
					"name": "AMERICA_CHICAGO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 124,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Chicago"
					}
				},
				{
					"id": 230,
					"name": "AMERICA_CHIHUAHUA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 125,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Chihuahua"
					}
				},
				{
					"id": 231,
					"name": "AMERICA_COSTA_RICA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 126,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Costa_Rica"
					}
				},
				{
					"id": 232,
					"name": "AMERICA_CRESTON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 127,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Creston"
					}
				},
				{
					"id": 233,
					"name": "AMERICA_CUIABA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 128,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Cuiaba"
					}
				},
				{
					"id": 234,
					"name": "AMERICA_CURACAO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 129,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Curacao"
					}
				},
				{
					"id": 235,
					"name": "AMERICA_DANMARKSHAVN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 130,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Danmarkshavn"
					}
				},
				{
					"id": 236,
					"name": "AMERICA_DAWSON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 131,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Dawson"
					}
				},
				{
					"id": 237,
					"name": "AMERICA_DAWSON_CREEK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 132,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Dawson_Creek"
					}
				},
				{
					"id": 238,
					"name": "AMERICA_DENVER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 133,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Denver"
					}
				},
				{
					"id": 239,
					"name": "AMERICA_DETROIT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 134,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Detroit"
					}
				},
				{
					"id": 240,
					"name": "AMERICA_DOMINICA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 135,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Dominica"
					}
				},
				{
					"id": 241,
					"name": "AMERICA_EDMONTON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 136,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Edmonton"
					}
				},
				{
					"id": 242,
					"name": "AMERICA_EIRUNEPE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 137,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Eirunepe"
					}
				},
				{
					"id": 243,
					"name": "AMERICA_EL_SALVADOR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 138,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/El_Salvador"
					}
				},
				{
					"id": 245,
					"name": "AMERICA_FORTALEZA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 140,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Fortaleza"
					}
				},
				{
					"id": 244,
					"name": "AMERICA_FORT_NELSON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 139,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Fort_Nelson"
					}
				},
				{
					"id": 246,
					"name": "AMERICA_GLACE_BAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 141,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Glace_Bay"
					}
				},
				{
					"id": 247,
					"name": "AMERICA_GODTHAB",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 142,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Godthab"
					}
				},
				{
					"id": 248,
					"name": "AMERICA_GOOSE_BAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 143,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Goose_Bay"
					}
				},
				{
					"id": 249,
					"name": "AMERICA_GRAND_TURK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 144,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Grand_Turk"
					}
				},
				{
					"id": 250,
					"name": "AMERICA_GRENADA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 145,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Grenada"
					}
				},
				{
					"id": 251,
					"name": "AMERICA_GUADELOUPE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 146,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Guadeloupe"
					}
				},
				{
					"id": 252,
					"name": "AMERICA_GUATEMALA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 147,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Guatemala"
					}
				},
				{
					"id": 253,
					"name": "AMERICA_GUAYAQUIL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 148,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Guayaquil"
					}
				},
				{
					"id": 254,
					"name": "AMERICA_GUYANA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 149,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Guyana"
					}
				},
				{
					"id": 255,
					"name": "AMERICA_HALIFAX",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 150,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Halifax"
					}
				},
				{
					"id": 256,
					"name": "AMERICA_HAVANA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 151,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Havana"
					}
				},
				{
					"id": 257,
					"name": "AMERICA_HERMOSILLO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 152,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Hermosillo"
					}
				},
				{
					"id": 258,
					"name": "AMERICA_INDIANA_INDIANAPOLIS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 153,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Indianapolis"
					}
				},
				{
					"id": 259,
					"name": "AMERICA_INDIANA_KNOX",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 154,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Knox"
					}
				},
				{
					"id": 260,
					"name": "AMERICA_INDIANA_MARENGO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 155,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Marengo"
					}
				},
				{
					"id": 261,
					"name": "AMERICA_INDIANA_PETERSBURG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 156,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Petersburg"
					}
				},
				{
					"id": 262,
					"name": "AMERICA_INDIANA_TELL_CITY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 157,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Tell_City"
					}
				},
				{
					"id": 263,
					"name": "AMERICA_INDIANA_VEVAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 158,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Vevay"
					}
				},
				{
					"id": 264,
					"name": "AMERICA_INDIANA_VINCENNES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 159,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Vincennes"
					}
				},
				{
					"id": 265,
					"name": "AMERICA_INDIANA_WINAMAC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 160,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Indiana/Winamac"
					}
				},
				{
					"id": 266,
					"name": "AMERICA_INUVIK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 161,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Inuvik"
					}
				},
				{
					"id": 267,
					"name": "AMERICA_IQALUIT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 162,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Iqaluit"
					}
				},
				{
					"id": 268,
					"name": "AMERICA_JAMAICA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 163,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Jamaica"
					}
				},
				{
					"id": 269,
					"name": "AMERICA_JUNEAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 164,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Juneau"
					}
				},
				{
					"id": 270,
					"name": "AMERICA_KENTUCKY_LOUISVILLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 165,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Kentucky/Louisville"
					}
				},
				{
					"id": 271,
					"name": "AMERICA_KENTUCKY_MONTICELLO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 166,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Kentucky/Monticello"
					}
				},
				{
					"id": 272,
					"name": "AMERICA_KRALENDIJK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 167,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Kralendijk"
					}
				},
				{
					"id": 273,
					"name": "AMERICA_LA_PAZ",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 168,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/La_Paz"
					}
				},
				{
					"id": 274,
					"name": "AMERICA_LIMA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 169,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Lima"
					}
				},
				{
					"id": 275,
					"name": "AMERICA_LOS_ANGELES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 170,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Los_Angeles"
					}
				},
				{
					"id": 276,
					"name": "AMERICA_LOWER_PRINCES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 171,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Lower_Princes"
					}
				},
				{
					"id": 277,
					"name": "AMERICA_MACEIO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 172,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Maceio"
					}
				},
				{
					"id": 278,
					"name": "AMERICA_MANAGUA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 173,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Managua"
					}
				},
				{
					"id": 279,
					"name": "AMERICA_MANAUS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 174,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Manaus"
					}
				},
				{
					"id": 280,
					"name": "AMERICA_MARIGOT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 175,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Marigot"
					}
				},
				{
					"id": 281,
					"name": "AMERICA_MARTINIQUE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 176,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Martinique"
					}
				},
				{
					"id": 282,
					"name": "AMERICA_MATAMOROS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 177,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Matamoros"
					}
				},
				{
					"id": 283,
					"name": "AMERICA_MAZATLAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 178,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Mazatlan"
					}
				},
				{
					"id": 284,
					"name": "AMERICA_MENOMINEE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 179,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Menominee"
					}
				},
				{
					"id": 285,
					"name": "AMERICA_MERIDA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 180,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Merida"
					}
				},
				{
					"id": 286,
					"name": "AMERICA_METLAKATLA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 181,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Metlakatla"
					}
				},
				{
					"id": 287,
					"name": "AMERICA_MEXICO_CITY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 182,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Mexico_City"
					}
				},
				{
					"id": 288,
					"name": "AMERICA_MIQUELON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 183,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Miquelon"
					}
				},
				{
					"id": 289,
					"name": "AMERICA_MONCTON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 184,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Moncton"
					}
				},
				{
					"id": 290,
					"name": "AMERICA_MONTERREY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 185,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Monterrey"
					}
				},
				{
					"id": 291,
					"name": "AMERICA_MONTEVIDEO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 186,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Montevideo"
					}
				},
				{
					"id": 292,
					"name": "AMERICA_MONTSERRAT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 187,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Montserrat"
					}
				},
				{
					"id": 293,
					"name": "AMERICA_NASSAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 188,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Nassau"
					}
				},
				{
					"id": 294,
					"name": "AMERICA_NEW_YORK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 189,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/New_York"
					}
				},
				{
					"id": 295,
					"name": "AMERICA_NIPIGON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 190,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Nipigon"
					}
				},
				{
					"id": 296,
					"name": "AMERICA_NOME",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 191,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Nome"
					}
				},
				{
					"id": 297,
					"name": "AMERICA_NORONHA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 192,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Noronha"
					}
				},
				{
					"id": 298,
					"name": "AMERICA_NORTH_DAKOTA_BEULAH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 193,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/North_Dakota/Beulah"
					}
				},
				{
					"id": 299,
					"name": "AMERICA_NORTH_DAKOTA_CENTER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 194,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/North_Dakota/Center"
					}
				},
				{
					"id": 300,
					"name": "AMERICA_NORTH_DAKOTA_NEW_SALEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 195,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/North_Dakota/New_Salem"
					}
				},
				{
					"id": 301,
					"name": "AMERICA_NUUK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 196,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Nuuk"
					}
				},
				{
					"id": 302,
					"name": "AMERICA_OJINAGA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 197,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Ojinaga"
					}
				},
				{
					"id": 303,
					"name": "AMERICA_PANAMA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 198,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Panama"
					}
				},
				{
					"id": 304,
					"name": "AMERICA_PANGNIRTUNG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 199,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Pangnirtung"
					}
				},
				{
					"id": 305,
					"name": "AMERICA_PARAMARIBO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 200,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Paramaribo"
					}
				},
				{
					"id": 306,
					"name": "AMERICA_PHOENIX",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 201,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Phoenix"
					}
				},
				{
					"id": 309,
					"name": "AMERICA_PORTO_VELHO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 204,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Porto_Velho"
					}
				},
				{
					"id": 307,
					"name": "AMERICA_PORT_AU_PRINCE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 202,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Port-au-Prince"
					}
				},
				{
					"id": 308,
					"name": "AMERICA_PORT_OF_SPAIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 203,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Port_of_Spain"
					}
				},
				{
					"id": 310,
					"name": "AMERICA_PUERTO_RICO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 205,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Puerto_Rico"
					}
				},
				{
					"id": 311,
					"name": "AMERICA_PUNTA_ARENAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 206,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Punta_Arenas"
					}
				},
				{
					"id": 312,
					"name": "AMERICA_RAINY_RIVER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 207,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Rainy_River"
					}
				},
				{
					"id": 313,
					"name": "AMERICA_RANKIN_INLET",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 208,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Rankin_Inlet"
					}
				},
				{
					"id": 314,
					"name": "AMERICA_RECIFE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 209,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Recife"
					}
				},
				{
					"id": 315,
					"name": "AMERICA_REGINA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 210,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Regina"
					}
				},
				{
					"id": 316,
					"name": "AMERICA_RESOLUTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 211,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Resolute"
					}
				},
				{
					"id": 317,
					"name": "AMERICA_RIO_BRANCO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 212,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Rio_Branco"
					}
				},
				{
					"id": 318,
					"name": "AMERICA_SANTAREM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 213,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Santarem"
					}
				},
				{
					"id": 319,
					"name": "AMERICA_SANTIAGO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 214,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Santiago"
					}
				},
				{
					"id": 320,
					"name": "AMERICA_SANTO_DOMINGO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 215,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Santo_Domingo"
					}
				},
				{
					"id": 321,
					"name": "AMERICA_SAO_PAULO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 216,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Sao_Paulo"
					}
				},
				{
					"id": 322,
					"name": "AMERICA_SCORESBYSUND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 217,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Scoresbysund"
					}
				},
				{
					"id": 323,
					"name": "AMERICA_SITKA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 218,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Sitka"
					}
				},
				{
					"id": 324,
					"name": "AMERICA_ST_BARTHELEMY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 219,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/St_Barthelemy"
					}
				},
				{
					"id": 325,
					"name": "AMERICA_ST_JOHNS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 220,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/St_Johns"
					}
				},
				{
					"id": 326,
					"name": "AMERICA_ST_KITTS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 221,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/St_Kitts"
					}
				},
				{
					"id": 327,
					"name": "AMERICA_ST_LUCIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 222,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/St_Lucia"
					}
				},
				{
					"id": 328,
					"name": "AMERICA_ST_THOMAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 223,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/St_Thomas"
					}
				},
				{
					"id": 329,
					"name": "AMERICA_ST_VINCENT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 224,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/St_Vincent"
					}
				},
				{
					"id": 330,
					"name": "AMERICA_SWIFT_CURRENT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 225,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Swift_Current"
					}
				},
				{
					"id": 331,
					"name": "AMERICA_TEGUCIGALPA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 226,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Tegucigalpa"
					}
				},
				{
					"id": 332,
					"name": "AMERICA_THULE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 227,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Thule"
					}
				},
				{
					"id": 333,
					"name": "AMERICA_THUNDER_BAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 228,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Thunder_Bay"
					}
				},
				{
					"id": 334,
					"name": "AMERICA_TIJUANA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 229,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Tijuana"
					}
				},
				{
					"id": 335,
					"name": "AMERICA_TORONTO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 230,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Toronto"
					}
				},
				{
					"id": 336,
					"name": "AMERICA_TORTOLA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 231,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Tortola"
					}
				},
				{
					"id": 337,
					"name": "AMERICA_VANCOUVER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 232,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Vancouver"
					}
				},
				{
					"id": 338,
					"name": "AMERICA_WHITEHORSE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 233,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Whitehorse"
					}
				},
				{
					"id": 339,
					"name": "AMERICA_WINNIPEG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 234,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Winnipeg"
					}
				},
				{
					"id": 340,
					"name": "AMERICA_YAKUTAT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 235,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Yakutat"
					}
				},
				{
					"id": 341,
					"name": "AMERICA_YELLOWKNIFE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 236,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "America/Yellowknife"
					}
				},
				{
					"id": 342,
					"name": "ANTARCTICA_CASEY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 237,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Casey"
					}
				},
				{
					"id": 343,
					"name": "ANTARCTICA_DAVIS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 238,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Davis"
					}
				},
				{
					"id": 344,
					"name": "ANTARCTICA_DUMONTDURVILLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 239,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/DumontDUrville"
					}
				},
				{
					"id": 345,
					"name": "ANTARCTICA_MACQUARIE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 240,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Macquarie"
					}
				},
				{
					"id": 346,
					"name": "ANTARCTICA_MAWSON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 241,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Mawson"
					}
				},
				{
					"id": 347,
					"name": "ANTARCTICA_MCMURDO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 242,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/McMurdo"
					}
				},
				{
					"id": 348,
					"name": "ANTARCTICA_PALMER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 243,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Palmer"
					}
				},
				{
					"id": 349,
					"name": "ANTARCTICA_ROTHERA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 244,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Rothera"
					}
				},
				{
					"id": 350,
					"name": "ANTARCTICA_SYOWA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 245,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Syowa"
					}
				},
				{
					"id": 351,
					"name": "ANTARCTICA_TROLL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 246,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Troll"
					}
				},
				{
					"id": 352,
					"name": "ANTARCTICA_VOSTOK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 247,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Antarctica/Vostok"
					}
				},
				{
					"id": 353,
					"name": "ARCTIC_LONGYEARBYEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 248,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Arctic/Longyearbyen"
					}
				},
				{
					"id": 354,
					"name": "ASIA_ADEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 249,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Aden"
					}
				},
				{
					"id": 355,
					"name": "ASIA_ALMATY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 250,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Almaty"
					}
				},
				{
					"id": 356,
					"name": "ASIA_AMMAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 251,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Amman"
					}
				},
				{
					"id": 357,
					"name": "ASIA_ANADYR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 252,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Anadyr"
					}
				},
				{
					"id": 358,
					"name": "ASIA_AQTAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 253,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Aqtau"
					}
				},
				{
					"id": 359,
					"name": "ASIA_AQTOBE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 254,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Aqtobe"
					}
				},
				{
					"id": 360,
					"name": "ASIA_ASHGABAT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 255,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Ashgabat"
					}
				},
				{
					"id": 361,
					"name": "ASIA_ATYRAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 256,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Atyrau"
					}
				},
				{
					"id": 362,
					"name": "ASIA_BAGHDAD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 257,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Baghdad"
					}
				},
				{
					"id": 363,
					"name": "ASIA_BAHRAIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 258,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Bahrain"
					}
				},
				{
					"id": 364,
					"name": "ASIA_BAKU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 259,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Baku"
					}
				},
				{
					"id": 365,
					"name": "ASIA_BANGKOK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 260,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Bangkok"
					}
				},
				{
					"id": 366,
					"name": "ASIA_BARNAUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 261,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Barnaul"
					}
				},
				{
					"id": 367,
					"name": "ASIA_BEIRUT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 262,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Beirut"
					}
				},
				{
					"id": 368,
					"name": "ASIA_BISHKEK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 263,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Bishkek"
					}
				},
				{
					"id": 369,
					"name": "ASIA_BRUNEI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 264,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Brunei"
					}
				},
				{
					"id": 370,
					"name": "ASIA_CHITA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 265,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Chita"
					}
				},
				{
					"id": 371,
					"name": "ASIA_CHOIBALSAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 266,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Choibalsan"
					}
				},
				{
					"id": 372,
					"name": "ASIA_COLOMBO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 267,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Colombo"
					}
				},
				{
					"id": 373,
					"name": "ASIA_DAMASCUS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 268,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Damascus"
					}
				},
				{
					"id": 374,
					"name": "ASIA_DHAKA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 269,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Dhaka"
					}
				},
				{
					"id": 375,
					"name": "ASIA_DILI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 270,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Dili"
					}
				},
				{
					"id": 376,
					"name": "ASIA_DUBAI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 271,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Dubai"
					}
				},
				{
					"id": 377,
					"name": "ASIA_DUSHANBE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 272,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Dushanbe"
					}
				},
				{
					"id": 378,
					"name": "ASIA_FAMAGUSTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 273,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Famagusta"
					}
				},
				{
					"id": 379,
					"name": "ASIA_GAZA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 274,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Gaza"
					}
				},
				{
					"id": 380,
					"name": "ASIA_HEBRON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 275,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Hebron"
					}
				},
				{
					"id": 382,
					"name": "ASIA_HONG_KONG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 277,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Hong_Kong"
					}
				},
				{
					"id": 383,
					"name": "ASIA_HOVD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 278,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Hovd"
					}
				},
				{
					"id": 381,
					"name": "ASIA_HO_CHI_MINH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 276,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Ho_Chi_Minh"
					}
				},
				{
					"id": 384,
					"name": "ASIA_IRKUTSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 279,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Irkutsk"
					}
				},
				{
					"id": 385,
					"name": "ASIA_ISTANBUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 280,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Istanbul"
					}
				},
				{
					"id": 386,
					"name": "ASIA_JAKARTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 281,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Jakarta"
					}
				},
				{
					"id": 387,
					"name": "ASIA_JAYAPURA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 282,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Jayapura"
					}
				},
				{
					"id": 388,
					"name": "ASIA_JERUSALEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 283,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Jerusalem"
					}
				},
				{
					"id": 389,
					"name": "ASIA_KABUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 284,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kabul"
					}
				},
				{
					"id": 390,
					"name": "ASIA_KAMCHATKA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 285,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kamchatka"
					}
				},
				{
					"id": 391,
					"name": "ASIA_KARACHI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 286,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Karachi"
					}
				},
				{
					"id": 392,
					"name": "ASIA_KATHMANDU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 287,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kathmandu"
					}
				},
				{
					"id": 393,
					"name": "ASIA_KHANDYGA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 288,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Khandyga"
					}
				},
				{
					"id": 394,
					"name": "ASIA_KOLKATA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 289,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kolkata"
					}
				},
				{
					"id": 395,
					"name": "ASIA_KRASNOYARSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 290,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Krasnoyarsk"
					}
				},
				{
					"id": 396,
					"name": "ASIA_KUALA_LUMPUR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 291,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kuala_Lumpur"
					}
				},
				{
					"id": 397,
					"name": "ASIA_KUCHING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 292,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kuching"
					}
				},
				{
					"id": 398,
					"name": "ASIA_KUWAIT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 293,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Kuwait"
					}
				},
				{
					"id": 399,
					"name": "ASIA_MACAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 294,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Macau"
					}
				},
				{
					"id": 400,
					"name": "ASIA_MAGADAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 295,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Magadan"
					}
				},
				{
					"id": 401,
					"name": "ASIA_MAKASSAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 296,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Makassar"
					}
				},
				{
					"id": 402,
					"name": "ASIA_MANILA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 297,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Manila"
					}
				},
				{
					"id": 403,
					"name": "ASIA_MUSCAT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 298,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Muscat"
					}
				},
				{
					"id": 404,
					"name": "ASIA_NICOSIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 299,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Nicosia"
					}
				},
				{
					"id": 405,
					"name": "ASIA_NOVOKUZNETSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 300,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Novokuznetsk"
					}
				},
				{
					"id": 406,
					"name": "ASIA_NOVOSIBIRSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 301,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Novosibirsk"
					}
				},
				{
					"id": 407,
					"name": "ASIA_OMSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 302,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Omsk"
					}
				},
				{
					"id": 408,
					"name": "ASIA_ORAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 303,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Oral"
					}
				},
				{
					"id": 409,
					"name": "ASIA_PHNOM_PENH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 304,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Phnom_Penh"
					}
				},
				{
					"id": 410,
					"name": "ASIA_PONTIANAK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 305,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Pontianak"
					}
				},
				{
					"id": 411,
					"name": "ASIA_PYONGYANG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 306,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Pyongyang"
					}
				},
				{
					"id": 412,
					"name": "ASIA_QATAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 307,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Qatar"
					}
				},
				{
					"id": 413,
					"name": "ASIA_QOSTANAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 308,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Qostanay"
					}
				},
				{
					"id": 414,
					"name": "ASIA_QYZYLORDA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 309,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Qyzylorda"
					}
				},
				{
					"id": 415,
					"name": "ASIA_RANGOON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 310,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Rangoon"
					}
				},
				{
					"id": 416,
					"name": "ASIA_RIYADH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 311,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Riyadh"
					}
				},
				{
					"id": 417,
					"name": "ASIA_SAKHALIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 312,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Sakhalin"
					}
				},
				{
					"id": 418,
					"name": "ASIA_SAMARKAND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 313,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Samarkand"
					}
				},
				{
					"id": 419,
					"name": "ASIA_SEOUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 314,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Seoul"
					}
				},
				{
					"id": 420,
					"name": "ASIA_SHANGHAI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 315,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Shanghai"
					}
				},
				{
					"id": 421,
					"name": "ASIA_SINGAPORE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 316,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Singapore"
					}
				},
				{
					"id": 422,
					"name": "ASIA_SREDNEKOLYMSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 317,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Srednekolymsk"
					}
				},
				{
					"id": 423,
					"name": "ASIA_TAIPEI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 318,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Taipei"
					}
				},
				{
					"id": 424,
					"name": "ASIA_TASHKENT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 319,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Tashkent"
					}
				},
				{
					"id": 425,
					"name": "ASIA_TBILISI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 320,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Tbilisi"
					}
				},
				{
					"id": 426,
					"name": "ASIA_TEHRAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 321,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Tehran"
					}
				},
				{
					"id": 427,
					"name": "ASIA_THIMPHU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 322,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Thimphu"
					}
				},
				{
					"id": 428,
					"name": "ASIA_TOKYO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 323,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Tokyo"
					}
				},
				{
					"id": 429,
					"name": "ASIA_TOMSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 324,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Tomsk"
					}
				},
				{
					"id": 430,
					"name": "ASIA_ULAANBAATAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 325,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Ulaanbaatar"
					}
				},
				{
					"id": 431,
					"name": "ASIA_URUMQI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 326,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Urumqi"
					}
				},
				{
					"id": 432,
					"name": "ASIA_UST_NERA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 327,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Ust-Nera"
					}
				},
				{
					"id": 433,
					"name": "ASIA_VIENTIANE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 328,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Vientiane"
					}
				},
				{
					"id": 434,
					"name": "ASIA_VLADIVOSTOK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 329,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Vladivostok"
					}
				},
				{
					"id": 435,
					"name": "ASIA_YAKUTSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 330,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Yakutsk"
					}
				},
				{
					"id": 436,
					"name": "ASIA_YANGON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 331,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Yangon"
					}
				},
				{
					"id": 437,
					"name": "ASIA_YEKATERINBURG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 332,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Yekaterinburg"
					}
				},
				{
					"id": 438,
					"name": "ASIA_YEREVAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 333,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Asia/Yerevan"
					}
				},
				{
					"id": 439,
					"name": "ATLANTIC_AZORES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 334,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Azores"
					}
				},
				{
					"id": 440,
					"name": "ATLANTIC_BERMUDA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 335,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Bermuda"
					}
				},
				{
					"id": 441,
					"name": "ATLANTIC_CANARY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 336,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Canary"
					}
				},
				{
					"id": 442,
					"name": "ATLANTIC_CAPE_VERDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 337,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Cape_Verde"
					}
				},
				{
					"id": 443,
					"name": "ATLANTIC_FAROE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 338,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Faroe"
					}
				},
				{
					"id": 444,
					"name": "ATLANTIC_MADEIRA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 339,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Madeira"
					}
				},
				{
					"id": 445,
					"name": "ATLANTIC_REYKJAVIK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 340,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Reykjavik"
					}
				},
				{
					"id": 446,
					"name": "ATLANTIC_SOUTH_GEORGIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 341,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/South_Georgia"
					}
				},
				{
					"id": 448,
					"name": "ATLANTIC_STANLEY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 343,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/Stanley"
					}
				},
				{
					"id": 447,
					"name": "ATLANTIC_ST_HELENA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 342,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Atlantic/St_Helena"
					}
				},
				{
					"id": 449,
					"name": "AUSTRALIA_ADELAIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 344,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Adelaide"
					}
				},
				{
					"id": 450,
					"name": "AUSTRALIA_BRISBANE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 345,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Brisbane"
					}
				},
				{
					"id": 451,
					"name": "AUSTRALIA_BROKEN_HILL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 346,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Broken_Hill"
					}
				},
				{
					"id": 452,
					"name": "AUSTRALIA_CURRIE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 347,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Currie"
					}
				},
				{
					"id": 453,
					"name": "AUSTRALIA_DARWIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 348,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Darwin"
					}
				},
				{
					"id": 454,
					"name": "AUSTRALIA_EUCLA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 349,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Eucla"
					}
				},
				{
					"id": 455,
					"name": "AUSTRALIA_HOBART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 350,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Hobart"
					}
				},
				{
					"id": 456,
					"name": "AUSTRALIA_LINDEMAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 351,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Lindeman"
					}
				},
				{
					"id": 457,
					"name": "AUSTRALIA_LORD_HOWE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 352,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Lord_Howe"
					}
				},
				{
					"id": 458,
					"name": "AUSTRALIA_MELBOURNE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 353,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Melbourne"
					}
				},
				{
					"id": 459,
					"name": "AUSTRALIA_PERTH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 354,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Perth"
					}
				},
				{
					"id": 460,
					"name": "AUSTRALIA_SYDNEY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 355,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Australia/Sydney"
					}
				},
				{
					"id": 141,
					"name": "CLIENT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "client"
					}
				},
				{
					"id": 461,
					"name": "EUROPE_AMSTERDAM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 356,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Amsterdam"
					}
				},
				{
					"id": 462,
					"name": "EUROPE_ANDORRA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 357,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Andorra"
					}
				},
				{
					"id": 463,
					"name": "EUROPE_ASTRAKHAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 358,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Astrakhan"
					}
				},
				{
					"id": 464,
					"name": "EUROPE_ATHENS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 359,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Athens"
					}
				},
				{
					"id": 465,
					"name": "EUROPE_BELGRADE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 360,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Belgrade"
					}
				},
				{
					"id": 466,
					"name": "EUROPE_BERLIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 361,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Berlin"
					}
				},
				{
					"id": 467,
					"name": "EUROPE_BRATISLAVA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 362,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Bratislava"
					}
				},
				{
					"id": 468,
					"name": "EUROPE_BRUSSELS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 363,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Brussels"
					}
				},
				{
					"id": 469,
					"name": "EUROPE_BUCHAREST",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 364,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Bucharest"
					}
				},
				{
					"id": 470,
					"name": "EUROPE_BUDAPEST",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 365,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Budapest"
					}
				},
				{
					"id": 471,
					"name": "EUROPE_BUSINGEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 366,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Busingen"
					}
				},
				{
					"id": 472,
					"name": "EUROPE_CHISINAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 367,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Chisinau"
					}
				},
				{
					"id": 473,
					"name": "EUROPE_COPENHAGEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 368,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Copenhagen"
					}
				},
				{
					"id": 474,
					"name": "EUROPE_DUBLIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 369,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Dublin"
					}
				},
				{
					"id": 475,
					"name": "EUROPE_GIBRALTAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 370,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Gibraltar"
					}
				},
				{
					"id": 476,
					"name": "EUROPE_GUERNSEY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 371,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Guernsey"
					}
				},
				{
					"id": 477,
					"name": "EUROPE_HELSINKI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 372,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Helsinki"
					}
				},
				{
					"id": 478,
					"name": "EUROPE_ISLE_OF_MAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Isle_of_Man"
					}
				},
				{
					"id": 479,
					"name": "EUROPE_ISTANBUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Istanbul"
					}
				},
				{
					"id": 480,
					"name": "EUROPE_JERSEY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Jersey"
					}
				},
				{
					"id": 481,
					"name": "EUROPE_KALININGRAD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Kaliningrad"
					}
				},
				{
					"id": 482,
					"name": "EUROPE_KIEV",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 377,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Kiev"
					}
				},
				{
					"id": 483,
					"name": "EUROPE_KIROV",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 378,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Kirov"
					}
				},
				{
					"id": 484,
					"name": "EUROPE_LISBON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 379,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Lisbon"
					}
				},
				{
					"id": 485,
					"name": "EUROPE_LJUBLJANA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 380,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Ljubljana"
					}
				},
				{
					"id": 486,
					"name": "EUROPE_LONDON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 381,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/London"
					}
				},
				{
					"id": 487,
					"name": "EUROPE_LUXEMBOURG",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 382,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Luxembourg"
					}
				},
				{
					"id": 488,
					"name": "EUROPE_MADRID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 383,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Madrid"
					}
				},
				{
					"id": 489,
					"name": "EUROPE_MALTA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 384,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Malta"
					}
				},
				{
					"id": 490,
					"name": "EUROPE_MARIEHAMN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 385,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Mariehamn"
					}
				},
				{
					"id": 491,
					"name": "EUROPE_MINSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 386,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Minsk"
					}
				},
				{
					"id": 492,
					"name": "EUROPE_MONACO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 387,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Monaco"
					}
				},
				{
					"id": 493,
					"name": "EUROPE_MOSCOW",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 388,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Moscow"
					}
				},
				{
					"id": 494,
					"name": "EUROPE_NICOSIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 389,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Nicosia"
					}
				},
				{
					"id": 495,
					"name": "EUROPE_OSLO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 390,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Oslo"
					}
				},
				{
					"id": 496,
					"name": "EUROPE_PARIS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 391,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Paris"
					}
				},
				{
					"id": 497,
					"name": "EUROPE_PODGORICA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 392,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Podgorica"
					}
				},
				{
					"id": 498,
					"name": "EUROPE_PRAGUE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 393,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Prague"
					}
				},
				{
					"id": 499,
					"name": "EUROPE_RIGA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 394,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Riga"
					}
				},
				{
					"id": 500,
					"name": "EUROPE_ROME",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 395,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Rome"
					}
				},
				{
					"id": 501,
					"name": "EUROPE_SAMARA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 396,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Samara"
					}
				},
				{
					"id": 502,
					"name": "EUROPE_SAN_MARINO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 397,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/San_Marino"
					}
				},
				{
					"id": 503,
					"name": "EUROPE_SARAJEVO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 398,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Sarajevo"
					}
				},
				{
					"id": 504,
					"name": "EUROPE_SARATOV",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 399,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Saratov"
					}
				},
				{
					"id": 505,
					"name": "EUROPE_SIMFEROPOL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 400,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Simferopol"
					}
				},
				{
					"id": 506,
					"name": "EUROPE_SKOPJE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 401,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Skopje"
					}
				},
				{
					"id": 507,
					"name": "EUROPE_SOFIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 402,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Sofia"
					}
				},
				{
					"id": 508,
					"name": "EUROPE_STOCKHOLM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 403,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Stockholm"
					}
				},
				{
					"id": 509,
					"name": "EUROPE_TALLINN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 404,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Tallinn"
					}
				},
				{
					"id": 510,
					"name": "EUROPE_TIRANE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 405,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Tirane"
					}
				},
				{
					"id": 511,
					"name": "EUROPE_ULYANOVSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 406,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Ulyanovsk"
					}
				},
				{
					"id": 512,
					"name": "EUROPE_UZHGOROD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 407,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Uzhgorod"
					}
				},
				{
					"id": 513,
					"name": "EUROPE_VADUZ",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 408,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Vaduz"
					}
				},
				{
					"id": 514,
					"name": "EUROPE_VATICAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 409,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Vatican"
					}
				},
				{
					"id": 515,
					"name": "EUROPE_VIENNA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 410,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Vienna"
					}
				},
				{
					"id": 516,
					"name": "EUROPE_VILNIUS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 411,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Vilnius"
					}
				},
				{
					"id": 517,
					"name": "EUROPE_VOLGOGRAD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 412,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Volgograd"
					}
				},
				{
					"id": 518,
					"name": "EUROPE_WARSAW",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 413,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Warsaw"
					}
				},
				{
					"id": 519,
					"name": "EUROPE_ZAGREB",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 414,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Zagreb"
					}
				},
				{
					"id": 520,
					"name": "EUROPE_ZAPOROZHYE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 415,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Zaporozhye"
					}
				},
				{
					"id": 521,
					"name": "EUROPE_ZURICH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 416,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Europe/Zurich"
					}
				},
				{
					"id": 522,
					"name": "INDIAN_ANTANANARIVO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 417,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Antananarivo"
					}
				},
				{
					"id": 523,
					"name": "INDIAN_CHAGOS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 418,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Chagos"
					}
				},
				{
					"id": 524,
					"name": "INDIAN_CHRISTMAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 419,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Christmas"
					}
				},
				{
					"id": 525,
					"name": "INDIAN_COCOS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 420,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Cocos"
					}
				},
				{
					"id": 526,
					"name": "INDIAN_COMORO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 421,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Comoro"
					}
				},
				{
					"id": 527,
					"name": "INDIAN_KERGUELEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 422,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Kerguelen"
					}
				},
				{
					"id": 528,
					"name": "INDIAN_MAHE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 423,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Mahe"
					}
				},
				{
					"id": 529,
					"name": "INDIAN_MALDIVES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 424,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Maldives"
					}
				},
				{
					"id": 530,
					"name": "INDIAN_MAURITIUS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 425,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Mauritius"
					}
				},
				{
					"id": 531,
					"name": "INDIAN_MAYOTTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 426,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Mayotte"
					}
				},
				{
					"id": 532,
					"name": "INDIAN_REUNION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 427,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Indian/Reunion"
					}
				},
				{
					"id": 533,
					"name": "PACIFIC_APIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 428,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Apia"
					}
				},
				{
					"id": 534,
					"name": "PACIFIC_AUCKLAND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 429,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Auckland"
					}
				},
				{
					"id": 535,
					"name": "PACIFIC_BOUGAINVILLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 430,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Bougainville"
					}
				},
				{
					"id": 536,
					"name": "PACIFIC_CHATHAM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 431,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Chatham"
					}
				},
				{
					"id": 537,
					"name": "PACIFIC_CHUUK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 432,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Chuuk"
					}
				},
				{
					"id": 538,
					"name": "PACIFIC_EASTER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 433,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Easter"
					}
				},
				{
					"id": 539,
					"name": "PACIFIC_EFATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 434,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Efate"
					}
				},
				{
					"id": 540,
					"name": "PACIFIC_ENDERBURY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 435,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Enderbury"
					}
				},
				{
					"id": 541,
					"name": "PACIFIC_FAKAOFO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 436,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Fakaofo"
					}
				},
				{
					"id": 542,
					"name": "PACIFIC_FIJI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 437,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Fiji"
					}
				},
				{
					"id": 543,
					"name": "PACIFIC_FUNAFUTI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 438,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Funafuti"
					}
				},
				{
					"id": 544,
					"name": "PACIFIC_GALAPAGOS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 439,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Galapagos"
					}
				},
				{
					"id": 545,
					"name": "PACIFIC_GAMBIER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 440,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Gambier"
					}
				},
				{
					"id": 546,
					"name": "PACIFIC_GUADALCANAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 441,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Guadalcanal"
					}
				},
				{
					"id": 547,
					"name": "PACIFIC_GUAM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 442,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Guam"
					}
				},
				{
					"id": 548,
					"name": "PACIFIC_HONOLULU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 443,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Honolulu"
					}
				},
				{
					"id": 549,
					"name": "PACIFIC_KANTON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 444,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Kanton"
					}
				},
				{
					"id": 550,
					"name": "PACIFIC_KIRITIMATI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 445,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Kiritimati"
					}
				},
				{
					"id": 551,
					"name": "PACIFIC_KOSRAE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 446,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Kosrae"
					}
				},
				{
					"id": 552,
					"name": "PACIFIC_KWAJALEIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 447,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Kwajalein"
					}
				},
				{
					"id": 553,
					"name": "PACIFIC_MAJURO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 448,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Majuro"
					}
				},
				{
					"id": 554,
					"name": "PACIFIC_MARQUESAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 449,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Marquesas"
					}
				},
				{
					"id": 555,
					"name": "PACIFIC_MIDWAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 450,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Midway"
					}
				},
				{
					"id": 556,
					"name": "PACIFIC_NAURU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 451,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Nauru"
					}
				},
				{
					"id": 557,
					"name": "PACIFIC_NIUE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 452,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Niue"
					}
				},
				{
					"id": 558,
					"name": "PACIFIC_NORFOLK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 453,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Norfolk"
					}
				},
				{
					"id": 559,
					"name": "PACIFIC_NOUMEA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 454,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Noumea"
					}
				},
				{
					"id": 560,
					"name": "PACIFIC_PAGO_PAGO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 455,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Pago_Pago"
					}
				},
				{
					"id": 561,
					"name": "PACIFIC_PALAU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 456,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Palau"
					}
				},
				{
					"id": 562,
					"name": "PACIFIC_PITCAIRN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 457,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Pitcairn"
					}
				},
				{
					"id": 563,
					"name": "PACIFIC_POHNPEI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 458,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Pohnpei"
					}
				},
				{
					"id": 564,
					"name": "PACIFIC_PORT_MORESBY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 459,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Port_Moresby"
					}
				},
				{
					"id": 565,
					"name": "PACIFIC_RAROTONGA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 460,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Rarotonga"
					}
				},
				{
					"id": 566,
					"name": "PACIFIC_SAIPAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 461,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Saipan"
					}
				},
				{
					"id": 567,
					"name": "PACIFIC_TAHITI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 462,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Tahiti"
					}
				},
				{
					"id": 568,
					"name": "PACIFIC_TARAWA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 463,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Tarawa"
					}
				},
				{
					"id": 569,
					"name": "PACIFIC_TONGATAPU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 464,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Tongatapu"
					}
				},
				{
					"id": 570,
					"name": "PACIFIC_WAKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 465,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Wake"
					}
				},
				{
					"id": 571,
					"name": "PACIFIC_WALLIS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 466,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pacific/Wallis"
					}
				},
				{
					"id": 140,
					"name": "UTC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "utc"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						142,
						143,
						144,
						145,
						146,
						147,
						148,
						149,
						150,
						151,
						152,
						153,
						154,
						155,
						156,
						157,
						158,
						159,
						160,
						161,
						162,
						163,
						164,
						165,
						166,
						167,
						168,
						169,
						170,
						171,
						172,
						173,
						174,
						175,
						176,
						177,
						178,
						179,
						180,
						181,
						182,
						183,
						184,
						185,
						186,
						187,
						188,
						189,
						190,
						191,
						192,
						193,
						194,
						195,
						196,
						197,
						198,
						199,
						200,
						201,
						202,
						203,
						204,
						205,
						206,
						207,
						208,
						209,
						210,
						211,
						212,
						213,
						214,
						215,
						216,
						217,
						218,
						219,
						220,
						221,
						222,
						223,
						224,
						225,
						226,
						227,
						228,
						229,
						230,
						231,
						232,
						233,
						234,
						235,
						236,
						237,
						238,
						239,
						240,
						241,
						242,
						243,
						245,
						244,
						246,
						247,
						248,
						249,
						250,
						251,
						252,
						253,
						254,
						255,
						256,
						257,
						258,
						259,
						260,
						261,
						262,
						263,
						264,
						265,
						266,
						267,
						268,
						269,
						270,
						271,
						272,
						273,
						274,
						275,
						276,
						277,
						278,
						279,
						280,
						281,
						282,
						283,
						284,
						285,
						286,
						287,
						288,
						289,
						290,
						291,
						292,
						293,
						294,
						295,
						296,
						297,
						298,
						299,
						300,
						301,
						302,
						303,
						304,
						305,
						306,
						309,
						307,
						308,
						310,
						311,
						312,
						313,
						314,
						315,
						316,
						317,
						318,
						319,
						320,
						321,
						322,
						323,
						324,
						325,
						326,
						327,
						328,
						329,
						330,
						331,
						332,
						333,
						334,
						335,
						336,
						337,
						338,
						339,
						340,
						341,
						342,
						343,
						344,
						345,
						346,
						347,
						348,
						349,
						350,
						351,
						352,
						353,
						354,
						355,
						356,
						357,
						358,
						359,
						360,
						361,
						362,
						363,
						364,
						365,
						366,
						367,
						368,
						369,
						370,
						371,
						372,
						373,
						374,
						375,
						376,
						377,
						378,
						379,
						380,
						382,
						383,
						381,
						384,
						385,
						386,
						387,
						388,
						389,
						390,
						391,
						392,
						393,
						394,
						395,
						396,
						397,
						398,
						399,
						400,
						401,
						402,
						403,
						404,
						405,
						406,
						407,
						408,
						409,
						410,
						411,
						412,
						413,
						414,
						415,
						416,
						417,
						418,
						419,
						420,
						421,
						422,
						423,
						424,
						425,
						426,
						427,
						428,
						429,
						430,
						431,
						432,
						433,
						434,
						435,
						436,
						437,
						438,
						439,
						440,
						441,
						442,
						443,
						444,
						445,
						446,
						448,
						447,
						449,
						450,
						451,
						452,
						453,
						454,
						455,
						456,
						457,
						458,
						459,
						460,
						141,
						461,
						462,
						463,
						464,
						465,
						466,
						467,
						468,
						469,
						470,
						471,
						472,
						473,
						474,
						475,
						476,
						477,
						478,
						479,
						480,
						481,
						482,
						483,
						484,
						485,
						486,
						487,
						488,
						489,
						490,
						491,
						492,
						493,
						494,
						495,
						496,
						497,
						498,
						499,
						500,
						501,
						502,
						503,
						504,
						505,
						506,
						507,
						508,
						509,
						510,
						511,
						512,
						513,
						514,
						515,
						516,
						517,
						518,
						519,
						520,
						521,
						522,
						523,
						524,
						525,
						526,
						527,
						528,
						529,
						530,
						531,
						532,
						533,
						534,
						535,
						536,
						537,
						538,
						539,
						540,
						541,
						542,
						543,
						544,
						545,
						546,
						547,
						548,
						549,
						550,
						551,
						552,
						553,
						554,
						555,
						556,
						557,
						558,
						559,
						560,
						561,
						562,
						563,
						564,
						565,
						566,
						567,
						568,
						569,
						570,
						571,
						140
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/enums.ts",
					"line": 34,
					"character": 12
				}
			]
		},
		{
			"id": 572,
			"name": "UpdateType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "When updating records, the type specifies how data are updated."
					}
				]
			},
			"children": [
				{
					"id": 573,
					"name": "FULL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Will update the included fields and clear all unincluded fields."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 474,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "PUT"
					}
				},
				{
					"id": 574,
					"name": "PARTIAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Will only update the included fields. Fields not included will be unchanged."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 477,
							"character": 5
						}
					],
					"type": {
						"type": "literal",
						"value": "PATCH"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						573,
						574
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/enums.ts",
					"line": 472,
					"character": 12
				}
			]
		},
		{
			"id": 575,
			"name": "UserLocale",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user locale that should be used to format dates when using "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " as the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CellFormat",
						"target": 133,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 576,
					"name": "AFRIKAANS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 484,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "af"
					}
				},
				{
					"id": 577,
					"name": "ALBANIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 485,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sq"
					}
				},
				{
					"id": 578,
					"name": "ARABIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 486,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ar"
					}
				},
				{
					"id": 579,
					"name": "ARABIC_SAUDI_ARABIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 487,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ar-sa"
					}
				},
				{
					"id": 580,
					"name": "ARMENIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 488,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "hy-am"
					}
				},
				{
					"id": 581,
					"name": "AUSTRALIAN_ENGLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 489,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "en-au"
					}
				},
				{
					"id": 582,
					"name": "AUSTRIAN_GERMAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 490,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "de-at"
					}
				},
				{
					"id": 583,
					"name": "AZERBAIJANI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 491,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "az"
					}
				},
				{
					"id": 584,
					"name": "BAHASA_INDONESIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 492,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "id"
					}
				},
				{
					"id": 585,
					"name": "BAHASA_MALAYSIA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 493,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ms"
					}
				},
				{
					"id": 586,
					"name": "BELARUSIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 494,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "be"
					}
				},
				{
					"id": 587,
					"name": "BENGALI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 495,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "bn"
					}
				},
				{
					"id": 588,
					"name": "BOSNIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 496,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "bs"
					}
				},
				{
					"id": 589,
					"name": "BOSO_JOWO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 497,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "jv"
					}
				},
				{
					"id": 590,
					"name": "BRAZILIAN_PORTUGUESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 498,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "pt-br"
					}
				},
				{
					"id": 591,
					"name": "BRETON",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 499,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "br"
					}
				},
				{
					"id": 592,
					"name": "BRITISH_ENGLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 500,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "en-gb"
					}
				},
				{
					"id": 593,
					"name": "BULGARIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 501,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "bg"
					}
				},
				{
					"id": 594,
					"name": "BURMESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 502,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "my"
					}
				},
				{
					"id": 595,
					"name": "CANADIAN_ENGLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 503,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "en-ca"
					}
				},
				{
					"id": 596,
					"name": "CANADIAN_FRENCH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 504,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fr-ca"
					}
				},
				{
					"id": 597,
					"name": "CATALAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 505,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ca"
					}
				},
				{
					"id": 598,
					"name": "CHUVASH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 506,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "cv"
					}
				},
				{
					"id": 599,
					"name": "CZECH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 507,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "cs"
					}
				},
				{
					"id": 600,
					"name": "DANISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 508,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "da"
					}
				},
				{
					"id": 601,
					"name": "DUTCH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 509,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "nl"
					}
				},
				{
					"id": 602,
					"name": "ENGLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 510,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "en-us"
					}
				},
				{
					"id": 603,
					"name": "ESPERANTO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 511,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "eo"
					}
				},
				{
					"id": 604,
					"name": "ESTONIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 512,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "et"
					}
				},
				{
					"id": 605,
					"name": "EUSKARA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 513,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "eu"
					}
				},
				{
					"id": 606,
					"name": "FAROESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 514,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fo"
					}
				},
				{
					"id": 607,
					"name": "FINNISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 515,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fi"
					}
				},
				{
					"id": 608,
					"name": "FRENCH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 516,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fr"
					}
				},
				{
					"id": 609,
					"name": "FRISIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 517,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fy"
					}
				},
				{
					"id": 610,
					"name": "GALICIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 518,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "gl"
					}
				},
				{
					"id": 611,
					"name": "GEORGIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 519,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ka"
					}
				},
				{
					"id": 612,
					"name": "GERMAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 520,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "de"
					}
				},
				{
					"id": 613,
					"name": "HEBREW",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 521,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "he"
					}
				},
				{
					"id": 614,
					"name": "HINDI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 522,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "hi"
					}
				},
				{
					"id": 615,
					"name": "HRVATSKI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 523,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "hr"
					}
				},
				{
					"id": 616,
					"name": "HUNGARIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 524,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "hu"
					}
				},
				{
					"id": 617,
					"name": "ICELANDIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 525,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "is"
					}
				},
				{
					"id": 618,
					"name": "IRISH_ENGLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 526,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "en-ie"
					}
				},
				{
					"id": 619,
					"name": "ITALIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 527,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "it"
					}
				},
				{
					"id": 620,
					"name": "JAPANESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 528,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ja"
					}
				},
				{
					"id": 621,
					"name": "KHMER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 529,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "km"
					}
				},
				{
					"id": 622,
					"name": "KOREAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 530,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ko"
					}
				},
				{
					"id": 623,
					"name": "LATVIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 531,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "lv"
					}
				},
				{
					"id": 624,
					"name": "LITHUANIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 532,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "lt"
					}
				},
				{
					"id": 625,
					"name": "LUXEMBOURGISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 533,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "lb"
					}
				},
				{
					"id": 626,
					"name": "MACEDONIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 534,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "mk"
					}
				},
				{
					"id": 627,
					"name": "MALAYALAM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 535,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ml"
					}
				},
				{
					"id": 628,
					"name": "MARATHI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 536,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "mr"
					}
				},
				{
					"id": 629,
					"name": "MODERN_GREEK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 537,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "el"
					}
				},
				{
					"id": 630,
					"name": "MONTENEGRIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 538,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "me"
					}
				},
				{
					"id": 631,
					"name": "MOROCCAN_ARABIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 539,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ar-ma"
					}
				},
				{
					"id": 633,
					"name": "MOROCCO_CENTRAL_ATLAS_TAMAZIYT_LATIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 541,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "tzm_latn"
					}
				},
				{
					"id": 632,
					"name": "MOROCCO_CENTRAL_ATLAS_TAMAZIƔT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 540,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "tzm"
					}
				},
				{
					"id": 634,
					"name": "NEPALI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 542,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ne"
					}
				},
				{
					"id": 635,
					"name": "NEW_ZEALAND_ENGLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 543,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "en-nz"
					}
				},
				{
					"id": 636,
					"name": "NORWEGIAN_BOKMAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 544,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "nb"
					}
				},
				{
					"id": 637,
					"name": "NORWEGIAN_NYNORSK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 545,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "nn"
					}
				},
				{
					"id": 638,
					"name": "PERSIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 546,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fa"
					}
				},
				{
					"id": 639,
					"name": "POLISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 547,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "pl"
					}
				},
				{
					"id": 640,
					"name": "PORTUGUESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 548,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "pt"
					}
				},
				{
					"id": 641,
					"name": "ROMANIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 549,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ro"
					}
				},
				{
					"id": 642,
					"name": "RUSSIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 550,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ru"
					}
				},
				{
					"id": 643,
					"name": "SERBIAN_CYRILLIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 551,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sr-cyrl"
					}
				},
				{
					"id": 644,
					"name": "SERBIAN_LATIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 552,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sr"
					}
				},
				{
					"id": 645,
					"name": "SIMPLIFIED_CHINESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 553,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "zh-cn"
					}
				},
				{
					"id": 646,
					"name": "SINHALA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 554,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "si"
					}
				},
				{
					"id": 647,
					"name": "SLOVAK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 555,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sk"
					}
				},
				{
					"id": 648,
					"name": "SLOVENIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 556,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sl"
					}
				},
				{
					"id": 649,
					"name": "SPANISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 557,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "es"
					}
				},
				{
					"id": 650,
					"name": "SWEDISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 558,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sv"
					}
				},
				{
					"id": 651,
					"name": "SWISS_FRENCH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 559,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "fr-ch"
					}
				},
				{
					"id": 652,
					"name": "TAGALOG_FILIPINO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 560,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "tl-ph"
					}
				},
				{
					"id": 653,
					"name": "TALOSSAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 561,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "tzl"
					}
				},
				{
					"id": 654,
					"name": "TAMIL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 562,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ta"
					}
				},
				{
					"id": 655,
					"name": "THAI",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 563,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "th"
					}
				},
				{
					"id": 656,
					"name": "TIBETAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 564,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "bo"
					}
				},
				{
					"id": 657,
					"name": "TRADITIONAL_CHINESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 565,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "zh-tw"
					}
				},
				{
					"id": 658,
					"name": "TUNISIAN_ARABIC",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 566,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ar-tn"
					}
				},
				{
					"id": 659,
					"name": "TURKISH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 567,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "tr"
					}
				},
				{
					"id": 660,
					"name": "UKRAINIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 568,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "uk"
					}
				},
				{
					"id": 661,
					"name": "UZBEK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 569,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "uz"
					}
				},
				{
					"id": 662,
					"name": "VIETNAMESE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 570,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "vi"
					}
				},
				{
					"id": 663,
					"name": "WELSH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/enums.ts",
							"line": 571,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "cy"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						576,
						577,
						578,
						579,
						580,
						581,
						582,
						583,
						584,
						585,
						586,
						587,
						588,
						589,
						590,
						591,
						592,
						593,
						594,
						595,
						596,
						597,
						598,
						599,
						600,
						601,
						602,
						603,
						604,
						605,
						606,
						607,
						608,
						609,
						610,
						611,
						612,
						613,
						614,
						615,
						616,
						617,
						618,
						619,
						620,
						621,
						622,
						623,
						624,
						625,
						626,
						627,
						628,
						629,
						630,
						631,
						633,
						632,
						634,
						635,
						636,
						637,
						638,
						639,
						640,
						641,
						642,
						643,
						644,
						645,
						646,
						647,
						648,
						649,
						650,
						651,
						652,
						653,
						654,
						655,
						656,
						657,
						658,
						659,
						660,
						661,
						662,
						663
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/enums.ts",
					"line": 483,
					"character": 12
				}
			]
		},
		{
			"id": 1,
			"name": "AirtableClient",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Client for interacting with Airtable.\n\nThis client will handle and throttle requests to ensure that users will not overstep the rate limits set by Airtable."
					}
				]
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 50,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new AirtableClient",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 50,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "apiToken",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Token to use to interact with Airtable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5,
									"name": "requestOptions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows user to override configurations of the underlying "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " function."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 7,
													"name": "baseURL",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 14,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8,
													"name": "body",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 15,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "BodyInit"
																},
																"name": "BodyInit",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												},
												{
													"id": 41,
													"name": "cache",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A string indicating how the request will interact with the browser's cache to set request's cache."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1675,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "RequestCache"
														},
														"name": "RequestCache",
														"package": "typescript"
													}
												},
												{
													"id": 42,
													"name": "credentials",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1677,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "RequestCredentials"
														},
														"name": "RequestCredentials",
														"package": "typescript"
													}
												},
												{
													"id": 17,
													"name": "duplex",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Set to \"half\" to enable duplex streaming.\nWill be automatically set to \"half\" when using a ReadableStream as body.\nhttps://fetch.spec.whatwg.org/#enumdef-requestduplex"
															}
														],
														"modifierTags": [
															"@experimental"
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 26,
															"character": 4
														}
													],
													"type": {
														"type": "literal",
														"value": "half"
													}
												},
												{
													"id": 43,
													"name": "headers",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1679,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HeadersInit"
														},
														"name": "HeadersInit",
														"package": "typescript"
													}
												},
												{
													"id": 9,
													"name": "ignoreResponseError",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 16,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 44,
													"name": "integrity",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1681,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 45,
													"name": "keepalive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A boolean to set request's keepalive."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1683,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 40,
													"name": "method",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A string to set request's method."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1685,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 46,
													"name": "mode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1687,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "RequestMode"
														},
														"name": "RequestMode",
														"package": "typescript"
													}
												},
												{
													"id": 10,
													"name": "params",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 17,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 12,
													"name": "parseResponse",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 19,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 13,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																	"line": 19,
																	"character": 20
																}
															],
															"signatures": [
																{
																	"id": 14,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																			"line": 19,
																			"character": 20
																		}
																	],
																	"parameters": [
																		{
																			"id": 15,
																			"name": "responseText",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 47,
													"name": "priority",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1688,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "RequestPriority"
														},
														"name": "RequestPriority",
														"package": "typescript"
													}
												},
												{
													"id": 11,
													"name": "query",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 18,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 48,
													"name": "redirect",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1690,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "RequestRedirect"
														},
														"name": "RequestRedirect",
														"package": "typescript"
													}
												},
												{
													"id": 49,
													"name": "referrer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1692,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 50,
													"name": "referrerPolicy",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A referrer policy to set request's referrerPolicy."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1694,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "ReferrerPolicy"
														},
														"name": "ReferrerPolicy",
														"package": "typescript"
													}
												},
												{
													"id": 16,
													"name": "responseType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 20,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"qualifiedName": "ResponseType"
														},
														"name": "ResponseType",
														"package": "ofetch"
													}
												},
												{
													"id": 19,
													"name": "retry",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 29,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "literal",
																"value": false
															}
														]
													}
												},
												{
													"id": 20,
													"name": "retryDelay",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Delay between retries in milliseconds."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 31,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 21,
													"name": "retryStatusCodes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Default is [408, 409, 425, 429, 500, 502, 503, 504]"
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 33,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 51,
													"name": "signal",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An AbortSignal to set request's signal."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1696,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "AbortSignal"
																},
																"name": "AbortSignal",
																"package": "typescript"
															}
														]
													}
												},
												{
													"id": 18,
													"name": "timeout",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "timeout in milliseconds"
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 28,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 52,
													"name": "window",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Can only be null. Used to disassociate request from any Window."
															}
														]
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 1698,
															"character": 4
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 22,
													"name": "onRequest",
													"variant": "declaration",
													"kind": 2048,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 34,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 23,
															"name": "onRequest",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																	"line": 34,
																	"character": 4
																}
															],
															"parameters": [
																{
																	"id": 24,
																	"name": "context",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																			"qualifiedName": "FetchContext"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																					"qualifiedName": "ResponseType"
																				},
																				"name": "ResponseType",
																				"package": "ofetch"
																			}
																		],
																		"name": "FetchContext",
																		"package": "ofetch"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												},
												{
													"id": 25,
													"name": "onRequestError",
													"variant": "declaration",
													"kind": 2048,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 35,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 26,
															"name": "onRequestError",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																	"line": 35,
																	"character": 4
																}
															],
															"parameters": [
																{
																	"id": 27,
																	"name": "context",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																					"qualifiedName": "FetchContext"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																							"qualifiedName": "ResponseType"
																						},
																						"name": "ResponseType",
																						"package": "ofetch"
																					}
																				],
																				"name": "FetchContext",
																				"package": "ofetch"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 28,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {
																						"isExternal": true
																					},
																					"children": [
																						{
																							"id": 29,
																							"name": "error",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {
																								"isExternal": true
																							},
																							"sources": [
																								{
																									"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																									"line": 36,
																									"character": 8
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Error"
																								},
																								"name": "Error",
																								"package": "typescript"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								29
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																							"line": 35,
																							"character": 44
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												},
												{
													"id": 30,
													"name": "onResponse",
													"variant": "declaration",
													"kind": 2048,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 38,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 31,
															"name": "onResponse",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																	"line": 38,
																	"character": 4
																}
															],
															"parameters": [
																{
																	"id": 32,
																	"name": "context",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																					"qualifiedName": "FetchContext"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																							"qualifiedName": "ResponseType"
																						},
																						"name": "ResponseType",
																						"package": "ofetch"
																					}
																				],
																				"name": "FetchContext",
																				"package": "ofetch"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 33,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {
																						"isExternal": true
																					},
																					"children": [
																						{
																							"id": 34,
																							"name": "response",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {
																								"isExternal": true
																							},
																							"sources": [
																								{
																									"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																									"line": 39,
																									"character": 8
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																									"qualifiedName": "FetchResponse"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																											"qualifiedName": "ResponseType"
																										},
																										"name": "ResponseType",
																										"package": "ofetch"
																									}
																								],
																								"name": "FetchResponse",
																								"package": "ofetch"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								34
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																							"line": 38,
																							"character": 40
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												},
												{
													"id": 35,
													"name": "onResponseError",
													"variant": "declaration",
													"kind": 2048,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
															"line": 41,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 36,
															"name": "onResponseError",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																	"line": 41,
																	"character": 4
																}
															],
															"parameters": [
																{
																	"id": 37,
																	"name": "context",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																					"qualifiedName": "FetchContext"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																							"qualifiedName": "ResponseType"
																						},
																						"name": "ResponseType",
																						"package": "ofetch"
																					}
																				],
																				"name": "FetchContext",
																				"package": "ofetch"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 38,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {
																						"isExternal": true
																					},
																					"children": [
																						{
																							"id": 39,
																							"name": "response",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {
																								"isExternal": true
																							},
																							"sources": [
																								{
																									"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																									"line": 42,
																									"character": 8
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																									"qualifiedName": "FetchResponse"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																											"qualifiedName": "ResponseType"
																										},
																										"name": "ResponseType",
																										"package": "ofetch"
																									}
																								],
																								"name": "FetchResponse",
																								"package": "ofetch"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								39
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																							"line": 41,
																							"character": 45
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														7,
														8,
														41,
														42,
														17,
														43,
														9,
														44,
														45,
														40,
														46,
														10,
														12,
														47,
														11,
														48,
														49,
														50,
														16,
														19,
														20,
														21,
														51,
														18,
														52
													]
												},
												{
													"title": "Methods",
													"children": [
														22,
														25,
														30,
														35
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AirtableClient",
								"package": "@ti-platform/client-airtable"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actual underlying client to talk with Airtable."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 32,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
							"qualifiedName": "$Fetch"
						},
						"name": "$Fetch",
						"package": "ofetch"
					}
				},
				{
					"id": 54,
					"name": "queueOverall",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Queue for all requests to ensure proper rate limiting are taken into consideration."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 37,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../aide/dist/queue.d.ts",
							"qualifiedName": "Queue"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Queue",
						"package": "@ti-platform/aide"
					}
				},
				{
					"id": 55,
					"name": "queuePerBase",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Queue for each base to ensure proper rate limiting per base are taken into consideration."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 42,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../aide/dist/queue.d.ts",
									"qualifiedName": "Queue"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Queue",
								"package": "@ti-platform/aide"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 56,
					"name": "createRecords",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 81,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "createRecords",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create new records."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Refer to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CreateRecordsResponse",
												"target": 677,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 81,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 58,
									"name": "RequestFields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to set when creating the records."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59,
									"name": "ResponseFields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields returned after creation, usually should just match the "
											},
											{
												"kind": "code",
												"text": "`RequestFields`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"default": {
										"type": "reference",
										"target": 58,
										"name": "RequestFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 60,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Refer to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CreateRecordsRequest",
												"target": 670,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 63,
													"name": "baseId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier for the base."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 64,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 62,
													"name": "records",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Records to create. Maximum of 10."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/create-records.ts",
															"line": 31,
															"character": 8
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"target": 58,
																"name": "RequestFields",
																"package": "@ti-platform/client-airtable",
																"refersToTypeParameter": true
															},
															{
																"type": "rest",
																"elementType": {
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"target": 58,
																		"name": "RequestFields",
																		"package": "@ti-platform/client-airtable",
																		"refersToTypeParameter": true
																	}
																}
															}
														]
													}
												},
												{
													"id": 65,
													"name": "returnFieldsByFieldId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 34,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 64,
													"name": "tableIdOrName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 67,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 66,
													"name": "typecast",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 41,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														63,
														62,
														65,
														64,
														66
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 67,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 68,
													"name": "records",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The records that were created. Refer to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "IndividualRecord",
																"target": 850,
																"tsLinkText": ""
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/create-records.ts",
															"line": 47,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 69,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 71,
																		"name": "createdTime",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Date and time of when the record was created."
																				}
																			]
																		},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/shared.ts",
																				"line": 98,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Date"
																			},
																			"name": "Date",
																			"package": "typescript"
																		}
																	},
																	{
																		"id": 72,
																		"name": "fields",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Fields of the records."
																				}
																			]
																		},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/shared.ts",
																				"line": 101,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 59,
																			"name": "ResponseFields",
																			"package": "@ti-platform/client-airtable",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"id": 70,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Identifier for the record."
																				}
																			]
																		},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/shared.ts",
																				"line": 95,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			71,
																			72,
																			70
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
																		"line": 58,
																		"character": 26
																	}
																]
															}
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														68
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 73,
					"name": "deleteRecords",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "deleteRecords",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete records."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Refer to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DeleteRecordsResponse",
												"target": 692,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 96,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Refer to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DeleteRecordsRequest",
												"target": 688,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 76,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 78,
													"name": "baseId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier for the base."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 64,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 77,
													"name": "records",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "List of record IDs to delete. Maximum of 10."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/delete-records.ts",
															"line": 23,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 79,
													"name": "tableIdOrName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 67,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														78,
														77,
														79
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 80,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 81,
													"name": "records",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "List of records that has been deleted."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/delete-records.ts",
															"line": 43,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 82,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 84,
																		"name": "deleted",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "True if record was deleted."
																				}
																			]
																		},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/delete-records.ts",
																				"line": 47,
																				"character": 8
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "boolean"
																		}
																	},
																	{
																		"id": 83,
																		"name": "id",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"comment": {
																			"summary": [
																				{
																					"kind": "text",
																					"text": "Identifier of record that was deleted."
																				}
																			]
																		},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/delete-records.ts",
																				"line": 45,
																				"character": 8
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			84,
																			83
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "packages/client-airtable/src/records/delete-records.ts",
																		"line": 43,
																		"character": 19
																	}
																]
															}
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														81
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 130,
					"name": "getQueueForBase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 130,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "getQueueForBase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 130,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 132,
									"name": "baseId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../aide/dist/queue.d.ts",
									"qualifiedName": "Queue"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Queue",
								"package": "@ti-platform/aide"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "listRecords",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 103,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "listRecords",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 103,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 87,
									"name": "Fields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 88,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 89,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 103,
													"name": "baseId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier for the base."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 64,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 105,
													"name": "cellFormat",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The format that should be used for cell values. Defaults to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "CellFormat.JSON",
																"target": 134,
																"tsLinkText": ""
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 28,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 133,
														"name": "CellFormat",
														"package": "@ti-platform/client-airtable"
													}
												},
												{
													"id": 90,
													"name": "fields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Only data for fields whose names or IDs are in this list will be included in the result. If you don't need\nevery field, you can use this parameter to reduce the amount of data transferred.\n\nNote Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may\ncause your requests to exceed this limit."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 58,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 855,
														"typeArguments": [
															{
																"type": "templateLiteral",
																"head": "",
																"tail": [
																	[
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Extract"
																			},
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"target": 87,
																						"name": "Fields",
																						"package": "@ti-platform/client-airtable",
																						"refersToTypeParameter": true
																					}
																				},
																				{
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					]
																				}
																			],
																			"name": "Extract",
																			"package": "typescript"
																		},
																		""
																	]
																]
															}
														],
														"name": "UnionToTuple",
														"package": "@ti-platform/client-airtable"
													}
												},
												{
													"id": 91,
													"name": "filterByFormula",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A formula used to filter records. The formula will be evaluated for each record, and if the result is not\n"
															},
															{
																"kind": "code",
																"text": "`0`"
															},
															{
																"kind": "text",
																"text": ", "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": ", ``, "
															},
															{
																"kind": "code",
																"text": "`NaN`"
															},
															{
																"kind": "text",
																"text": ", "
															},
															{
																"kind": "code",
																"text": "`[]`"
															},
															{
																"kind": "text",
																"text": ", or "
															},
															{
																"kind": "code",
																"text": "`#Error!`"
															},
															{
																"kind": "text",
																"text": " the record will be included in the response. We recommend testing\nyour formula in the Formula field UI before using it in your API request.\n\nIf combined with the "
															},
															{
																"kind": "code",
																"text": "`view`"
															},
															{
																"kind": "text",
																"text": " parameter, only records in that view which satisfy the formula will be returned.\n\nFormulas can use field names, or field id's inside of the formula.\n\nNote Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may\ncause your requests to exceed this limit."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 72,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 92,
													"name": "maxRecords",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The maximum total number of records that will be returned in your requests. If this value is larger than\n"
															},
															{
																"kind": "code",
																"text": "`pageSize`"
															},
															{
																"kind": "text",
																"text": " (which is 100 by default), you may have to load multiple pages to reach this total."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 78,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 93,
													"name": "offset",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "To fetch the next page of records, include offset from the previous request in the next request's parameters."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 83,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 94,
													"name": "pageSize",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The number of records returned in each request. Must be less than or equal to 100. Default is 100."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 88,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 95,
													"name": "recordMetadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An optional field that, if specified, includes commentCount on each record returned."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 93,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "literal",
															"value": "commentCount"
														}
													}
												},
												{
													"id": 106,
													"name": "returnFieldsByFieldId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 34,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 96,
													"name": "sort",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of sort objects that specifies how the records will be ordered. Each sort object must have a field key\nspecifying the name of the field to sort on, and an optional direction key that is either "
															},
															{
																"kind": "code",
																"text": "`asc`"
															},
															{
																"kind": "text",
																"text": " or "
															},
															{
																"kind": "code",
																"text": "`desc`"
															},
															{
																"kind": "text",
																"text": ".\nThe default direction is "
															},
															{
																"kind": "code",
																"text": "`asc`"
															},
															{
																"kind": "text",
																"text": ".\n\nThe sort parameter overrides the sorting of the view specified in the view parameter. If neither the sort nor\nthe view parameter is included, the order of records is arbitrary."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 103,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 97,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 99,
																		"name": "direction",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {
																			"isOptional": true
																		},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/list-records.ts",
																				"line": 105,
																				"character": 12
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 136,
																			"name": "Direction",
																			"package": "@ti-platform/client-airtable"
																		}
																	},
																	{
																		"id": 98,
																		"name": "field",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/list-records.ts",
																				"line": 104,
																				"character": 12
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			99,
																			98
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "packages/client-airtable/src/records/list-records.ts",
																		"line": 103,
																		"character": 21
																	}
																]
															}
														}
													}
												},
												{
													"id": 104,
													"name": "tableIdOrName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 67,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 100,
													"name": "timeZone",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The time zone that should be used to format dates when using "
															},
															{
																"kind": "code",
																"text": "`string`"
															},
															{
																"kind": "text",
																"text": " as the "
															},
															{
																"kind": "code",
																"text": "`cellFormat`"
															},
															{
																"kind": "text",
																"text": ". This parameter is\nrequired when using "
															},
															{
																"kind": "code",
																"text": "`string`"
															},
															{
																"kind": "text",
																"text": " as the "
															},
															{
																"kind": "code",
																"text": "`cellFormat`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 112,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 139,
														"name": "Timezone",
														"package": "@ti-platform/client-airtable"
													}
												},
												{
													"id": 107,
													"name": "typecast",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/shared.ts",
															"line": 41,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 101,
													"name": "userLocale",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user locale that should be used to format dates when using "
															},
															{
																"kind": "code",
																"text": "`string`"
															},
															{
																"kind": "text",
																"text": " as the "
															},
															{
																"kind": "code",
																"text": "`cellFormat`"
															},
															{
																"kind": "text",
																"text": ". This parameter\nis required when using "
															},
															{
																"kind": "code",
																"text": "`string`"
															},
															{
																"kind": "text",
																"text": " as the "
															},
															{
																"kind": "code",
																"text": "`cellFormat`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 118,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 575,
														"name": "UserLocale",
														"package": "@ti-platform/client-airtable"
													}
												},
												{
													"id": 102,
													"name": "view",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The name or ID of a view in the table. If set, only the records in that view will be returned. The records\nwill be sorted according to the order of the view unless the "
															},
															{
																"kind": "code",
																"text": "`sort`"
															},
															{
																"kind": "text",
																"text": " parameter is included, which overrides\nthat order. Fields hidden in this view will be returned in the results. To only return a subset of fields,\nuse the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " parameter."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 126,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														103,
														105,
														90,
														91,
														92,
														93,
														94,
														95,
														106,
														96,
														104,
														100,
														107,
														101,
														102
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 108,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 109,
													"name": "offset",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If there are more records, the response will contain an offset. Pass this offset into the next request to fetch\nthe next page of records."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 151,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 110,
													"name": "records",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Refer to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "IndividualRecord",
																"target": 850,
																"tsLinkText": ""
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/list-records.ts",
															"line": 154,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 850,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 87,
																			"name": "Fields",
																			"package": "@ti-platform/client-airtable",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "IndividualRecord",
																	"package": "@ti-platform/client-airtable"
																},
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 111,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 112,
																				"name": "commentCount",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {
																					"isOptional": true
																				},
																				"comment": {
																					"summary": [
																						{
																							"kind": "text",
																							"text": "The number of comments (if there are any) on the record.\n\nThe recordMetadata query parameter must include \"commentCount\" in order to receive this."
																						}
																					]
																				},
																				"sources": [
																					{
																						"fileName": "packages/client-airtable/src/records/list-records.ts",
																						"line": 160,
																						"character": 8
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					112
																				]
																			}
																		],
																		"sources": [
																			{
																				"fileName": "packages/client-airtable/src/records/list-records.ts",
																				"line": 154,
																				"character": 46
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														109,
														110
													]
												}
											],
											"sources": [
												{
													"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
													"line": 58,
													"character": 26
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 122,
					"name": "queueRequest",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 125,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 123,
							"name": "queueRequest",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 125,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 124,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 125,
									"name": "baseId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 126,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 127,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/client.ts",
													"line": 125,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 128,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/client.ts",
															"line": 125,
															"character": 52
														}
													],
													"parameters": [
														{
															"id": 129,
															"name": "$fetch",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
																	"qualifiedName": "$Fetch"
																},
																"name": "$Fetch",
																"package": "ofetch"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 124,
																"name": "R",
																"package": "@ti-platform/client-airtable",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 124,
										"name": "R",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 113,
					"name": "updateRecords",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 109,
							"character": 11
						},
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 113,
							"character": 11
						},
						{
							"fileName": "packages/client-airtable/src/client.ts",
							"line": 117,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 114,
							"name": "updateRecords",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 109,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 115,
									"name": "RequestFields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 116,
									"name": "ResponseFields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"default": {
										"type": "reference",
										"target": 115,
										"name": "RequestFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 117,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 739,
										"typeArguments": [
											{
												"type": "reference",
												"target": 115,
												"name": "RequestFields",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										],
										"name": "UpdateRecordsRequestNonUpsert",
										"package": "@ti-platform/client-airtable"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 770,
										"typeArguments": [
											{
												"type": "reference",
												"target": 116,
												"name": "ResponseFields",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										],
										"name": "UpdateRecordsResponseNonUpsert",
										"package": "@ti-platform/client-airtable"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 118,
							"name": "updateRecords",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/client.ts",
									"line": 113,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 119,
									"name": "RequestFields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 120,
									"name": "ResponseFields",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"default": {
										"type": "reference",
										"target": 119,
										"name": "RequestFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 121,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 753,
										"typeArguments": [
											{
												"type": "reference",
												"target": 119,
												"name": "RequestFields",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										],
										"name": "UpdateRecordsRequestUpsert",
										"package": "@ti-platform/client-airtable"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 772,
										"typeArguments": [
											{
												"type": "reference",
												"target": 120,
												"name": "ResponseFields",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										],
										"name": "UpdateRecordsResponseUpsert",
										"package": "@ti-platform/client-airtable"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"children": [
						53,
						54,
						55
					]
				},
				{
					"title": "Methods",
					"children": [
						56,
						73,
						130,
						85,
						122,
						113
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/client.ts",
					"line": 28,
					"character": 13
				}
			]
		},
		{
			"id": 670,
			"name": "CreateRecordsRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request data for creating records."
					}
				]
			},
			"children": [
				{
					"id": 672,
					"name": "baseId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier for the base."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 671,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Records to create. Maximum of 10."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/create-records.ts",
							"line": 31,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 676,
								"name": "Fields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							},
							{
								"type": "rest",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 676,
										"name": "Fields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								}
							}
						]
					}
				},
				{
					"id": 674,
					"name": "returnFieldsByFieldId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 673,
					"name": "tableIdOrName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 675,
					"name": "typecast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						672,
						671,
						674,
						673,
						675
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/create-records.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 676,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			]
		},
		{
			"id": 677,
			"name": "CreateRecordsResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Response for endpoint that create records."
					}
				]
			},
			"children": [
				{
					"id": 678,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The records that were created. Refer to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "IndividualRecord",
								"target": 850,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/create-records.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 679,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 681,
										"name": "createdTime",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "Date and time of when the record was created."
												}
											]
										},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/shared.ts",
												"line": 98,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									},
									{
										"id": 682,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "Fields of the records."
												}
											]
										},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/shared.ts",
												"line": 101,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 683,
											"name": "Fields",
											"package": "@ti-platform/client-airtable",
											"refersToTypeParameter": true
										}
									},
									{
										"id": 680,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "Identifier for the record."
												}
											]
										},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/shared.ts",
												"line": 95,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											681,
											682,
											680
										]
									}
								],
								"sources": [
									{
										"fileName": "common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
										"line": 58,
										"character": 26
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						678
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/create-records.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 683,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			]
		},
		{
			"id": 688,
			"name": "DeleteRecordsRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request data for deleting records."
					}
				]
			},
			"children": [
				{
					"id": 690,
					"name": "baseId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier for the base."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 689,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of record IDs to delete. Maximum of 10."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/delete-records.ts",
							"line": 23,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 691,
					"name": "tableIdOrName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						690,
						689,
						691
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/delete-records.ts",
					"line": 20,
					"character": 12
				}
			]
		},
		{
			"id": 692,
			"name": "DeleteRecordsResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Response data after deleting records."
					}
				]
			},
			"children": [
				{
					"id": 693,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of records that has been deleted."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/delete-records.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 694,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 696,
										"name": "deleted",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "True if record was deleted."
												}
											]
										},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/delete-records.ts",
												"line": 47,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									{
										"id": 695,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "Identifier of record that was deleted."
												}
											]
										},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/delete-records.ts",
												"line": 45,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											696,
											695
										]
									}
								],
								"sources": [
									{
										"fileName": "packages/client-airtable/src/records/delete-records.ts",
										"line": 43,
										"character": 19
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						693
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/delete-records.ts",
					"line": 41,
					"character": 12
				}
			]
		},
		{
			"id": 850,
			"name": "IndividualRecord",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An individual record."
					}
				]
			},
			"children": [
				{
					"id": 852,
					"name": "createdTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date and time of when the record was created."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 98,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 853,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields of the records."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 101,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 854,
						"name": "Fields",
						"package": "@ti-platform/client-airtable",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 851,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier for the record."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 95,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						852,
						853,
						851
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 854,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			]
		},
		{
			"id": 702,
			"name": "ListRecordsRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data for fetching the list of records."
					}
				]
			},
			"children": [
				{
					"id": 716,
					"name": "baseId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier for the base."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 718,
					"name": "cellFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The format that should be used for cell values. Defaults to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CellFormat.JSON",
								"target": 134,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 133,
						"name": "CellFormat",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 703,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Only data for fields whose names or IDs are in this list will be included in the result. If you don't need\nevery field, you can use this parameter to reduce the amount of data transferred.\n\nNote Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may\ncause your requests to exceed this limit."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 58,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": 855,
						"typeArguments": [
							{
								"type": "reference",
								"target": 721,
								"name": "Fields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "UnionToTuple",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 704,
					"name": "filterByFormula",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A formula used to filter records. The formula will be evaluated for each record, and if the result is not\n"
							},
							{
								"kind": "code",
								"text": "`0`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ", ``, "
							},
							{
								"kind": "code",
								"text": "`NaN`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`[]`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`#Error!`"
							},
							{
								"kind": "text",
								"text": " the record will be included in the response. We recommend testing\nyour formula in the Formula field UI before using it in your API request.\n\nIf combined with the "
							},
							{
								"kind": "code",
								"text": "`view`"
							},
							{
								"kind": "text",
								"text": " parameter, only records in that view which satisfy the formula will be returned.\n\nFormulas can use field names, or field id's inside of the formula.\n\nNote Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may\ncause your requests to exceed this limit."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 72,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 705,
					"name": "maxRecords",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum total number of records that will be returned in your requests. If this value is larger than\n"
							},
							{
								"kind": "code",
								"text": "`pageSize`"
							},
							{
								"kind": "text",
								"text": " (which is 100 by default), you may have to load multiple pages to reach this total."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 78,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 706,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "To fetch the next page of records, include offset from the previous request in the next request's parameters."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 83,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 707,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of records returned in each request. Must be less than or equal to 100. Default is 100."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 88,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 708,
					"name": "recordMetadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional field that, if specified, includes commentCount on each record returned."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 93,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "literal",
							"value": "commentCount"
						}
					}
				},
				{
					"id": 719,
					"name": "returnFieldsByFieldId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 709,
					"name": "sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of sort objects that specifies how the records will be ordered. Each sort object must have a field key\nspecifying the name of the field to sort on, and an optional direction key that is either "
							},
							{
								"kind": "code",
								"text": "`asc`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`desc`"
							},
							{
								"kind": "text",
								"text": ".\nThe default direction is "
							},
							{
								"kind": "code",
								"text": "`asc`"
							},
							{
								"kind": "text",
								"text": ".\n\nThe sort parameter overrides the sorting of the view specified in the view parameter. If neither the sort nor\nthe view parameter is included, the order of records is arbitrary."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 103,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 710,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 712,
										"name": "direction",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/list-records.ts",
												"line": 105,
												"character": 12
											}
										],
										"type": {
											"type": "reference",
											"target": 136,
											"name": "Direction",
											"package": "@ti-platform/client-airtable"
										}
									},
									{
										"id": 711,
										"name": "field",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/list-records.ts",
												"line": 104,
												"character": 12
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											712,
											711
										]
									}
								],
								"sources": [
									{
										"fileName": "packages/client-airtable/src/records/list-records.ts",
										"line": 103,
										"character": 21
									}
								]
							}
						}
					}
				},
				{
					"id": 717,
					"name": "tableIdOrName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 713,
					"name": "timeZone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The time zone that should be used to format dates when using "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": " as the "
							},
							{
								"kind": "code",
								"text": "`cellFormat`"
							},
							{
								"kind": "text",
								"text": ". This parameter is\nrequired when using "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": " as the "
							},
							{
								"kind": "code",
								"text": "`cellFormat`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 112,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": 139,
						"name": "Timezone",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 720,
					"name": "typecast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 714,
					"name": "userLocale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user locale that should be used to format dates when using "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": " as the "
							},
							{
								"kind": "code",
								"text": "`cellFormat`"
							},
							{
								"kind": "text",
								"text": ". This parameter\nis required when using "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": " as the "
							},
							{
								"kind": "code",
								"text": "`cellFormat`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 118,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": 575,
						"name": "UserLocale",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 715,
					"name": "view",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name or ID of a view in the table. If set, only the records in that view will be returned. The records\nwill be sorted according to the order of the view unless the "
							},
							{
								"kind": "code",
								"text": "`sort`"
							},
							{
								"kind": "text",
								"text": " parameter is included, which overrides\nthat order. Fields hidden in this view will be returned in the results. To only return a subset of fields,\nuse the "
							},
							{
								"kind": "code",
								"text": "`fields`"
							},
							{
								"kind": "text",
								"text": " parameter."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 126,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						716,
						718,
						703,
						704,
						705,
						706,
						707,
						708,
						719,
						709,
						717,
						713,
						720,
						714,
						715
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/list-records.ts",
					"line": 49,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 721,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of fields to include in resulting data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 722,
			"name": "ListRecordsResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Response data for the records that were requested."
					}
				]
			},
			"children": [
				{
					"id": 723,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If there are more records, the response will contain an offset. Pass this offset into the next request to fetch\nthe next page of records."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 151,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 724,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Refer to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "IndividualRecord",
								"target": 850,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 154,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 850,
									"typeArguments": [
										{
											"type": "reference",
											"target": 727,
											"name": "Fields",
											"package": "@ti-platform/client-airtable",
											"refersToTypeParameter": true
										}
									],
									"name": "IndividualRecord",
									"package": "@ti-platform/client-airtable"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 725,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 726,
												"name": "commentCount",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The number of comments (if there are any) on the record.\n\nThe recordMetadata query parameter must include \"commentCount\" in order to receive this."
														}
													]
												},
												"sources": [
													{
														"fileName": "packages/client-airtable/src/records/list-records.ts",
														"line": 160,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													726
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/client-airtable/src/records/list-records.ts",
												"line": 154,
												"character": 46
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						723,
						724
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/list-records.ts",
					"line": 146,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 727,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mapping of fields to return to their type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			]
		},
		{
			"id": 739,
			"name": "UpdateRecordsRequestNonUpsert",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request data for updating records."
					}
				]
			},
			"children": [
				{
					"id": 748,
					"name": "baseId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier for the base."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 747,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Method to use when updating data."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 572,
						"name": "UpdateType",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 740,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of records to update. Max of 10."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/update-records.ts",
							"line": 45,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reflection",
								"declaration": {
									"id": 741,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 743,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields to update"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/update-records.ts",
													"line": 49,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"target": 752,
												"name": "Fields",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 742,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifier for the record to update."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/update-records.ts",
													"line": 47,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												743,
												742
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/update-records.ts",
											"line": 45,
											"character": 31
										}
									]
								}
							},
							{
								"type": "rest",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 744,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 746,
													"name": "fields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Fields to update"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/update-records.ts",
															"line": 49,
															"character": 12
														}
													],
													"type": {
														"type": "reference",
														"target": 752,
														"name": "Fields",
														"package": "@ti-platform/client-airtable",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 745,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Identifier for the record to update."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/update-records.ts",
															"line": 47,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														746,
														745
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/update-records.ts",
													"line": 45,
													"character": 31
												}
											]
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 750,
					"name": "returnFieldsByFieldId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 749,
					"name": "tableIdOrName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 751,
					"name": "typecast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						748,
						747,
						740,
						750,
						749,
						751
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 752,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			]
		},
		{
			"id": 753,
			"name": "UpdateRecordsRequestUpsert",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request data for upserting records."
					}
				]
			},
			"children": [
				{
					"id": 763,
					"name": "baseId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier for the base."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 762,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Method to use when updating data."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 572,
						"name": "UpdateType",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 754,
					"name": "performUpsert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enables upsert behavior when set.\n\n"
							},
							{
								"kind": "code",
								"text": "`fieldsToMergeOn`"
							},
							{
								"kind": "text",
								"text": " will be used as an external ID to match records for updates. For records where no match is\nfound, a new Airtable record will be created."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/update-records.ts",
							"line": 86,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 755,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 756,
									"name": "fieldsToMergeOn",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array with at least one and at most three field names or IDs. IDs must uniquely identify a single\nrecord. These cannot be computed fields (formulas, lookups, rollups), and must be one of the following\ntypes: number, text, long text, single select, multiple select, date."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/update-records.ts",
											"line": 92,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										756
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/update-records.ts",
									"line": 86,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 757,
					"name": "records",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of records to update. Max of 10."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/update-records.ts",
							"line": 96,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reflection",
								"declaration": {
									"id": 758,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 759,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields to update"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/update-records.ts",
													"line": 98,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"target": 767,
												"name": "Fields",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												759
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/update-records.ts",
											"line": 96,
											"character": 31
										}
									]
								}
							},
							{
								"type": "rest",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reflection",
										"declaration": {
											"id": 760,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 761,
													"name": "fields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Fields to update"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/client-airtable/src/records/update-records.ts",
															"line": 98,
															"character": 12
														}
													],
													"type": {
														"type": "reference",
														"target": 767,
														"name": "Fields",
														"package": "@ti-platform/client-airtable",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														761
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/update-records.ts",
													"line": 96,
													"character": 31
												}
											]
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 765,
					"name": "returnFieldsByFieldId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 764,
					"name": "tableIdOrName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 766,
					"name": "typecast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						763,
						762,
						754,
						757,
						765,
						764,
						766
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 78,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 767,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			]
		},
		{
			"id": 816,
			"name": "BaseAndTablePathParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 62,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 817,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 818,
							"name": "baseId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifier for the base."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 819,
							"name": "tableIdOrName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifier or name for the table. Preference is to use the ID which is unchanging."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								818,
								819
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 62,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 834,
			"name": "BaseTableAndRecordPathParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 76,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 816,
						"name": "BaseAndTablePathParams",
						"package": "@ti-platform/client-airtable"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 835,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 836,
									"name": "recordId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Identifier for the record."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 78,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										836
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 76,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 791,
			"name": "CommonRequestParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 24,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 792,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 793,
							"name": "cellFormat",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The format that should be used for cell values. Defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CellFormat.JSON",
										"target": 134,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 133,
								"name": "CellFormat",
								"package": "@ti-platform/client-airtable"
							}
						},
						{
							"id": 794,
							"name": "returnFieldsByFieldId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which\nreturns field objects where the key is the field name."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 795,
							"name": "typecast",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter\nis passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for\nintegrating with 3rd party data sources."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								793,
								794,
								795
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 24,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 858,
			"name": "ExtendSchemaWithFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 110,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 861,
					"name": "Schema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 862,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 863,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/shared.ts",
													"line": 111,
													"character": 31
												}
											],
											"type": {
												"type": "query",
												"queryType": {
													"type": "reference",
													"target": 776,
													"name": "SCHEMA_RECORD_FIELDS",
													"package": "@ti-platform/client-airtable"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												863
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 111,
											"character": 29
										}
									]
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				},
				{
					"id": 864,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 865,
					"name": "Options",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 866,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 867,
									"name": "nonEmpty",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 113,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										867
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 113,
									"character": 20
								}
							]
						}
					},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 868,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 869,
									"name": "nonEmpty",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 113,
											"character": 46
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										869
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 113,
									"character": 44
								}
							]
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "TypeOf"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 861,
								"name": "Schema",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeOf",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 859,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 860,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 114,
											"character": 23
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "nonEmpty"
											},
											"objectType": {
												"type": "reference",
												"target": 865,
												"name": "Options",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/non-empty-object.d.ts",
												"qualifiedName": "NonEmptyObject"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 864,
													"name": "Fields",
													"package": "@ti-platform/client-airtable",
													"refersToTypeParameter": true
												}
											],
											"name": "NonEmptyObject",
											"package": "type-fest"
										},
										"falseType": {
											"type": "reference",
											"target": 864,
											"name": "Fields",
											"package": "@ti-platform/client-airtable",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										860
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 114,
									"character": 21
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 870,
			"name": "ExtendSchemaWithFieldsForRecords",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 117,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 875,
					"name": "Schema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 876,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 877,
											"name": "records",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/shared.ts",
													"line": 119,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodArray"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodObject"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 878,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 879,
																			"name": "fields",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/client-airtable/src/records/shared.ts",
																					"line": 119,
																					"character": 38
																				}
																			],
																			"type": {
																				"type": "query",
																				"queryType": {
																					"type": "reference",
																					"target": 776,
																					"name": "SCHEMA_RECORD_FIELDS",
																					"package": "@ti-platform/client-airtable"
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				879
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/client-airtable/src/records/shared.ts",
																			"line": 119,
																			"character": 36
																		}
																	]
																}
															}
														],
														"name": "ZodObject",
														"package": "zod"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "atleastone"
															},
															{
																"type": "literal",
																"value": "many"
															}
														]
													}
												],
												"name": "ZodArray",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												877
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 118,
											"character": 29
										}
									]
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				},
				{
					"id": 880,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				},
				{
					"id": 881,
					"name": "Options",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 882,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 883,
									"name": "nonEmpty",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 122,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										883
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 122,
									"character": 20
								}
							]
						}
					},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 884,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 885,
									"name": "nonEmpty",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 122,
											"character": 46
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										885
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 122,
									"character": 44
								}
							]
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "TypeOf"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 875,
								"name": "Schema",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeOf",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 871,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 872,
									"name": "records",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 124,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intersection",
											"types": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "records"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
																"qualifiedName": "TypeOf"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 875,
																	"name": "Schema",
																	"package": "@ti-platform/client-airtable",
																	"refersToTypeParameter": true
																}
															],
															"name": "TypeOf",
															"package": "zod"
														}
													}
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 873,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 874,
																"name": "fields",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "packages/client-airtable/src/records/shared.ts",
																		"line": 126,
																		"character": 12
																	}
																],
																"type": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "nonEmpty"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 881,
																			"name": "Options",
																			"package": "@ti-platform/client-airtable",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "literal",
																		"value": true
																	},
																	"trueType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/non-empty-object.d.ts",
																			"qualifiedName": "NonEmptyObject"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 880,
																				"name": "Fields",
																				"package": "@ti-platform/client-airtable",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "NonEmptyObject",
																		"package": "type-fest"
																	},
																	"falseType": {
																		"type": "reference",
																		"target": 880,
																		"name": "Fields",
																		"package": "@ti-platform/client-airtable",
																		"refersToTypeParameter": true
																	}
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	874
																]
															}
														],
														"sources": [
															{
																"fileName": "packages/client-airtable/src/records/shared.ts",
																"line": 125,
																"character": 44
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										872
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 123,
									"character": 21
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 777,
			"name": "RecordFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fields of a record."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/non-empty-object.d.ts",
					"qualifiedName": "NonEmptyObject"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				],
				"name": "NonEmptyObject",
				"package": "type-fest"
			}
		},
		{
			"id": 803,
			"name": "RequestMethod",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 50,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 804,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 805,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method to use when updating data."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 572,
								"name": "UpdateType",
								"package": "@ti-platform/client-airtable"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								805
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/shared.ts",
							"line": 50,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 855,
			"name": "UnionToTuple",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 105,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 856,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 857,
					"name": "R",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "reference",
					"target": 856,
					"name": "U",
					"package": "@ti-platform/client-airtable",
					"refersToTypeParameter": true
				},
				"objectType": {
					"type": "mapped",
					"parameter": "S",
					"parameterType": {
						"type": "reference",
						"target": 856,
						"name": "U",
						"package": "@ti-platform/client-airtable",
						"refersToTypeParameter": true
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Exclude"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 856,
									"name": "U",
									"package": "@ti-platform/client-airtable",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/records/shared.ts",
										"qualifiedName": "S"
									},
									"name": "S",
									"package": "@ti-platform/client-airtable",
									"refersToTypeParameter": true
								}
							],
							"name": "Exclude",
							"package": "typescript"
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "tuple",
							"elements": [
								{
									"type": "rest",
									"elementType": {
										"type": "reference",
										"target": 857,
										"name": "R",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "src/records/shared.ts",
										"qualifiedName": "S"
									},
									"name": "S",
									"package": "@ti-platform/client-airtable",
									"refersToTypeParameter": true
								}
							]
						},
						"falseType": {
							"type": "reference",
							"target": 855,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Exclude"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 856,
											"name": "U",
											"package": "@ti-platform/client-airtable",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "src/records/shared.ts",
												"qualifiedName": "S"
											},
											"name": "S",
											"package": "@ti-platform/client-airtable",
											"refersToTypeParameter": true
										}
									],
									"name": "Exclude",
									"package": "typescript"
								},
								{
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 857,
												"name": "R",
												"package": "@ti-platform/client-airtable",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "src/records/shared.ts",
												"qualifiedName": "S"
											},
											"name": "S",
											"package": "@ti-platform/client-airtable",
											"refersToTypeParameter": true
										}
									]
								}
							],
							"name": "UnionToTuple",
							"package": "@ti-platform/client-airtable"
						}
					}
				}
			}
		},
		{
			"id": 768,
			"name": "UpdateRecordsRequest",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 109,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 769,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 739,
						"typeArguments": [
							{
								"type": "reference",
								"target": 769,
								"name": "Fields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "UpdateRecordsRequestNonUpsert",
						"package": "@ti-platform/client-airtable"
					},
					{
						"type": "reference",
						"target": 753,
						"typeArguments": [
							{
								"type": "reference",
								"target": 769,
								"name": "Fields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "UpdateRecordsRequestUpsert",
						"package": "@ti-platform/client-airtable"
					}
				]
			}
		},
		{
			"id": 774,
			"name": "UpdateRecordsResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 136,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 775,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 770,
						"typeArguments": [
							{
								"type": "reference",
								"target": 775,
								"name": "Fields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "UpdateRecordsResponseNonUpsert",
						"package": "@ti-platform/client-airtable"
					},
					{
						"type": "reference",
						"target": 772,
						"typeArguments": [
							{
								"type": "reference",
								"target": 775,
								"name": "Fields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						],
						"name": "UpdateRecordsResponseUpsert",
						"package": "@ti-platform/client-airtable"
					}
				]
			}
		},
		{
			"id": 770,
			"name": "UpdateRecordsResponseNonUpsert",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 117,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 771,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": 870,
				"typeArguments": [
					{
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/records/update-records.ts",
								"qualifiedName": "SCHEMA_UPDATE_RECORDS_RESPONSE_NON_UPSERT"
							},
							"name": "SCHEMA_UPDATE_RECORDS_RESPONSE_NON_UPSERT",
							"package": "@ti-platform/client-airtable",
							"preferValues": true
						}
					},
					{
						"type": "reference",
						"target": 771,
						"name": "Fields",
						"package": "@ti-platform/client-airtable",
						"refersToTypeParameter": true
					}
				],
				"name": "ExtendSchemaWithFieldsForRecords",
				"package": "@ti-platform/client-airtable"
			}
		},
		{
			"id": 772,
			"name": "UpdateRecordsResponseUpsert",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 127,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 773,
					"name": "Fields",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 777,
						"name": "RecordFields",
						"package": "@ti-platform/client-airtable"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": 870,
				"typeArguments": [
					{
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/records/update-records.ts",
								"qualifiedName": "SCHEMA_UPDATE_RECORDS_RESPONSE_UPSERT"
							},
							"name": "SCHEMA_UPDATE_RECORDS_RESPONSE_UPSERT",
							"package": "@ti-platform/client-airtable",
							"preferValues": true
						}
					},
					{
						"type": "reference",
						"target": 773,
						"name": "Fields",
						"package": "@ti-platform/client-airtable",
						"refersToTypeParameter": true
					}
				],
				"name": "ExtendSchemaWithFieldsForRecords",
				"package": "@ti-platform/client-airtable"
			}
		},
		{
			"id": 806,
			"name": "SCHEMA_BASE_AND_TABLE_PATH_PARAMS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 56,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
					"qualifiedName": "ZodObject"
				},
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 807,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 808,
									"name": "baseId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 57,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodString"
										},
										"name": "ZodString",
										"package": "zod"
									},
									"defaultValue": "..."
								},
								{
									"id": 809,
									"name": "tableIdOrName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodString"
										},
										"name": "ZodString",
										"package": "zod"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										808,
										809
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 56,
									"character": 56
								}
							]
						}
					},
					{
						"type": "literal",
						"value": "strip"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodTypeAny"
						},
						"name": "ZodTypeAny",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 810,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 811,
									"name": "baseId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 57,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 812,
									"name": "tableIdOrName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										811,
										812
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 123
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 813,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 814,
									"name": "baseId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 57,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 815,
									"name": "tableIdOrName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										814,
										815
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 262
								}
							]
						}
					}
				],
				"name": "ZodObject",
				"package": "zod"
			},
			"defaultValue": "..."
		},
		{
			"id": 820,
			"name": "SCHEMA_BASE_TABLE_AND_RECORD_PATH_PARAMS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 71,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
					"qualifiedName": "ZodObject"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/helpers/util.d.ts",
							"qualifiedName": "objectUtil.extendShape"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 821,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 822,
											"name": "baseId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/shared.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodString"
												},
												"name": "ZodString",
												"package": "zod"
											},
											"defaultValue": "..."
										},
										{
											"id": 823,
											"name": "tableIdOrName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/shared.ts",
													"line": 58,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodString"
												},
												"name": "ZodString",
												"package": "zod"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												822,
												823
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 56,
											"character": 56
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 824,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 825,
											"name": "recordId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/client-airtable/src/records/shared.ts",
													"line": 72,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodString"
												},
												"name": "ZodString",
												"package": "zod"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												825
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 71,
											"character": 97
										}
									]
								}
							}
						],
						"name": "extendShape",
						"package": "zod",
						"qualifiedName": "objectUtil.extendShape"
					},
					{
						"type": "literal",
						"value": "strip"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodTypeAny"
						},
						"name": "ZodTypeAny",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 826,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 827,
									"name": "baseId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 57,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 829,
									"name": "recordId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 72,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 828,
									"name": "tableIdOrName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										827,
										829,
										828
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/helpers/util.d.ts",
									"line": 42,
									"character": 38
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 830,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 831,
									"name": "baseId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 57,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 833,
									"name": "recordId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 72,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 832,
									"name": "tableIdOrName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										831,
										833,
										832
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/helpers/util.d.ts",
									"line": 42,
									"character": 38
								}
							]
						}
					}
				],
				"name": "ZodObject",
				"package": "zod"
			},
			"defaultValue": "..."
		},
		{
			"id": 778,
			"name": "SCHEMA_COMMON_REQUEST_PARAMS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 17,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
					"qualifiedName": "ZodObject"
				},
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 779,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 780,
									"name": "cellFormat",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodOptional"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodDefault"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodNativeEnum"
														},
														"typeArguments": [
															{
																"type": "query",
																"queryType": {
																	"type": "reference",
																	"target": 133,
																	"name": "CellFormat",
																	"package": "@ti-platform/client-airtable"
																}
															}
														],
														"name": "ZodNativeEnum",
														"package": "zod"
													}
												],
												"name": "ZodDefault",
												"package": "zod"
											}
										],
										"name": "ZodOptional",
										"package": "zod"
									},
									"defaultValue": "..."
								},
								{
									"id": 781,
									"name": "returnFieldsByFieldId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 19,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodOptional"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodDefault"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodBoolean"
														},
														"name": "ZodBoolean",
														"package": "zod"
													}
												],
												"name": "ZodDefault",
												"package": "zod"
											}
										],
										"name": "ZodOptional",
										"package": "zod"
									},
									"defaultValue": "..."
								},
								{
									"id": 782,
									"name": "typecast",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodOptional"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodDefault"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodBoolean"
														},
														"name": "ZodBoolean",
														"package": "zod"
													}
												],
												"name": "ZodDefault",
												"package": "zod"
											}
										],
										"name": "ZodOptional",
										"package": "zod"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										780,
										781,
										782
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 17,
									"character": 51
								}
							]
						}
					},
					{
						"type": "literal",
						"value": "strip"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodTypeAny"
						},
						"name": "ZodTypeAny",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 783,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 784,
									"name": "cellFormat",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 134,
												"name": "JSON",
												"package": "@ti-platform/client-airtable",
												"qualifiedName": "CellFormat.JSON"
											},
											{
												"type": "reference",
												"target": 135,
												"name": "STRING",
												"package": "@ti-platform/client-airtable",
												"qualifiedName": "CellFormat.STRING"
											}
										]
									},
									"defaultValue": "..."
								},
								{
									"id": 785,
									"name": "returnFieldsByFieldId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 19,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "..."
								},
								{
									"id": 786,
									"name": "typecast",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										784,
										785,
										786
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 123
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 787,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 788,
									"name": "cellFormat",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 134,
												"name": "JSON",
												"package": "@ti-platform/client-airtable",
												"qualifiedName": "CellFormat.JSON"
											},
											{
												"type": "reference",
												"target": 135,
												"name": "STRING",
												"package": "@ti-platform/client-airtable",
												"qualifiedName": "CellFormat.STRING"
											}
										]
									},
									"defaultValue": "..."
								},
								{
									"id": 789,
									"name": "returnFieldsByFieldId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 19,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "..."
								},
								{
									"id": 790,
									"name": "typecast",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										788,
										789,
										790
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 262
								}
							]
						}
					}
				],
				"name": "ZodObject",
				"package": "zod"
			},
			"defaultValue": "..."
		},
		{
			"id": 837,
			"name": "SCHEMA_INDIVIDUAL_RECORD",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 82,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
					"qualifiedName": "ZodObject"
				},
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 838,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 840,
									"name": "createdTime",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 84,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodDate"
										},
										"name": "ZodDate",
										"package": "zod"
									},
									"defaultValue": "..."
								},
								{
									"id": 841,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 85,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodEffects"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodRecord"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodString"
														},
														"name": "ZodString",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodUnknown"
														},
														"name": "ZodUnknown",
														"package": "zod"
													}
												],
												"name": "ZodRecord",
												"package": "zod"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "ZodEffects",
										"package": "zod"
									},
									"defaultValue": "SCHEMA_RECORD_FIELDS"
								},
								{
									"id": 839,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 83,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodString"
										},
										"name": "ZodString",
										"package": "zod"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										840,
										841,
										839
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 82,
									"character": 47
								}
							]
						}
					},
					{
						"type": "literal",
						"value": "strip"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodTypeAny"
						},
						"name": "ZodTypeAny",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 842,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 844,
									"name": "createdTime",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 84,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									"defaultValue": "..."
								},
								{
									"id": 845,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 85,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"defaultValue": "SCHEMA_RECORD_FIELDS"
								},
								{
									"id": 843,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 83,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										844,
										845,
										843
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 123
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 846,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 848,
									"name": "createdTime",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 84,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									"defaultValue": "..."
								},
								{
									"id": 849,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 85,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"defaultValue": "SCHEMA_RECORD_FIELDS"
								},
								{
									"id": 847,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 83,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										848,
										849,
										847
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 262
								}
							]
						}
					}
				],
				"name": "ZodObject",
				"package": "zod"
			},
			"defaultValue": "..."
		},
		{
			"id": 776,
			"name": "SCHEMA_RECORD_FIELDS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 7,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
					"qualifiedName": "ZodEffects"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodRecord"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodString"
								},
								"name": "ZodString",
								"package": "zod"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodUnknown"
								},
								"name": "ZodUnknown",
								"package": "zod"
							}
						],
						"name": "ZodRecord",
						"package": "zod"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				],
				"name": "ZodEffects",
				"package": "zod"
			},
			"defaultValue": "..."
		},
		{
			"id": 796,
			"name": "SCHEMA_REQUEST_METHOD",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@internal"
				]
			},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/shared.ts",
					"line": 45,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
					"qualifiedName": "ZodObject"
				},
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 797,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 798,
									"name": "method",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 46,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodNativeEnum"
										},
										"typeArguments": [
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"target": 572,
													"name": "UpdateType",
													"package": "@ti-platform/client-airtable"
												}
											}
										],
										"name": "ZodNativeEnum",
										"package": "zod"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										798
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/client-airtable/src/records/shared.ts",
									"line": 45,
									"character": 44
								}
							]
						}
					},
					{
						"type": "literal",
						"value": "strip"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodTypeAny"
						},
						"name": "ZodTypeAny",
						"package": "zod"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 799,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 800,
									"name": "method",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 46,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 572,
										"name": "UpdateType",
										"package": "@ti-platform/client-airtable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										800
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 123
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 801,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 802,
									"name": "method",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/client-airtable/src/records/shared.ts",
											"line": 46,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 572,
										"name": "UpdateType",
										"package": "@ti-platform/client-airtable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										802
									]
								}
							],
							"sources": [
								{
									"fileName": "common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
									"line": 1056,
									"character": 262
								}
							]
						}
					}
				],
				"name": "ZodObject",
				"package": "zod"
			},
			"defaultValue": "..."
		},
		{
			"id": 664,
			"name": "createRecords",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/create-records.ts",
					"line": 51,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 665,
					"name": "createRecords",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/create-records.ts",
							"line": 51,
							"character": 16
						}
					],
					"typeParameter": [
						{
							"id": 666,
							"name": "RequestFields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 667,
							"name": "ResponseFields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": 666,
								"name": "RequestFields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						}
					],
					"parameters": [
						{
							"id": 668,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AirtableClient",
								"package": "@ti-platform/client-airtable"
							}
						},
						{
							"id": 669,
							"name": "request",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 670,
								"typeArguments": [
									{
										"type": "reference",
										"target": 666,
										"name": "RequestFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "CreateRecordsRequest",
								"package": "@ti-platform/client-airtable"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 677,
								"typeArguments": [
									{
										"type": "reference",
										"target": 667,
										"name": "ResponseFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "CreateRecordsResponse",
								"package": "@ti-platform/client-airtable"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 684,
			"name": "deleteRecords",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/delete-records.ts",
					"line": 52,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 685,
					"name": "deleteRecords",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/delete-records.ts",
							"line": 52,
							"character": 16
						}
					],
					"parameters": [
						{
							"id": 686,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AirtableClient",
								"package": "@ti-platform/client-airtable"
							}
						},
						{
							"id": 687,
							"name": "request",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 688,
								"name": "DeleteRecordsRequest",
								"package": "@ti-platform/client-airtable"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 692,
								"name": "DeleteRecordsResponse",
								"package": "@ti-platform/client-airtable"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 697,
			"name": "listRecords",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/list-records.ts",
					"line": 165,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 698,
					"name": "listRecords",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/list-records.ts",
							"line": 165,
							"character": 16
						}
					],
					"typeParameter": [
						{
							"id": 699,
							"name": "Fields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 700,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AirtableClient",
								"package": "@ti-platform/client-airtable"
							}
						},
						{
							"id": 701,
							"name": "request",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 702,
								"typeArguments": [
									{
										"type": "templateLiteral",
										"head": "",
										"tail": [
											[
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Extract"
													},
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": 699,
																"name": "Fields",
																"package": "@ti-platform/client-airtable",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													],
													"name": "Extract",
													"package": "typescript"
												},
												""
											]
										]
									}
								],
								"name": "ListRecordsRequest",
								"package": "@ti-platform/client-airtable"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 722,
								"typeArguments": [
									{
										"type": "reference",
										"target": 699,
										"name": "Fields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "ListRecordsResponse",
								"package": "@ti-platform/client-airtable"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 728,
			"name": "updateRecords",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 140,
					"character": 16
				},
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 147,
					"character": 16
				},
				{
					"fileName": "packages/client-airtable/src/records/update-records.ts",
					"line": 154,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 729,
					"name": "updateRecords",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/update-records.ts",
							"line": 140,
							"character": 16
						}
					],
					"typeParameter": [
						{
							"id": 730,
							"name": "RequestFields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 731,
							"name": "ResponseFields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": 730,
								"name": "RequestFields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						}
					],
					"parameters": [
						{
							"id": 732,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AirtableClient",
								"package": "@ti-platform/client-airtable"
							}
						},
						{
							"id": 733,
							"name": "request",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 739,
								"typeArguments": [
									{
										"type": "reference",
										"target": 730,
										"name": "RequestFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "UpdateRecordsRequestNonUpsert",
								"package": "@ti-platform/client-airtable"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 770,
								"typeArguments": [
									{
										"type": "reference",
										"target": 731,
										"name": "ResponseFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "UpdateRecordsResponseNonUpsert",
								"package": "@ti-platform/client-airtable"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 734,
					"name": "updateRecords",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/client-airtable/src/records/update-records.ts",
							"line": 147,
							"character": 16
						}
					],
					"typeParameter": [
						{
							"id": 735,
							"name": "RequestFields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 736,
							"name": "ResponseFields",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": 735,
								"name": "RequestFields",
								"package": "@ti-platform/client-airtable",
								"refersToTypeParameter": true
							}
						}
					],
					"parameters": [
						{
							"id": 737,
							"name": "client",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "AirtableClient",
								"package": "@ti-platform/client-airtable"
							}
						},
						{
							"id": 738,
							"name": "request",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 753,
								"typeArguments": [
									{
										"type": "reference",
										"target": 735,
										"name": "RequestFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "UpdateRecordsRequestUpsert",
								"package": "@ti-platform/client-airtable"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 772,
								"typeArguments": [
									{
										"type": "reference",
										"target": 736,
										"name": "ResponseFields",
										"package": "@ti-platform/client-airtable",
										"refersToTypeParameter": true
									}
								],
								"name": "UpdateRecordsResponseUpsert",
								"package": "@ti-platform/client-airtable"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				133,
				136,
				139,
				572,
				575
			]
		},
		{
			"title": "Classes",
			"children": [
				1
			]
		},
		{
			"title": "Interfaces",
			"children": [
				670,
				677,
				688,
				692,
				850,
				702,
				722,
				739,
				753
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				816,
				834,
				791,
				858,
				870,
				777,
				803,
				855,
				768,
				774,
				770,
				772
			]
		},
		{
			"title": "Variables",
			"children": [
				806,
				820,
				778,
				837,
				776,
				796
			]
		},
		{
			"title": "Functions",
			"children": [
				664,
				684,
				697,
				728
			]
		}
	],
	"packageName": "@ti-platform/client-airtable",
	"readme": [
		{
			"kind": "text",
			"text": "# @ti-platform/client-airtable\n\nThis client provides a client to interact with Airtable.\n\nIdeally, this package should not even need to exist since Airtable have provided their own client. However, they refuse\nto actually implement all features of their REST APIs with their client. This package tries to fix that.\n\n# Contents\n\n* [API Docs](#api-docs)\n  * [Enumerations](#enumerations)\n    * [CellFormat](#cellformat)\n    * [Direction](#direction)\n    * [Timezone](#timezone)\n    * [UpdateType](#updatetype)\n    * [UserLocale](#userlocale)\n  * [Classes](#classes)\n    * [AirtableClient](#airtableclient)\n  * [Interfaces](#interfaces)\n    * [CreateRecordsRequest\\<Fields>](#createrecordsrequestfields)\n    * [CreateRecordsResponse\\<Fields>](#createrecordsresponsefields)\n    * [DeleteRecordsRequest](#deleterecordsrequest)\n    * [DeleteRecordsResponse](#deleterecordsresponse)\n    * [IndividualRecord\\<Fields>](#individualrecordfields)\n    * [ListRecordsRequest\\<Fields>](#listrecordsrequestfields)\n    * [ListRecordsResponse\\<Fields>](#listrecordsresponsefields)\n    * [UpdateRecordsRequestNonUpsert\\<Fields>](#updaterecordsrequestnonupsertfields)\n    * [UpdateRecordsRequestUpsert\\<Fields>](#updaterecordsrequestupsertfields)\n  * [Type Aliases](#type-aliases)\n    * [RecordFields](#recordfields)\n    * [UpdateRecordsRequest\\<Fields>](#updaterecordsrequestfields)\n    * [UpdateRecordsResponse\\<Fields>](#updaterecordsresponsefields)\n    * [UpdateRecordsResponseNonUpsert\\<Fields>](#updaterecordsresponsenonupsertfields)\n    * [UpdateRecordsResponseUpsert\\<Fields>](#updaterecordsresponseupsertfields)\n  * [Functions](#functions)\n    * [updateRecords()](#updaterecords-1)\n\n# API Docs\n\n## Enumerations\n\n### CellFormat\n\nThe format that should be used for cell values.\n\nThe [Timezone](README.md#timezone) and [UserLocale](README.md#userlocale) parameters are required when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the cell  format.\n\nNote: You should not rely on the format of these strings, as it is subject to change.\n\nThe default is "
		},
		{
			"kind": "code",
			"text": "`json`"
		},
		{
			"kind": "text",
			"text": ".\n\n#### Enumeration Members\n\n| Enumeration Member | Value | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`JSON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"json\"`"
		},
		{
			"kind": "text",
			"text": " | Cells will be formatted as JSON, depending on the field type. |\n| "
		},
		{
			"kind": "code",
			"text": "`STRING`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"string\"`"
		},
		{
			"kind": "text",
			"text": " | Cells will be formatted as user-facing strings, regardless of the field type. |\n\n***\n\n### Direction\n\nThe direction to sort results.\n\nThe default is "
		},
		{
			"kind": "code",
			"text": "`asc`"
		},
		{
			"kind": "text",
			"text": ".\n\n#### Enumeration Members\n\n| Enumeration Member | Value | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`ASC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"asc\"`"
		},
		{
			"kind": "text",
			"text": " | Sort in ascending order. |\n| "
		},
		{
			"kind": "code",
			"text": "`DESC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"desc\"`"
		},
		{
			"kind": "text",
			"text": " | Sort in descending order. |\n\n***\n\n### Timezone\n\nThe time zone that should be used to format dates when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the [CellFormat](README.md#cellformat).\n\n#### Enumeration Members\n\n| Enumeration Member | Value |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_ABIDJAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Abidjan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_ACCRA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Accra\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_ADDIS_ABABA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Addis_Ababa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_ALGIERS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Algiers\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_ASMARA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Asmara\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BAMAKO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Bamako\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BANGUI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Bangui\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BANJUL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Banjul\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BISSAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Bissau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BLANTYRE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Blantyre\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BRAZZAVILLE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Brazzaville\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_BUJUMBURA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Bujumbura\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_CAIRO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Cairo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_CASABLANCA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Casablanca\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_CEUTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Ceuta\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_CONAKRY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Conakry\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_DAKAR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Dakar\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_DAR_ES_SALAAM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Dar_es_Salaam\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_DJIBOUTI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Djibouti\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_DOUALA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Douala\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_EL_AAIUN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/El_Aaiun\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_FREETOWN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Freetown\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_GABORONE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Gaborone\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_HARARE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Harare\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_JOHANNESBURG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Johannesburg\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_JUBA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Juba\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_KAMPALA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Kampala\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_KHARTOUM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Khartoum\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_KIGALI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Kigali\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_KINSHASA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Kinshasa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_LAGOS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Lagos\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_LIBREVILLE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Libreville\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_LOME`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Lome\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_LUANDA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Luanda\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_LUBUMBASHI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Lubumbashi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_LUSAKA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Lusaka\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_MALABO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Malabo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_MAPUTO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Maputo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_MASERU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Maseru\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_MBABANE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Mbabane\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_MOGADISHU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Mogadishu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_MONROVIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Monrovia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_NAIROBI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Nairobi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_NDJAMENA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Ndjamena\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_NIAMEY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Niamey\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_NOUAKCHOTT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Nouakchott\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_OUAGADOUGOU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Ouagadougou\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_PORTO_NOVO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Porto-Novo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_SAO_TOME`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Sao_Tome\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_TRIPOLI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Tripoli\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_TUNIS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Tunis\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRICA_WINDHOEK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Africa/Windhoek\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ADAK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Adak\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ANCHORAGE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Anchorage\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ANGUILLA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Anguilla\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ANTIGUA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Antigua\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARAGUAINA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Araguaina\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_BUENOS_AIRES`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Buenos_Aires\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_CATAMARCA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Catamarca\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_CORDOBA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Cordoba\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_JUJUY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Jujuy\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_LA_RIOJA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/La_Rioja\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_MENDOZA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Mendoza\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_RIO_GALLEGOS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Rio_Gallegos\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_SALTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Salta\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_SAN_JUAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/San_Juan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_SAN_LUIS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/San_Luis\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_TUCUMAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Tucuman\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARGENTINA_USHUAIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Argentina/Ushuaia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ARUBA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Aruba\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ASUNCION`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Asuncion\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ATIKOKAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Atikokan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BAHIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Bahia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BAHIA_BANDERAS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Bahia_Banderas\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BARBADOS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Barbados\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BELEM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Belem\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BELIZE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Belize\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BLANC_SABLON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Blanc-Sablon\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BOA_VISTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Boa_Vista\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BOGOTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Bogota\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_BOISE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Boise\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CAMBRIDGE_BAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Cambridge_Bay\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CAMPO_GRANDE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Campo_Grande\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CANCUN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Cancun\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CARACAS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Caracas\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CAYENNE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Cayenne\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CAYMAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Cayman\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CHICAGO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Chicago\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CHIHUAHUA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Chihuahua\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_COSTA_RICA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Costa_Rica\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CRESTON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Creston\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CUIABA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Cuiaba\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_CURACAO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Curacao\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_DANMARKSHAVN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Danmarkshavn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_DAWSON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Dawson\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_DAWSON_CREEK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Dawson_Creek\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_DENVER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Denver\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_DETROIT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Detroit\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_DOMINICA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Dominica\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_EDMONTON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Edmonton\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_EIRUNEPE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Eirunepe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_EL_SALVADOR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/El_Salvador\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_FORTALEZA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Fortaleza\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_FORT_NELSON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Fort_Nelson\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GLACE_BAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Glace_Bay\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GODTHAB`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Godthab\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GOOSE_BAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Goose_Bay\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GRAND_TURK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Grand_Turk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GRENADA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Grenada\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GUADELOUPE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Guadeloupe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GUATEMALA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Guatemala\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GUAYAQUIL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Guayaquil\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_GUYANA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Guyana\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_HALIFAX`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Halifax\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_HAVANA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Havana\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_HERMOSILLO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Hermosillo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_INDIANAPOLIS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Indianapolis\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_KNOX`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Knox\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_MARENGO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Marengo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_PETERSBURG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Petersburg\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_TELL_CITY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Tell_City\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_VEVAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Vevay\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_VINCENNES`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Vincennes\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INDIANA_WINAMAC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Indiana/Winamac\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_INUVIK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Inuvik\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_IQALUIT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Iqaluit\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_JAMAICA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Jamaica\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_JUNEAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Juneau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_KENTUCKY_LOUISVILLE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Kentucky/Louisville\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_KENTUCKY_MONTICELLO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Kentucky/Monticello\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_KRALENDIJK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Kralendijk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_LA_PAZ`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/La_Paz\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_LIMA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Lima\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_LOS_ANGELES`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Los_Angeles\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_LOWER_PRINCES`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Lower_Princes\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MACEIO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Maceio\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MANAGUA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Managua\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MANAUS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Manaus\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MARIGOT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Marigot\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MARTINIQUE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Martinique\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MATAMOROS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Matamoros\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MAZATLAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Mazatlan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MENOMINEE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Menominee\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MERIDA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Merida\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_METLAKATLA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Metlakatla\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MEXICO_CITY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Mexico_City\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MIQUELON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Miquelon\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MONCTON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Moncton\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MONTERREY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Monterrey\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MONTEVIDEO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Montevideo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_MONTSERRAT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Montserrat\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NASSAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Nassau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NEW_YORK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/New_York\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NIPIGON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Nipigon\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NOME`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Nome\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NORONHA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Noronha\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NORTH_DAKOTA_BEULAH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/North_Dakota/Beulah\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NORTH_DAKOTA_CENTER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/North_Dakota/Center\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NORTH_DAKOTA_NEW_SALEM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/North_Dakota/New_Salem\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_NUUK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Nuuk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_OJINAGA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Ojinaga\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PANAMA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Panama\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PANGNIRTUNG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Pangnirtung\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PARAMARIBO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Paramaribo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PHOENIX`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Phoenix\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PORTO_VELHO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Porto_Velho\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PORT_AU_PRINCE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Port-au-Prince\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PORT_OF_SPAIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Port_of_Spain\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PUERTO_RICO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Puerto_Rico\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_PUNTA_ARENAS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Punta_Arenas\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_RAINY_RIVER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Rainy_River\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_RANKIN_INLET`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Rankin_Inlet\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_RECIFE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Recife\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_REGINA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Regina\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_RESOLUTE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Resolute\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_RIO_BRANCO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Rio_Branco\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SANTAREM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Santarem\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SANTIAGO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Santiago\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SANTO_DOMINGO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Santo_Domingo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SAO_PAULO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Sao_Paulo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SCORESBYSUND`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Scoresbysund\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SITKA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Sitka\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ST_BARTHELEMY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/St_Barthelemy\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ST_JOHNS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/St_Johns\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ST_KITTS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/St_Kitts\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ST_LUCIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/St_Lucia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ST_THOMAS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/St_Thomas\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_ST_VINCENT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/St_Vincent\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_SWIFT_CURRENT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Swift_Current\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_TEGUCIGALPA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Tegucigalpa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_THULE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Thule\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_THUNDER_BAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Thunder_Bay\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_TIJUANA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Tijuana\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_TORONTO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Toronto\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_TORTOLA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Tortola\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_VANCOUVER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Vancouver\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_WHITEHORSE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Whitehorse\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_WINNIPEG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Winnipeg\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_YAKUTAT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Yakutat\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AMERICA_YELLOWKNIFE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"America/Yellowknife\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_CASEY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Casey\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_DAVIS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Davis\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_DUMONTDURVILLE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/DumontDUrville\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_MACQUARIE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Macquarie\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_MAWSON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Mawson\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_MCMURDO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/McMurdo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_PALMER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Palmer\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_ROTHERA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Rothera\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_SYOWA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Syowa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_TROLL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Troll\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ANTARCTICA_VOSTOK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Antarctica/Vostok\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ARCTIC_LONGYEARBYEN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Arctic/Longyearbyen\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ADEN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Aden\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ALMATY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Almaty\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_AMMAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Amman\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ANADYR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Anadyr\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_AQTAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Aqtau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_AQTOBE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Aqtobe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ASHGABAT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Ashgabat\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ATYRAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Atyrau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BAGHDAD`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Baghdad\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BAHRAIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Bahrain\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BAKU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Baku\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BANGKOK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Bangkok\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BARNAUL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Barnaul\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BEIRUT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Beirut\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BISHKEK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Bishkek\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_BRUNEI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Brunei\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_CHITA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Chita\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_CHOIBALSAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Choibalsan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_COLOMBO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Colombo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_DAMASCUS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Damascus\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_DHAKA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Dhaka\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_DILI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Dili\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_DUBAI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Dubai\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_DUSHANBE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Dushanbe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_FAMAGUSTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Famagusta\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_GAZA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Gaza\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_HEBRON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Hebron\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_HONG_KONG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Hong_Kong\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_HOVD`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Hovd\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_HO_CHI_MINH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Ho_Chi_Minh\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_IRKUTSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Irkutsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ISTANBUL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Istanbul\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_JAKARTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Jakarta\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_JAYAPURA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Jayapura\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_JERUSALEM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Jerusalem\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KABUL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kabul\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KAMCHATKA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kamchatka\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KARACHI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Karachi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KATHMANDU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kathmandu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KHANDYGA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Khandyga\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KOLKATA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kolkata\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KRASNOYARSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Krasnoyarsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KUALA_LUMPUR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kuala_Lumpur\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KUCHING`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kuching\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_KUWAIT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Kuwait\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_MACAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Macau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_MAGADAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Magadan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_MAKASSAR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Makassar\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_MANILA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Manila\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_MUSCAT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Muscat\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_NICOSIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Nicosia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_NOVOKUZNETSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Novokuznetsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_NOVOSIBIRSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Novosibirsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_OMSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Omsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ORAL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Oral\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_PHNOM_PENH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Phnom_Penh\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_PONTIANAK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Pontianak\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_PYONGYANG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Pyongyang\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_QATAR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Qatar\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_QOSTANAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Qostanay\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_QYZYLORDA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Qyzylorda\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_RANGOON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Rangoon\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_RIYADH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Riyadh\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_SAKHALIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Sakhalin\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_SAMARKAND`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Samarkand\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_SEOUL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Seoul\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_SHANGHAI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Shanghai\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_SINGAPORE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Singapore\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_SREDNEKOLYMSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Srednekolymsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_TAIPEI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Taipei\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_TASHKENT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Tashkent\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_TBILISI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Tbilisi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_TEHRAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Tehran\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_THIMPHU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Thimphu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_TOKYO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Tokyo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_TOMSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Tomsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_ULAANBAATAR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Ulaanbaatar\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_URUMQI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Urumqi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_UST_NERA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Ust-Nera\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_VIENTIANE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Vientiane\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_VLADIVOSTOK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Vladivostok\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_YAKUTSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Yakutsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_YANGON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Yangon\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_YEKATERINBURG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Yekaterinburg\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ASIA_YEREVAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Asia/Yerevan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_AZORES`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Azores\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_BERMUDA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Bermuda\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_CANARY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Canary\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_CAPE_VERDE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Cape_Verde\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_FAROE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Faroe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_MADEIRA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Madeira\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_REYKJAVIK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Reykjavik\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_SOUTH_GEORGIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/South_Georgia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_STANLEY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/Stanley\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ATLANTIC_ST_HELENA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Atlantic/St_Helena\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_ADELAIDE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Adelaide\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_BRISBANE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Brisbane\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_BROKEN_HILL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Broken_Hill\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_CURRIE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Currie\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_DARWIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Darwin\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_EUCLA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Eucla\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_HOBART`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Hobart\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_LINDEMAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Lindeman\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_LORD_HOWE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Lord_Howe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_MELBOURNE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Melbourne\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_PERTH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Perth\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIA_SYDNEY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Australia/Sydney\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`CLIENT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"client\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_AMSTERDAM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Amsterdam\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ANDORRA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Andorra\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ASTRAKHAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Astrakhan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ATHENS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Athens\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BELGRADE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Belgrade\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BERLIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Berlin\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BRATISLAVA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Bratislava\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BRUSSELS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Brussels\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BUCHAREST`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Bucharest\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BUDAPEST`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Budapest\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_BUSINGEN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Busingen\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_CHISINAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Chisinau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_COPENHAGEN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Copenhagen\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_DUBLIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Dublin\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_GIBRALTAR`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Gibraltar\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_GUERNSEY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Guernsey\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_HELSINKI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Helsinki\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ISLE_OF_MAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Isle_of_Man\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ISTANBUL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Istanbul\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_JERSEY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Jersey\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_KALININGRAD`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Kaliningrad\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_KIEV`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Kiev\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_KIROV`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Kirov\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_LISBON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Lisbon\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_LJUBLJANA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Ljubljana\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_LONDON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/London\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_LUXEMBOURG`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Luxembourg\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_MADRID`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Madrid\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_MALTA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Malta\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_MARIEHAMN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Mariehamn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_MINSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Minsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_MONACO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Monaco\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_MOSCOW`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Moscow\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_NICOSIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Nicosia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_OSLO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Oslo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_PARIS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Paris\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_PODGORICA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Podgorica\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_PRAGUE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Prague\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_RIGA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Riga\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ROME`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Rome\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SAMARA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Samara\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SAN_MARINO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/San_Marino\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SARAJEVO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Sarajevo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SARATOV`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Saratov\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SIMFEROPOL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Simferopol\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SKOPJE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Skopje\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_SOFIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Sofia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_STOCKHOLM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Stockholm\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_TALLINN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Tallinn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_TIRANE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Tirane\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ULYANOVSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Ulyanovsk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_UZHGOROD`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Uzhgorod\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_VADUZ`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Vaduz\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_VATICAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Vatican\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_VIENNA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Vienna\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_VILNIUS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Vilnius\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_VOLGOGRAD`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Volgograd\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_WARSAW`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Warsaw\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ZAGREB`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Zagreb\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ZAPOROZHYE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Zaporozhye\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUROPE_ZURICH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Europe/Zurich\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_ANTANANARIVO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Antananarivo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_CHAGOS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Chagos\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_CHRISTMAS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Christmas\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_COCOS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Cocos\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_COMORO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Comoro\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_KERGUELEN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Kerguelen\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_MAHE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Mahe\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_MALDIVES`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Maldives\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_MAURITIUS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Mauritius\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_MAYOTTE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Mayotte\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`INDIAN_REUNION`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Indian/Reunion\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_APIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Apia\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_AUCKLAND`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Auckland\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_BOUGAINVILLE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Bougainville\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_CHATHAM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Chatham\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_CHUUK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Chuuk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_EASTER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Easter\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_EFATE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Efate\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_ENDERBURY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Enderbury\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_FAKAOFO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Fakaofo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_FIJI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Fiji\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_FUNAFUTI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Funafuti\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_GALAPAGOS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Galapagos\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_GAMBIER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Gambier\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_GUADALCANAL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Guadalcanal\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_GUAM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Guam\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_HONOLULU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Honolulu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_KANTON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Kanton\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_KIRITIMATI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Kiritimati\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_KOSRAE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Kosrae\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_KWAJALEIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Kwajalein\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_MAJURO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Majuro\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_MARQUESAS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Marquesas\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_MIDWAY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Midway\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_NAURU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Nauru\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_NIUE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Niue\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_NORFOLK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Norfolk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_NOUMEA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Noumea\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_PAGO_PAGO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Pago_Pago\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_PALAU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Palau\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_PITCAIRN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Pitcairn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_POHNPEI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Pohnpei\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_PORT_MORESBY`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Port_Moresby\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_RAROTONGA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Rarotonga\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_SAIPAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Saipan\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_TAHITI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Tahiti\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_TARAWA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Tarawa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_TONGATAPU`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Tongatapu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_WAKE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Wake\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PACIFIC_WALLIS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"Pacific/Wallis\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`UTC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"utc\"`"
		},
		{
			"kind": "text",
			"text": " |\n\n***\n\n### UpdateType\n\nWhen updating records, the type specifies how data are updated.\n\n#### Enumeration Members\n\n| Enumeration Member | Value | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`FULL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"PUT\"`"
		},
		{
			"kind": "text",
			"text": " | Will update the included fields and clear all unincluded fields. |\n| "
		},
		{
			"kind": "code",
			"text": "`PARTIAL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"PATCH\"`"
		},
		{
			"kind": "text",
			"text": " | Will only update the included fields. Fields not included will be unchanged. |\n\n***\n\n### UserLocale\n\nThe user locale that should be used to format dates when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the [CellFormat](README.md#cellformat).\n\n#### Enumeration Members\n\n| Enumeration Member | Value |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`AFRIKAANS`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"af\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ALBANIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"sq\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ARABIC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ar\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ARABIC_SAUDI_ARABIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ar-sa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ARMENIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"hy-am\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRALIAN_ENGLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"en-au\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AUSTRIAN_GERMAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"de-at\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`AZERBAIJANI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"az\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BAHASA_INDONESIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"id\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BAHASA_MALAYSIA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ms\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BELARUSIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"be\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BENGALI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"bn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BOSNIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"bs\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BOSO_JOWO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"jv\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BRAZILIAN_PORTUGUESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"pt-br\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BRETON`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"br\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BRITISH_ENGLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"en-gb\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BULGARIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"bg\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`BURMESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"my\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`CANADIAN_ENGLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"en-ca\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`CANADIAN_FRENCH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fr-ca\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`CATALAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ca\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`CHUVASH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"cv\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`CZECH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"cs\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`DANISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"da\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`DUTCH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"nl\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ENGLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"en-us\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ESPERANTO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"eo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ESTONIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"et\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`EUSKARA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"eu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`FAROESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`FINNISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`FRENCH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fr\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`FRISIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fy\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`GALICIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"gl\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`GEORGIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ka\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`GERMAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"de\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`HEBREW`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"he\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`HINDI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"hi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`HRVATSKI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"hr\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`HUNGARIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"hu\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ICELANDIC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"is\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`IRISH_ENGLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"en-ie\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ITALIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"it\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`JAPANESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ja\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`KHMER`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"km\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`KOREAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ko\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`LATVIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"lv\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`LITHUANIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"lt\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`LUXEMBOURGISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"lb\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MACEDONIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"mk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MALAYALAM`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ml\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MARATHI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"mr\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MODERN_GREEK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"el\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MONTENEGRIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"me\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MOROCCAN_ARABIC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ar-ma\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MOROCCO_CENTRAL_ATLAS_TAMAZIYT_LATIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"tzm_latn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`MOROCCO_CENTRAL_ATLAS_TAMAZIƔT`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"tzm\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`NEPALI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ne\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`NEW_ZEALAND_ENGLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"en-nz\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`NORWEGIAN_BOKMAL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"nb\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`NORWEGIAN_NYNORSK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"nn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PERSIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fa\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`POLISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"pl\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`PORTUGUESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"pt\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`ROMANIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ro\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`RUSSIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ru\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SERBIAN_CYRILLIC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"sr-cyrl\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SERBIAN_LATIN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"sr\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SIMPLIFIED_CHINESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"zh-cn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SINHALA`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"si\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SLOVAK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"sk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SLOVENIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"sl\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SPANISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"es\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SWEDISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"sv\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`SWISS_FRENCH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"fr-ch\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TAGALOG_FILIPINO`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"tl-ph\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TALOSSAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"tzl\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TAMIL`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ta\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`THAI`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"th\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TIBETAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"bo\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TRADITIONAL_CHINESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"zh-tw\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TUNISIAN_ARABIC`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"ar-tn\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`TURKISH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"tr\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`UKRAINIAN`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"uk\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`UZBEK`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"uz\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`VIETNAMESE`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"vi\"`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`WELSH`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"cy\"`"
		},
		{
			"kind": "text",
			"text": " |\n\n## Classes\n\n### AirtableClient\n\nClient for interacting with Airtable.\n\nThis client will handle and throttle requests to ensure that users will not overstep the rate limits set by Airtable.\n\n#### Constructors\n\n##### new AirtableClient(apiToken, requestOptions)\n\n> **new AirtableClient**("
		},
		{
			"kind": "code",
			"text": "`apiToken`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`requestOptions`"
		},
		{
			"kind": "text",
			"text": "): ["
		},
		{
			"kind": "code",
			"text": "`AirtableClient`"
		},
		{
			"kind": "text",
			"text": "](README.md#airtableclient)\n\nCreate a new instance.\n\n###### Parameters\n\n| Parameter | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`apiToken`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Token to use to interact with Airtable. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Object`"
		},
		{
			"kind": "text",
			"text": " | Allows user to override configurations of the underlying "
		},
		{
			"kind": "code",
			"text": "`fetch`"
		},
		{
			"kind": "text",
			"text": " function. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.baseURL`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.body`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`null`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`BodyInit`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`any`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.cache`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`RequestCache`"
		},
		{
			"kind": "text",
			"text": " | A string indicating how the request will interact with the browser's cache to set request's cache. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.credentials`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`RequestCredentials`"
		},
		{
			"kind": "text",
			"text": " | A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.duplex`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`\"half\"`"
		},
		{
			"kind": "text",
			"text": " | Set to \"half\" to enable duplex streaming.<br />Will be automatically set to \"half\" when using a ReadableStream as body.<br />https://fetch.spec.whatwg.org/#enumdef-requestduplex |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.headers`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`HeadersInit`"
		},
		{
			"kind": "text",
			"text": " | A Headers object, an object literal, or an array of two-item arrays to set request's headers. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.ignoreResponseError`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.integrity`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | A cryptographic hash of the resource to be fetched by request. Sets request's integrity. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.keepalive`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | A boolean to set request's keepalive. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.method`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | A string to set request's method. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.mode`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`RequestMode`"
		},
		{
			"kind": "text",
			"text": " | A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.params`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`any`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.parseResponse`"
		},
		{
			"kind": "text",
			"text": "? | ("
		},
		{
			"kind": "code",
			"text": "`responseText`"
		},
		{
			"kind": "text",
			"text": ") => "
		},
		{
			"kind": "code",
			"text": "`any`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.priority`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`RequestPriority`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.query`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`any`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.redirect`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`RequestRedirect`"
		},
		{
			"kind": "text",
			"text": " | A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.referrer`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.referrerPolicy`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`ReferrerPolicy`"
		},
		{
			"kind": "text",
			"text": " | A referrer policy to set request's referrerPolicy. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.responseType`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`ResponseType`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.retry`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`false`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.retryDelay`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | Delay between retries in milliseconds. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.retryStatusCodes`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": "\\[] | Default is \\[408, 409, 425, 429, 500, 502, 503, 504] |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.signal`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`null`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`AbortSignal`"
		},
		{
			"kind": "text",
			"text": " | An AbortSignal to set request's signal. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.timeout`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | timeout in milliseconds |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.window`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`null`"
		},
		{
			"kind": "text",
			"text": " | Can only be null. Used to disassociate request from any Window. |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.onRequest`"
		},
		{
			"kind": "text",
			"text": "? | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.onRequestError`"
		},
		{
			"kind": "text",
			"text": "? | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.onResponse`"
		},
		{
			"kind": "text",
			"text": "? | - |\n| "
		},
		{
			"kind": "code",
			"text": "`requestOptions.onResponseError`"
		},
		{
			"kind": "text",
			"text": "? | - |\n\n###### Returns\n\n["
		},
		{
			"kind": "code",
			"text": "`AirtableClient`"
		},
		{
			"kind": "text",
			"text": "](README.md#airtableclient)\n\n###### Source\n\npackages/client-airtable/src/client.ts:50\n\n#### Methods\n\n##### createRecords()\n\n> **createRecords**<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<{"
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": ": {"
		},
		{
			"kind": "code",
			"text": "`createdTime`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Date`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";  }\\[];  }>\n\nCreate new records.\n\n###### Type parameters\n\n| Type parameter | Value | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | - | The fields to set when creating the records. |\n| "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " | The fields returned after creation, usually should just match the "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ". |\n\n###### Parameters\n\n| Parameter | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Object`"
		},
		{
			"kind": "text",
			"text": " | Refer to [CreateRecordsRequest](README.md#createrecordsrequestfields). |\n| "
		},
		{
			"kind": "code",
			"text": "`request.baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.records`"
		},
		{
			"kind": "text",
			"text": " | \\["
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`...RequestFields[]`"
		},
		{
			"kind": "text",
			"text": "] | Records to create. Maximum of 10. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.returnFieldsByFieldId`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which<br />returns field objects where the key is the field name. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.typecast`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter<br />is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for<br />integrating with 3rd party data sources. |\n\n###### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<{"
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": ": {"
		},
		{
			"kind": "code",
			"text": "`createdTime`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Date`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";  }\\[];  }>\n\nRefer to [CreateRecordsResponse](README.md#createrecordsresponsefields).\n\n> | Member | Type | Description |\n> | :------ | :------ | :------ |\n> | "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | {"
		},
		{
			"kind": "code",
			"text": "`createdTime`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Date`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";  }\\[] | The records that were created. Refer to [IndividualRecord](README.md#individualrecordfields). |\n\n###### Source\n\npackages/client-airtable/src/client.ts:81\n\n##### deleteRecords()\n\n> **deleteRecords**("
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<{"
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": ": {"
		},
		{
			"kind": "code",
			"text": "`deleted`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";  }\\[];  }>\n\nDelete records.\n\n###### Parameters\n\n| Parameter | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Object`"
		},
		{
			"kind": "text",
			"text": " | Refer to [DeleteRecordsRequest](README.md#deleterecordsrequest). |\n| "
		},
		{
			"kind": "code",
			"text": "`request.baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.records`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "\\[] | List of record IDs to delete. Maximum of 10. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n\n###### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<{"
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": ": {"
		},
		{
			"kind": "code",
			"text": "`deleted`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";  }\\[];  }>\n\nRefer to [DeleteRecordsResponse](README.md#deleterecordsresponse).\n\n> | Member | Type | Description |\n> | :------ | :------ | :------ |\n> | "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | {"
		},
		{
			"kind": "code",
			"text": "`deleted`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";  }\\[] | List of records that has been deleted. |\n\n###### Source\n\npackages/client-airtable/src/client.ts:96\n\n##### listRecords()\n\n> **listRecords**<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<{"
		},
		{
			"kind": "code",
			"text": "`offset`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": ": ["
		},
		{
			"kind": "code",
			"text": "`IndividualRecord`"
		},
		{
			"kind": "text",
			"text": "](README.md#individualrecordfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> & {"
		},
		{
			"kind": "code",
			"text": "`commentCount`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": ";  }\\[];  }>\n\n###### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> |\n\n###### Parameters\n\n| Parameter | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Object`"
		},
		{
			"kind": "text",
			"text": " | - |\n| "
		},
		{
			"kind": "code",
			"text": "`request.baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.cellFormat`"
		},
		{
			"kind": "text",
			"text": "? | ["
		},
		{
			"kind": "code",
			"text": "`CellFormat`"
		},
		{
			"kind": "text",
			"text": "](README.md#cellformat) | The format that should be used for cell values. Defaults to [CellFormat.JSON](README.md#cellformat). |\n| "
		},
		{
			"kind": "code",
			"text": "`request.fields`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`UnionToTuple`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`${Extract<keyof Fields, string | number>}`"
		},
		{
			"kind": "text",
			"text": "> | Only data for fields whose names or IDs are in this list will be included in the result. If you don't need<br />every field, you can use this parameter to reduce the amount of data transferred.<br /><br />Note Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may<br />cause your requests to exceed this limit. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.filterByFormula`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | A formula used to filter records. The formula will be evaluated for each record, and if the result is not<br />"
		},
		{
			"kind": "code",
			"text": "`0`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`false`"
		},
		{
			"kind": "text",
			"text": ", ``, "
		},
		{
			"kind": "code",
			"text": "`NaN`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`[]`"
		},
		{
			"kind": "text",
			"text": ", or "
		},
		{
			"kind": "code",
			"text": "`#Error!`"
		},
		{
			"kind": "text",
			"text": " the record will be included in the response. We recommend testing<br />your formula in the Formula field UI before using it in your API request.<br /><br />If combined with the "
		},
		{
			"kind": "code",
			"text": "`view`"
		},
		{
			"kind": "text",
			"text": " parameter, only records in that view which satisfy the formula will be returned.<br /><br />Formulas can use field names, or field id's inside of the formula.<br /><br />Note Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may<br />cause your requests to exceed this limit. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.maxRecords`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | The maximum total number of records that will be returned in your requests. If this value is larger than<br />"
		},
		{
			"kind": "code",
			"text": "`pageSize`"
		},
		{
			"kind": "text",
			"text": " (which is 100 by default), you may have to load multiple pages to reach this total. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.offset`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | To fetch the next page of records, include offset from the previous request in the next request's parameters. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.pageSize`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | The number of records returned in each request. Must be less than or equal to 100. Default is 100. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.recordMetadata`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`\"commentCount\"`"
		},
		{
			"kind": "text",
			"text": "\\[] | An optional field that, if specified, includes commentCount on each record returned. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.returnFieldsByFieldId`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which<br />returns field objects where the key is the field name. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.sort`"
		},
		{
			"kind": "text",
			"text": "? | {"
		},
		{
			"kind": "code",
			"text": "`direction`"
		},
		{
			"kind": "text",
			"text": ": ["
		},
		{
			"kind": "code",
			"text": "`Direction`"
		},
		{
			"kind": "text",
			"text": "](README.md#direction);"
		},
		{
			"kind": "code",
			"text": "`field`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "; }\\[] | A list of sort objects that specifies how the records will be ordered. Each sort object must have a field key<br />specifying the name of the field to sort on, and an optional direction key that is either "
		},
		{
			"kind": "code",
			"text": "`asc`"
		},
		{
			"kind": "text",
			"text": " or "
		},
		{
			"kind": "code",
			"text": "`desc`"
		},
		{
			"kind": "text",
			"text": ".<br />The default direction is "
		},
		{
			"kind": "code",
			"text": "`asc`"
		},
		{
			"kind": "text",
			"text": ".<br /><br />The sort parameter overrides the sorting of the view specified in the view parameter. If neither the sort nor<br />the view parameter is included, the order of records is arbitrary. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.timeZone`"
		},
		{
			"kind": "text",
			"text": "? | ["
		},
		{
			"kind": "code",
			"text": "`Timezone`"
		},
		{
			"kind": "text",
			"text": "](README.md#timezone) | The time zone that should be used to format dates when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". This parameter is<br />required when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". |\n| "
		},
		{
			"kind": "code",
			"text": "`request.typecast`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter<br />is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for<br />integrating with 3rd party data sources. |\n| "
		},
		{
			"kind": "code",
			"text": "`request.userLocale`"
		},
		{
			"kind": "text",
			"text": "? | ["
		},
		{
			"kind": "code",
			"text": "`UserLocale`"
		},
		{
			"kind": "text",
			"text": "](README.md#userlocale) | The user locale that should be used to format dates when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". This parameter<br />is required when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". |\n| "
		},
		{
			"kind": "code",
			"text": "`request.view`"
		},
		{
			"kind": "text",
			"text": "? | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | The name or ID of a view in the table. If set, only the records in that view will be returned. The records<br />will be sorted according to the order of the view unless the "
		},
		{
			"kind": "code",
			"text": "`sort`"
		},
		{
			"kind": "text",
			"text": " parameter is included, which overrides<br />that order. Fields hidden in this view will be returned in the results. To only return a subset of fields,<br />use the "
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": " parameter. |\n\n###### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<{"
		},
		{
			"kind": "code",
			"text": "`offset`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": ": ["
		},
		{
			"kind": "code",
			"text": "`IndividualRecord`"
		},
		{
			"kind": "text",
			"text": "](README.md#individualrecordfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> & {"
		},
		{
			"kind": "code",
			"text": "`commentCount`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": ";  }\\[];  }>\n\n> | Member | Type | Description |\n> | :------ | :------ | :------ |\n> | "
		},
		{
			"kind": "code",
			"text": "`offset`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | If there are more records, the response will contain an offset. Pass this offset into the next request to fetch<br />the next page of records. |\n> | "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`IndividualRecord`"
		},
		{
			"kind": "text",
			"text": "](README.md#individualrecordfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> & {"
		},
		{
			"kind": "code",
			"text": "`commentCount`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": ";  }\\[] | Refer to [IndividualRecord](README.md#individualrecordfields). |\n\n###### Source\n\npackages/client-airtable/src/client.ts:103\n\n##### queueRequest()\n\n> **queueRequest**<"
		},
		{
			"kind": "code",
			"text": "`R`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`handler`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`R`"
		},
		{
			"kind": "text",
			"text": ">\n\n###### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`R`"
		},
		{
			"kind": "text",
			"text": " |\n\n###### Parameters\n\n| Parameter | Type |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " |\n| "
		},
		{
			"kind": "code",
			"text": "`handler`"
		},
		{
			"kind": "text",
			"text": " | ("
		},
		{
			"kind": "code",
			"text": "`$fetch`"
		},
		{
			"kind": "text",
			"text": ") => "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`R`"
		},
		{
			"kind": "text",
			"text": "> |\n\n###### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`R`"
		},
		{
			"kind": "text",
			"text": ">\n\n###### Source\n\npackages/client-airtable/src/client.ts:125\n\n##### updateRecords()\n\n###### updateRecords(request)\n\n> **updateRecords**<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponsenonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n###### Type parameters\n\n| Type parameter | Value |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " |\n\n###### Parameters\n\n| Parameter | Type |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsRequestNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsrequestnonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": "> |\n\n###### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponsenonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n###### Source\n\npackages/client-airtable/src/client.ts:109\n\n###### updateRecords(request)\n\n> **updateRecords**<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponseupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n###### Type parameters\n\n| Type parameter | Value |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " |\n\n###### Parameters\n\n| Parameter | Type |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsRequestUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsrequestupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": "> |\n\n###### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponseupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n###### Source\n\npackages/client-airtable/src/client.ts:113\n\n## Interfaces\n\n### CreateRecordsRequest\\<Fields>\n\nRequest data for creating records.\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | \\["
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`...Fields[]`"
		},
		{
			"kind": "text",
			"text": "] | Records to create. Maximum of 10. |\n| "
		},
		{
			"kind": "code",
			"text": "`returnFieldsByFieldId?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which<br />returns field objects where the key is the field name. |\n| "
		},
		{
			"kind": "code",
			"text": "`tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n| "
		},
		{
			"kind": "code",
			"text": "`typecast?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter<br />is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for<br />integrating with 3rd party data sources. |\n\n***\n\n### CreateRecordsResponse\\<Fields>\n\nResponse for endpoint that create records.\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | {"
		},
		{
			"kind": "code",
			"text": "`createdTime`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Date`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "; }\\[] | The records that were created. Refer to [IndividualRecord](README.md#individualrecordfields). |\n\n***\n\n### DeleteRecordsRequest\n\nRequest data for deleting records.\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "\\[] | List of record IDs to delete. Maximum of 10. |\n| "
		},
		{
			"kind": "code",
			"text": "`tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n\n***\n\n### DeleteRecordsResponse\n\nResponse data after deleting records.\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | {"
		},
		{
			"kind": "code",
			"text": "`deleted`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "; }\\[] | List of records that has been deleted. |\n\n***\n\n### IndividualRecord\\<Fields>\n\nAn individual record.\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`createdTime`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Date`"
		},
		{
			"kind": "text",
			"text": " | Date and time of when the record was created. |\n| "
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " | Fields of the records. |\n| "
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the record. |\n\n***\n\n### ListRecordsRequest\\<Fields>\n\nData for fetching the list of records.\n\n#### Type parameters\n\n| Type parameter | Description |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Name of fields to include in resulting data. |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`cellFormat?`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`CellFormat`"
		},
		{
			"kind": "text",
			"text": "](README.md#cellformat) | The format that should be used for cell values. Defaults to [CellFormat.JSON](README.md#cellformat). |\n| "
		},
		{
			"kind": "code",
			"text": "`fields?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`UnionToTuple`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> | Only data for fields whose names or IDs are in this list will be included in the result. If you don't need<br />every field, you can use this parameter to reduce the amount of data transferred.<br /><br />Note Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may<br />cause your requests to exceed this limit. |\n| "
		},
		{
			"kind": "code",
			"text": "`filterByFormula?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | A formula used to filter records. The formula will be evaluated for each record, and if the result is not<br />"
		},
		{
			"kind": "code",
			"text": "`0`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`false`"
		},
		{
			"kind": "text",
			"text": ", ``, "
		},
		{
			"kind": "code",
			"text": "`NaN`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`[]`"
		},
		{
			"kind": "text",
			"text": ", or "
		},
		{
			"kind": "code",
			"text": "`#Error!`"
		},
		{
			"kind": "text",
			"text": " the record will be included in the response. We recommend testing<br />your formula in the Formula field UI before using it in your API request.<br /><br />If combined with the "
		},
		{
			"kind": "code",
			"text": "`view`"
		},
		{
			"kind": "text",
			"text": " parameter, only records in that view which satisfy the formula will be returned.<br /><br />Formulas can use field names, or field id's inside of the formula.<br /><br />Note Airtable's API only accepts request with a URL shorter than 16,000 characters. Encoded formulas may<br />cause your requests to exceed this limit. |\n| "
		},
		{
			"kind": "code",
			"text": "`maxRecords?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | The maximum total number of records that will be returned in your requests. If this value is larger than<br />"
		},
		{
			"kind": "code",
			"text": "`pageSize`"
		},
		{
			"kind": "text",
			"text": " (which is 100 by default), you may have to load multiple pages to reach this total. |\n| "
		},
		{
			"kind": "code",
			"text": "`offset?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | To fetch the next page of records, include offset from the previous request in the next request's parameters. |\n| "
		},
		{
			"kind": "code",
			"text": "`pageSize?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": " | The number of records returned in each request. Must be less than or equal to 100. Default is 100. |\n| "
		},
		{
			"kind": "code",
			"text": "`recordMetadata?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`\"commentCount\"`"
		},
		{
			"kind": "text",
			"text": "\\[] | An optional field that, if specified, includes commentCount on each record returned. |\n| "
		},
		{
			"kind": "code",
			"text": "`returnFieldsByFieldId?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which<br />returns field objects where the key is the field name. |\n| "
		},
		{
			"kind": "code",
			"text": "`sort?`"
		},
		{
			"kind": "text",
			"text": " | {"
		},
		{
			"kind": "code",
			"text": "`direction`"
		},
		{
			"kind": "text",
			"text": ": ["
		},
		{
			"kind": "code",
			"text": "`Direction`"
		},
		{
			"kind": "text",
			"text": "](README.md#direction);"
		},
		{
			"kind": "code",
			"text": "`field`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "; }\\[] | A list of sort objects that specifies how the records will be ordered. Each sort object must have a field key<br />specifying the name of the field to sort on, and an optional direction key that is either "
		},
		{
			"kind": "code",
			"text": "`asc`"
		},
		{
			"kind": "text",
			"text": " or "
		},
		{
			"kind": "code",
			"text": "`desc`"
		},
		{
			"kind": "text",
			"text": ".<br />The default direction is "
		},
		{
			"kind": "code",
			"text": "`asc`"
		},
		{
			"kind": "text",
			"text": ".<br /><br />The sort parameter overrides the sorting of the view specified in the view parameter. If neither the sort nor<br />the view parameter is included, the order of records is arbitrary. |\n| "
		},
		{
			"kind": "code",
			"text": "`tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n| "
		},
		{
			"kind": "code",
			"text": "`timeZone?`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`Timezone`"
		},
		{
			"kind": "text",
			"text": "](README.md#timezone) | The time zone that should be used to format dates when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". This parameter is<br />required when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". |\n| "
		},
		{
			"kind": "code",
			"text": "`typecast?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter<br />is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for<br />integrating with 3rd party data sources. |\n| "
		},
		{
			"kind": "code",
			"text": "`userLocale?`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UserLocale`"
		},
		{
			"kind": "text",
			"text": "](README.md#userlocale) | The user locale that should be used to format dates when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". This parameter<br />is required when using "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " as the "
		},
		{
			"kind": "code",
			"text": "`cellFormat`"
		},
		{
			"kind": "text",
			"text": ". |\n| "
		},
		{
			"kind": "code",
			"text": "`view?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | The name or ID of a view in the table. If set, only the records in that view will be returned. The records<br />will be sorted according to the order of the view unless the "
		},
		{
			"kind": "code",
			"text": "`sort`"
		},
		{
			"kind": "text",
			"text": " parameter is included, which overrides<br />that order. Fields hidden in this view will be returned in the results. To only return a subset of fields,<br />use the "
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": " parameter. |\n\n***\n\n### ListRecordsResponse\\<Fields>\n\nResponse data for the records that were requested.\n\n#### Type parameters\n\n| Type parameter | Description |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) | Mapping of fields to return to their type. |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`offset?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | If there are more records, the response will contain an offset. Pass this offset into the next request to fetch<br />the next page of records. |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`IndividualRecord`"
		},
		{
			"kind": "text",
			"text": "](README.md#individualrecordfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> & {"
		},
		{
			"kind": "code",
			"text": "`commentCount`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`number`"
		},
		{
			"kind": "text",
			"text": "; }\\[] | Refer to [IndividualRecord](README.md#individualrecordfields). |\n\n***\n\n### UpdateRecordsRequestNonUpsert\\<Fields>\n\nRequest data for updating records.\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`method`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UpdateType`"
		},
		{
			"kind": "text",
			"text": "](README.md#updatetype) | Method to use when updating data. |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | \\[{"
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ";"
		},
		{
			"kind": "code",
			"text": "`id`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "; }, "
		},
		{
			"kind": "code",
			"text": "`...Object[]`"
		},
		{
			"kind": "text",
			"text": "] | List of records to update. Max of 10. |\n| "
		},
		{
			"kind": "code",
			"text": "`returnFieldsByFieldId?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which<br />returns field objects where the key is the field name. |\n| "
		},
		{
			"kind": "code",
			"text": "`tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n| "
		},
		{
			"kind": "code",
			"text": "`typecast?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter<br />is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for<br />integrating with 3rd party data sources. |\n\n***\n\n### UpdateRecordsRequestUpsert\\<Fields>\n\nRequest data for upserting records.\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Properties\n\n| Property | Type | Description |\n| :------ | :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`baseId`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier for the base. |\n| "
		},
		{
			"kind": "code",
			"text": "`method`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UpdateType`"
		},
		{
			"kind": "text",
			"text": "](README.md#updatetype) | Method to use when updating data. |\n| "
		},
		{
			"kind": "code",
			"text": "`performUpsert`"
		},
		{
			"kind": "text",
			"text": " | {"
		},
		{
			"kind": "code",
			"text": "`fieldsToMergeOn`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "\\[]; } | Enables upsert behavior when set.<br /><br />"
		},
		{
			"kind": "code",
			"text": "`fieldsToMergeOn`"
		},
		{
			"kind": "text",
			"text": " will be used as an external ID to match records for updates. For records where no match is<br />found, a new Airtable record will be created. |\n| "
		},
		{
			"kind": "code",
			"text": "`performUpsert.fieldsToMergeOn`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": "\\[] | An array with at least one and at most three field names or IDs. IDs must uniquely identify a single<br />record. These cannot be computed fields (formulas, lookups, rollups), and must be one of the following<br />types: number, text, long text, single select, multiple select, date. |\n| "
		},
		{
			"kind": "code",
			"text": "`records`"
		},
		{
			"kind": "text",
			"text": " | \\[{"
		},
		{
			"kind": "code",
			"text": "`fields`"
		},
		{
			"kind": "text",
			"text": ": "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "; }, "
		},
		{
			"kind": "code",
			"text": "`...Object[]`"
		},
		{
			"kind": "text",
			"text": "] | List of records to update. Max of 10. |\n| "
		},
		{
			"kind": "code",
			"text": "`returnFieldsByFieldId?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | An optional boolean value that lets you return field objects keyed by the field id. This defaults to false, which<br />returns field objects where the key is the field name. |\n| "
		},
		{
			"kind": "code",
			"text": "`tableIdOrName`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": " | Identifier or name for the table. Preference is to use the ID which is unchanging. |\n| "
		},
		{
			"kind": "code",
			"text": "`typecast?`"
		},
		{
			"kind": "text",
			"text": " | "
		},
		{
			"kind": "code",
			"text": "`boolean`"
		},
		{
			"kind": "text",
			"text": " | The Airtable API will perform best-effort automatic data conversion from string values if the typecast parameter<br />is passed in. Automatic conversion is disabled by default to ensure data integrity, but it may be helpful for<br />integrating with 3rd party data sources. |\n\n## Type Aliases\n\n### RecordFields\n\n> **RecordFields**: "
		},
		{
			"kind": "code",
			"text": "`NonEmptyObject`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": ">>\n\nThe fields of a record.\n\n#### Source\n\npackages/client-airtable/src/records/shared.ts:14\n\n***\n\n### UpdateRecordsRequest\\<Fields>\n\n> **UpdateRecordsRequest**<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">: ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsRequestNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsrequestnonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> | ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsRequestUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsrequestupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Source\n\npackages/client-airtable/src/records/update-records.ts:109\n\n***\n\n### UpdateRecordsResponse\\<Fields>\n\n> **UpdateRecordsResponse**<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">: ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponsenonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": "> | ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponseupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Source\n\npackages/client-airtable/src/records/update-records.ts:136\n\n***\n\n### UpdateRecordsResponseNonUpsert\\<Fields>\n\n> **UpdateRecordsResponseNonUpsert**<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">: "
		},
		{
			"kind": "code",
			"text": "`ExtendSchemaWithFieldsForRecords`"
		},
		{
			"kind": "text",
			"text": "<*typeof* "
		},
		{
			"kind": "code",
			"text": "`SCHEMA_UPDATE_RECORDS_RESPONSE_NON_UPSERT`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Source\n\npackages/client-airtable/src/records/update-records.ts:117\n\n***\n\n### UpdateRecordsResponseUpsert\\<Fields>\n\n> **UpdateRecordsResponseUpsert**<"
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">: "
		},
		{
			"kind": "code",
			"text": "`ExtendSchemaWithFieldsForRecords`"
		},
		{
			"kind": "text",
			"text": "<*typeof* "
		},
		{
			"kind": "code",
			"text": "`SCHEMA_UPDATE_RECORDS_RESPONSE_UPSERT`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": ">\n\n#### Type parameters\n\n| Type parameter |\n| :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`Fields`"
		},
		{
			"kind": "text",
			"text": " extends ["
		},
		{
			"kind": "code",
			"text": "`RecordFields`"
		},
		{
			"kind": "text",
			"text": "](README.md#recordfields) |\n\n#### Source\n\npackages/client-airtable/src/records/update-records.ts:127\n\n## Functions\n\n### updateRecords()\n\n#### updateRecords(client, request)\n\n> **updateRecords**<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`client`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponsenonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n##### Type parameters\n\n| Type parameter | Value |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " |\n\n##### Parameters\n\n| Parameter | Type |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`client`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`AirtableClient`"
		},
		{
			"kind": "text",
			"text": "](README.md#airtableclient) |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsRequestNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsrequestnonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": "> |\n\n##### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseNonUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponsenonupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n##### Source\n\npackages/client-airtable/src/records/update-records.ts:140\n\n#### updateRecords(client, request)\n\n> **updateRecords**<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">("
		},
		{
			"kind": "code",
			"text": "`client`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": "): "
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponseupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n##### Type parameters\n\n| Type parameter | Value |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | - |\n| "
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": " extends "
		},
		{
			"kind": "code",
			"text": "`Record`"
		},
		{
			"kind": "text",
			"text": "<"
		},
		{
			"kind": "code",
			"text": "`string`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`unknown`"
		},
		{
			"kind": "text",
			"text": "> | "
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": " |\n\n##### Parameters\n\n| Parameter | Type |\n| :------ | :------ |\n| "
		},
		{
			"kind": "code",
			"text": "`client`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`AirtableClient`"
		},
		{
			"kind": "text",
			"text": "](README.md#airtableclient) |\n| "
		},
		{
			"kind": "code",
			"text": "`request`"
		},
		{
			"kind": "text",
			"text": " | ["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsRequestUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsrequestupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`RequestFields`"
		},
		{
			"kind": "text",
			"text": "> |\n\n##### Returns\n\n"
		},
		{
			"kind": "code",
			"text": "`Promise`"
		},
		{
			"kind": "text",
			"text": "<["
		},
		{
			"kind": "code",
			"text": "`UpdateRecordsResponseUpsert`"
		},
		{
			"kind": "text",
			"text": "](README.md#updaterecordsresponseupsertfields)<"
		},
		{
			"kind": "code",
			"text": "`ResponseFields`"
		},
		{
			"kind": "text",
			"text": ">>\n\n##### Source\n\npackages/client-airtable/src/records/update-records.ts:147"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.docs.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient"
		},
		"2": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.__constructor"
		},
		"3": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient"
		},
		"4": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "apiToken"
		},
		"5": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "requestOptions"
		},
		"6": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"7": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "baseURL"
		},
		"8": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "body"
		},
		"9": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "ignoreResponseError"
		},
		"10": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "params"
		},
		"11": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "query"
		},
		"12": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "parseResponse"
		},
		"13": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type"
		},
		"14": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type"
		},
		"15": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "responseText"
		},
		"16": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "responseType"
		},
		"17": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "duplex"
		},
		"18": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "timeout"
		},
		"19": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "retry"
		},
		"20": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "retryDelay"
		},
		"21": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "retryStatusCodes"
		},
		"22": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onRequest"
		},
		"23": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onRequest"
		},
		"24": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "context"
		},
		"25": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onRequestError"
		},
		"26": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onRequestError"
		},
		"27": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "context"
		},
		"28": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type"
		},
		"29": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type.error"
		},
		"30": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onResponse"
		},
		"31": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onResponse"
		},
		"32": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "context"
		},
		"33": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type"
		},
		"34": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type.response"
		},
		"35": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onResponseError"
		},
		"36": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "onResponseError"
		},
		"37": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "context"
		},
		"38": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type"
		},
		"39": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/ofetch@1.3.4/node_modules/ofetch/dist/shared/ofetch.8459ad38.d.ts",
			"qualifiedName": "__type.response"
		},
		"40": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "method"
		},
		"41": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "cache"
		},
		"42": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "credentials"
		},
		"43": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "headers"
		},
		"44": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "integrity"
		},
		"45": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "keepalive"
		},
		"46": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "mode"
		},
		"47": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "priority"
		},
		"48": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "redirect"
		},
		"49": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "referrer"
		},
		"50": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "referrerPolicy"
		},
		"51": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "signal"
		},
		"52": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/typescript@5.4.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "window"
		},
		"53": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.client"
		},
		"54": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.queueOverall"
		},
		"55": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.queuePerBase"
		},
		"56": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.createRecords"
		},
		"57": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.createRecords"
		},
		"58": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "RequestFields"
		},
		"59": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "ResponseFields"
		},
		"60": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "request"
		},
		"61": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "records"
		},
		"63": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"64": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"65": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"66": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"67": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"68": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "records"
		},
		"69": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"70": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "id"
		},
		"71": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "createdTime"
		},
		"72": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "fields"
		},
		"73": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.deleteRecords"
		},
		"74": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.deleteRecords"
		},
		"75": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "request"
		},
		"76": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"77": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "records"
		},
		"78": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"79": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"80": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"81": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "records"
		},
		"82": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type"
		},
		"83": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type.id"
		},
		"84": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type.deleted"
		},
		"85": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.listRecords"
		},
		"86": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.listRecords"
		},
		"87": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "Fields"
		},
		"88": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "request"
		},
		"89": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"90": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "fields"
		},
		"91": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "filterByFormula"
		},
		"92": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "maxRecords"
		},
		"93": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "offset"
		},
		"94": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "pageSize"
		},
		"95": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "recordMetadata"
		},
		"96": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "sort"
		},
		"97": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type"
		},
		"98": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.field"
		},
		"99": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.direction"
		},
		"100": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "timeZone"
		},
		"101": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "userLocale"
		},
		"102": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "view"
		},
		"103": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"104": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"105": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "cellFormat"
		},
		"106": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"107": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"108": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"109": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "offset"
		},
		"110": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "records"
		},
		"111": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type"
		},
		"112": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.commentCount"
		},
		"113": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.updateRecords"
		},
		"114": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.updateRecords"
		},
		"115": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "RequestFields"
		},
		"116": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "ResponseFields"
		},
		"117": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "request"
		},
		"118": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.updateRecords"
		},
		"119": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "RequestFields"
		},
		"120": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "ResponseFields"
		},
		"121": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "request"
		},
		"122": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.queueRequest"
		},
		"123": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.queueRequest"
		},
		"124": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "R"
		},
		"125": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "baseId"
		},
		"126": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "handler"
		},
		"127": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type"
		},
		"128": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "__type"
		},
		"129": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "$fetch"
		},
		"130": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.getQueueForBase"
		},
		"131": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "AirtableClient.getQueueForBase"
		},
		"132": {
			"sourceFileName": "src/client.ts",
			"qualifiedName": "baseId"
		},
		"133": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CellFormat"
		},
		"134": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CellFormat.JSON"
		},
		"135": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "CellFormat.STRING"
		},
		"136": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Direction"
		},
		"137": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Direction.ASC"
		},
		"138": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Direction.DESC"
		},
		"139": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone"
		},
		"140": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.UTC"
		},
		"141": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.CLIENT"
		},
		"142": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_ABIDJAN"
		},
		"143": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_ACCRA"
		},
		"144": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_ADDIS_ABABA"
		},
		"145": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_ALGIERS"
		},
		"146": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_ASMARA"
		},
		"147": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BAMAKO"
		},
		"148": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BANGUI"
		},
		"149": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BANJUL"
		},
		"150": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BISSAU"
		},
		"151": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BLANTYRE"
		},
		"152": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BRAZZAVILLE"
		},
		"153": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_BUJUMBURA"
		},
		"154": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_CAIRO"
		},
		"155": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_CASABLANCA"
		},
		"156": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_CEUTA"
		},
		"157": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_CONAKRY"
		},
		"158": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_DAKAR"
		},
		"159": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_DAR_ES_SALAAM"
		},
		"160": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_DJIBOUTI"
		},
		"161": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_DOUALA"
		},
		"162": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_EL_AAIUN"
		},
		"163": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_FREETOWN"
		},
		"164": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_GABORONE"
		},
		"165": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_HARARE"
		},
		"166": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_JOHANNESBURG"
		},
		"167": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_JUBA"
		},
		"168": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_KAMPALA"
		},
		"169": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_KHARTOUM"
		},
		"170": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_KIGALI"
		},
		"171": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_KINSHASA"
		},
		"172": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_LAGOS"
		},
		"173": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_LIBREVILLE"
		},
		"174": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_LOME"
		},
		"175": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_LUANDA"
		},
		"176": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_LUBUMBASHI"
		},
		"177": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_LUSAKA"
		},
		"178": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_MALABO"
		},
		"179": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_MAPUTO"
		},
		"180": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_MASERU"
		},
		"181": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_MBABANE"
		},
		"182": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_MOGADISHU"
		},
		"183": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_MONROVIA"
		},
		"184": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_NAIROBI"
		},
		"185": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_NDJAMENA"
		},
		"186": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_NIAMEY"
		},
		"187": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_NOUAKCHOTT"
		},
		"188": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_OUAGADOUGOU"
		},
		"189": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_PORTO_NOVO"
		},
		"190": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_SAO_TOME"
		},
		"191": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_TRIPOLI"
		},
		"192": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_TUNIS"
		},
		"193": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AFRICA_WINDHOEK"
		},
		"194": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ADAK"
		},
		"195": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ANCHORAGE"
		},
		"196": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ANGUILLA"
		},
		"197": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ANTIGUA"
		},
		"198": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARAGUAINA"
		},
		"199": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_BUENOS_AIRES"
		},
		"200": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_CATAMARCA"
		},
		"201": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_CORDOBA"
		},
		"202": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_JUJUY"
		},
		"203": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_LA_RIOJA"
		},
		"204": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_MENDOZA"
		},
		"205": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_RIO_GALLEGOS"
		},
		"206": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_SALTA"
		},
		"207": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_SAN_JUAN"
		},
		"208": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_SAN_LUIS"
		},
		"209": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_TUCUMAN"
		},
		"210": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARGENTINA_USHUAIA"
		},
		"211": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ARUBA"
		},
		"212": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ASUNCION"
		},
		"213": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ATIKOKAN"
		},
		"214": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BAHIA"
		},
		"215": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BAHIA_BANDERAS"
		},
		"216": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BARBADOS"
		},
		"217": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BELEM"
		},
		"218": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BELIZE"
		},
		"219": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BLANC_SABLON"
		},
		"220": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BOA_VISTA"
		},
		"221": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BOGOTA"
		},
		"222": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_BOISE"
		},
		"223": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CAMBRIDGE_BAY"
		},
		"224": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CAMPO_GRANDE"
		},
		"225": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CANCUN"
		},
		"226": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CARACAS"
		},
		"227": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CAYENNE"
		},
		"228": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CAYMAN"
		},
		"229": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CHICAGO"
		},
		"230": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CHIHUAHUA"
		},
		"231": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_COSTA_RICA"
		},
		"232": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CRESTON"
		},
		"233": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CUIABA"
		},
		"234": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_CURACAO"
		},
		"235": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_DANMARKSHAVN"
		},
		"236": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_DAWSON"
		},
		"237": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_DAWSON_CREEK"
		},
		"238": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_DENVER"
		},
		"239": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_DETROIT"
		},
		"240": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_DOMINICA"
		},
		"241": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_EDMONTON"
		},
		"242": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_EIRUNEPE"
		},
		"243": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_EL_SALVADOR"
		},
		"244": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_FORT_NELSON"
		},
		"245": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_FORTALEZA"
		},
		"246": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GLACE_BAY"
		},
		"247": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GODTHAB"
		},
		"248": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GOOSE_BAY"
		},
		"249": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GRAND_TURK"
		},
		"250": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GRENADA"
		},
		"251": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GUADELOUPE"
		},
		"252": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GUATEMALA"
		},
		"253": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GUAYAQUIL"
		},
		"254": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_GUYANA"
		},
		"255": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_HALIFAX"
		},
		"256": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_HAVANA"
		},
		"257": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_HERMOSILLO"
		},
		"258": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_INDIANAPOLIS"
		},
		"259": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_KNOX"
		},
		"260": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_MARENGO"
		},
		"261": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_PETERSBURG"
		},
		"262": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_TELL_CITY"
		},
		"263": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_VEVAY"
		},
		"264": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_VINCENNES"
		},
		"265": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INDIANA_WINAMAC"
		},
		"266": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_INUVIK"
		},
		"267": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_IQALUIT"
		},
		"268": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_JAMAICA"
		},
		"269": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_JUNEAU"
		},
		"270": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_KENTUCKY_LOUISVILLE"
		},
		"271": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_KENTUCKY_MONTICELLO"
		},
		"272": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_KRALENDIJK"
		},
		"273": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_LA_PAZ"
		},
		"274": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_LIMA"
		},
		"275": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_LOS_ANGELES"
		},
		"276": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_LOWER_PRINCES"
		},
		"277": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MACEIO"
		},
		"278": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MANAGUA"
		},
		"279": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MANAUS"
		},
		"280": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MARIGOT"
		},
		"281": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MARTINIQUE"
		},
		"282": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MATAMOROS"
		},
		"283": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MAZATLAN"
		},
		"284": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MENOMINEE"
		},
		"285": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MERIDA"
		},
		"286": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_METLAKATLA"
		},
		"287": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MEXICO_CITY"
		},
		"288": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MIQUELON"
		},
		"289": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MONCTON"
		},
		"290": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MONTERREY"
		},
		"291": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MONTEVIDEO"
		},
		"292": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_MONTSERRAT"
		},
		"293": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NASSAU"
		},
		"294": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NEW_YORK"
		},
		"295": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NIPIGON"
		},
		"296": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NOME"
		},
		"297": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NORONHA"
		},
		"298": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NORTH_DAKOTA_BEULAH"
		},
		"299": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NORTH_DAKOTA_CENTER"
		},
		"300": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NORTH_DAKOTA_NEW_SALEM"
		},
		"301": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_NUUK"
		},
		"302": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_OJINAGA"
		},
		"303": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PANAMA"
		},
		"304": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PANGNIRTUNG"
		},
		"305": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PARAMARIBO"
		},
		"306": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PHOENIX"
		},
		"307": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PORT_AU_PRINCE"
		},
		"308": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PORT_OF_SPAIN"
		},
		"309": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PORTO_VELHO"
		},
		"310": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PUERTO_RICO"
		},
		"311": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_PUNTA_ARENAS"
		},
		"312": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_RAINY_RIVER"
		},
		"313": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_RANKIN_INLET"
		},
		"314": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_RECIFE"
		},
		"315": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_REGINA"
		},
		"316": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_RESOLUTE"
		},
		"317": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_RIO_BRANCO"
		},
		"318": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SANTAREM"
		},
		"319": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SANTIAGO"
		},
		"320": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SANTO_DOMINGO"
		},
		"321": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SAO_PAULO"
		},
		"322": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SCORESBYSUND"
		},
		"323": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SITKA"
		},
		"324": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ST_BARTHELEMY"
		},
		"325": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ST_JOHNS"
		},
		"326": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ST_KITTS"
		},
		"327": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ST_LUCIA"
		},
		"328": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ST_THOMAS"
		},
		"329": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_ST_VINCENT"
		},
		"330": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_SWIFT_CURRENT"
		},
		"331": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_TEGUCIGALPA"
		},
		"332": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_THULE"
		},
		"333": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_THUNDER_BAY"
		},
		"334": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_TIJUANA"
		},
		"335": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_TORONTO"
		},
		"336": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_TORTOLA"
		},
		"337": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_VANCOUVER"
		},
		"338": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_WHITEHORSE"
		},
		"339": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_WINNIPEG"
		},
		"340": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_YAKUTAT"
		},
		"341": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AMERICA_YELLOWKNIFE"
		},
		"342": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_CASEY"
		},
		"343": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_DAVIS"
		},
		"344": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_DUMONTDURVILLE"
		},
		"345": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_MACQUARIE"
		},
		"346": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_MAWSON"
		},
		"347": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_MCMURDO"
		},
		"348": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_PALMER"
		},
		"349": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_ROTHERA"
		},
		"350": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_SYOWA"
		},
		"351": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_TROLL"
		},
		"352": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ANTARCTICA_VOSTOK"
		},
		"353": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ARCTIC_LONGYEARBYEN"
		},
		"354": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ADEN"
		},
		"355": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ALMATY"
		},
		"356": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_AMMAN"
		},
		"357": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ANADYR"
		},
		"358": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_AQTAU"
		},
		"359": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_AQTOBE"
		},
		"360": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ASHGABAT"
		},
		"361": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ATYRAU"
		},
		"362": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BAGHDAD"
		},
		"363": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BAHRAIN"
		},
		"364": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BAKU"
		},
		"365": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BANGKOK"
		},
		"366": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BARNAUL"
		},
		"367": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BEIRUT"
		},
		"368": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BISHKEK"
		},
		"369": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_BRUNEI"
		},
		"370": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_CHITA"
		},
		"371": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_CHOIBALSAN"
		},
		"372": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_COLOMBO"
		},
		"373": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_DAMASCUS"
		},
		"374": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_DHAKA"
		},
		"375": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_DILI"
		},
		"376": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_DUBAI"
		},
		"377": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_DUSHANBE"
		},
		"378": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_FAMAGUSTA"
		},
		"379": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_GAZA"
		},
		"380": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_HEBRON"
		},
		"381": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_HO_CHI_MINH"
		},
		"382": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_HONG_KONG"
		},
		"383": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_HOVD"
		},
		"384": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_IRKUTSK"
		},
		"385": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ISTANBUL"
		},
		"386": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_JAKARTA"
		},
		"387": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_JAYAPURA"
		},
		"388": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_JERUSALEM"
		},
		"389": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KABUL"
		},
		"390": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KAMCHATKA"
		},
		"391": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KARACHI"
		},
		"392": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KATHMANDU"
		},
		"393": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KHANDYGA"
		},
		"394": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KOLKATA"
		},
		"395": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KRASNOYARSK"
		},
		"396": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KUALA_LUMPUR"
		},
		"397": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KUCHING"
		},
		"398": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_KUWAIT"
		},
		"399": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_MACAU"
		},
		"400": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_MAGADAN"
		},
		"401": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_MAKASSAR"
		},
		"402": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_MANILA"
		},
		"403": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_MUSCAT"
		},
		"404": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_NICOSIA"
		},
		"405": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_NOVOKUZNETSK"
		},
		"406": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_NOVOSIBIRSK"
		},
		"407": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_OMSK"
		},
		"408": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ORAL"
		},
		"409": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_PHNOM_PENH"
		},
		"410": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_PONTIANAK"
		},
		"411": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_PYONGYANG"
		},
		"412": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_QATAR"
		},
		"413": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_QOSTANAY"
		},
		"414": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_QYZYLORDA"
		},
		"415": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_RANGOON"
		},
		"416": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_RIYADH"
		},
		"417": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_SAKHALIN"
		},
		"418": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_SAMARKAND"
		},
		"419": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_SEOUL"
		},
		"420": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_SHANGHAI"
		},
		"421": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_SINGAPORE"
		},
		"422": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_SREDNEKOLYMSK"
		},
		"423": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_TAIPEI"
		},
		"424": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_TASHKENT"
		},
		"425": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_TBILISI"
		},
		"426": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_TEHRAN"
		},
		"427": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_THIMPHU"
		},
		"428": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_TOKYO"
		},
		"429": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_TOMSK"
		},
		"430": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_ULAANBAATAR"
		},
		"431": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_URUMQI"
		},
		"432": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_UST_NERA"
		},
		"433": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_VIENTIANE"
		},
		"434": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_VLADIVOSTOK"
		},
		"435": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_YAKUTSK"
		},
		"436": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_YANGON"
		},
		"437": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_YEKATERINBURG"
		},
		"438": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ASIA_YEREVAN"
		},
		"439": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_AZORES"
		},
		"440": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_BERMUDA"
		},
		"441": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_CANARY"
		},
		"442": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_CAPE_VERDE"
		},
		"443": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_FAROE"
		},
		"444": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_MADEIRA"
		},
		"445": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_REYKJAVIK"
		},
		"446": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_SOUTH_GEORGIA"
		},
		"447": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_ST_HELENA"
		},
		"448": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.ATLANTIC_STANLEY"
		},
		"449": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_ADELAIDE"
		},
		"450": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_BRISBANE"
		},
		"451": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_BROKEN_HILL"
		},
		"452": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_CURRIE"
		},
		"453": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_DARWIN"
		},
		"454": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_EUCLA"
		},
		"455": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_HOBART"
		},
		"456": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_LINDEMAN"
		},
		"457": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_LORD_HOWE"
		},
		"458": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_MELBOURNE"
		},
		"459": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_PERTH"
		},
		"460": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.AUSTRALIA_SYDNEY"
		},
		"461": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_AMSTERDAM"
		},
		"462": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ANDORRA"
		},
		"463": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ASTRAKHAN"
		},
		"464": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ATHENS"
		},
		"465": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BELGRADE"
		},
		"466": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BERLIN"
		},
		"467": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BRATISLAVA"
		},
		"468": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BRUSSELS"
		},
		"469": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BUCHAREST"
		},
		"470": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BUDAPEST"
		},
		"471": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_BUSINGEN"
		},
		"472": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_CHISINAU"
		},
		"473": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_COPENHAGEN"
		},
		"474": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_DUBLIN"
		},
		"475": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_GIBRALTAR"
		},
		"476": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_GUERNSEY"
		},
		"477": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_HELSINKI"
		},
		"478": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ISLE_OF_MAN"
		},
		"479": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ISTANBUL"
		},
		"480": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_JERSEY"
		},
		"481": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_KALININGRAD"
		},
		"482": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_KIEV"
		},
		"483": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_KIROV"
		},
		"484": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_LISBON"
		},
		"485": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_LJUBLJANA"
		},
		"486": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_LONDON"
		},
		"487": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_LUXEMBOURG"
		},
		"488": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_MADRID"
		},
		"489": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_MALTA"
		},
		"490": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_MARIEHAMN"
		},
		"491": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_MINSK"
		},
		"492": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_MONACO"
		},
		"493": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_MOSCOW"
		},
		"494": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_NICOSIA"
		},
		"495": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_OSLO"
		},
		"496": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_PARIS"
		},
		"497": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_PODGORICA"
		},
		"498": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_PRAGUE"
		},
		"499": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_RIGA"
		},
		"500": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ROME"
		},
		"501": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SAMARA"
		},
		"502": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SAN_MARINO"
		},
		"503": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SARAJEVO"
		},
		"504": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SARATOV"
		},
		"505": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SIMFEROPOL"
		},
		"506": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SKOPJE"
		},
		"507": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_SOFIA"
		},
		"508": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_STOCKHOLM"
		},
		"509": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_TALLINN"
		},
		"510": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_TIRANE"
		},
		"511": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ULYANOVSK"
		},
		"512": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_UZHGOROD"
		},
		"513": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_VADUZ"
		},
		"514": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_VATICAN"
		},
		"515": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_VIENNA"
		},
		"516": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_VILNIUS"
		},
		"517": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_VOLGOGRAD"
		},
		"518": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_WARSAW"
		},
		"519": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ZAGREB"
		},
		"520": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ZAPOROZHYE"
		},
		"521": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.EUROPE_ZURICH"
		},
		"522": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_ANTANANARIVO"
		},
		"523": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_CHAGOS"
		},
		"524": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_CHRISTMAS"
		},
		"525": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_COCOS"
		},
		"526": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_COMORO"
		},
		"527": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_KERGUELEN"
		},
		"528": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_MAHE"
		},
		"529": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_MALDIVES"
		},
		"530": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_MAURITIUS"
		},
		"531": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_MAYOTTE"
		},
		"532": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.INDIAN_REUNION"
		},
		"533": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_APIA"
		},
		"534": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_AUCKLAND"
		},
		"535": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_BOUGAINVILLE"
		},
		"536": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_CHATHAM"
		},
		"537": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_CHUUK"
		},
		"538": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_EASTER"
		},
		"539": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_EFATE"
		},
		"540": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_ENDERBURY"
		},
		"541": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_FAKAOFO"
		},
		"542": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_FIJI"
		},
		"543": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_FUNAFUTI"
		},
		"544": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_GALAPAGOS"
		},
		"545": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_GAMBIER"
		},
		"546": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_GUADALCANAL"
		},
		"547": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_GUAM"
		},
		"548": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_HONOLULU"
		},
		"549": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_KANTON"
		},
		"550": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_KIRITIMATI"
		},
		"551": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_KOSRAE"
		},
		"552": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_KWAJALEIN"
		},
		"553": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_MAJURO"
		},
		"554": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_MARQUESAS"
		},
		"555": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_MIDWAY"
		},
		"556": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_NAURU"
		},
		"557": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_NIUE"
		},
		"558": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_NORFOLK"
		},
		"559": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_NOUMEA"
		},
		"560": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_PAGO_PAGO"
		},
		"561": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_PALAU"
		},
		"562": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_PITCAIRN"
		},
		"563": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_POHNPEI"
		},
		"564": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_PORT_MORESBY"
		},
		"565": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_RAROTONGA"
		},
		"566": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_SAIPAN"
		},
		"567": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_TAHITI"
		},
		"568": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_TARAWA"
		},
		"569": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_TONGATAPU"
		},
		"570": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_WAKE"
		},
		"571": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "Timezone.PACIFIC_WALLIS"
		},
		"572": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UpdateType"
		},
		"573": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UpdateType.FULL"
		},
		"574": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UpdateType.PARTIAL"
		},
		"575": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale"
		},
		"576": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.AFRIKAANS"
		},
		"577": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ALBANIAN"
		},
		"578": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ARABIC"
		},
		"579": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ARABIC_SAUDI_ARABIA"
		},
		"580": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ARMENIAN"
		},
		"581": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.AUSTRALIAN_ENGLISH"
		},
		"582": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.AUSTRIAN_GERMAN"
		},
		"583": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.AZERBAIJANI"
		},
		"584": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BAHASA_INDONESIA"
		},
		"585": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BAHASA_MALAYSIA"
		},
		"586": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BELARUSIAN"
		},
		"587": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BENGALI"
		},
		"588": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BOSNIAN"
		},
		"589": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BOSO_JOWO"
		},
		"590": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BRAZILIAN_PORTUGUESE"
		},
		"591": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BRETON"
		},
		"592": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BRITISH_ENGLISH"
		},
		"593": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BULGARIAN"
		},
		"594": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.BURMESE"
		},
		"595": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.CANADIAN_ENGLISH"
		},
		"596": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.CANADIAN_FRENCH"
		},
		"597": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.CATALAN"
		},
		"598": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.CHUVASH"
		},
		"599": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.CZECH"
		},
		"600": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.DANISH"
		},
		"601": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.DUTCH"
		},
		"602": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ENGLISH"
		},
		"603": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ESPERANTO"
		},
		"604": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ESTONIAN"
		},
		"605": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.EUSKARA"
		},
		"606": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.FAROESE"
		},
		"607": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.FINNISH"
		},
		"608": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.FRENCH"
		},
		"609": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.FRISIAN"
		},
		"610": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.GALICIAN"
		},
		"611": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.GEORGIAN"
		},
		"612": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.GERMAN"
		},
		"613": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.HEBREW"
		},
		"614": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.HINDI"
		},
		"615": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.HRVATSKI"
		},
		"616": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.HUNGARIAN"
		},
		"617": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ICELANDIC"
		},
		"618": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.IRISH_ENGLISH"
		},
		"619": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ITALIAN"
		},
		"620": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.JAPANESE"
		},
		"621": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.KHMER"
		},
		"622": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.KOREAN"
		},
		"623": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.LATVIAN"
		},
		"624": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.LITHUANIAN"
		},
		"625": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.LUXEMBOURGISH"
		},
		"626": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MACEDONIAN"
		},
		"627": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MALAYALAM"
		},
		"628": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MARATHI"
		},
		"629": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MODERN_GREEK"
		},
		"630": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MONTENEGRIN"
		},
		"631": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MOROCCAN_ARABIC"
		},
		"632": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MOROCCO_CENTRAL_ATLAS_TAMAZIƔT"
		},
		"633": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.MOROCCO_CENTRAL_ATLAS_TAMAZIYT_LATIN"
		},
		"634": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.NEPALI"
		},
		"635": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.NEW_ZEALAND_ENGLISH"
		},
		"636": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.NORWEGIAN_BOKMAL"
		},
		"637": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.NORWEGIAN_NYNORSK"
		},
		"638": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.PERSIAN"
		},
		"639": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.POLISH"
		},
		"640": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.PORTUGUESE"
		},
		"641": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.ROMANIAN"
		},
		"642": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.RUSSIAN"
		},
		"643": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SERBIAN_CYRILLIC"
		},
		"644": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SERBIAN_LATIN"
		},
		"645": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SIMPLIFIED_CHINESE"
		},
		"646": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SINHALA"
		},
		"647": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SLOVAK"
		},
		"648": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SLOVENIAN"
		},
		"649": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SPANISH"
		},
		"650": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SWEDISH"
		},
		"651": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.SWISS_FRENCH"
		},
		"652": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TAGALOG_FILIPINO"
		},
		"653": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TALOSSAN"
		},
		"654": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TAMIL"
		},
		"655": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.THAI"
		},
		"656": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TIBETAN"
		},
		"657": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TRADITIONAL_CHINESE"
		},
		"658": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TUNISIAN_ARABIC"
		},
		"659": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.TURKISH"
		},
		"660": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.UKRAINIAN"
		},
		"661": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.UZBEK"
		},
		"662": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.VIETNAMESE"
		},
		"663": {
			"sourceFileName": "src/enums.ts",
			"qualifiedName": "UserLocale.WELSH"
		},
		"664": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "createRecords"
		},
		"665": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "createRecords"
		},
		"666": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "RequestFields"
		},
		"667": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "ResponseFields"
		},
		"668": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "client"
		},
		"669": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "request"
		},
		"670": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "CreateRecordsRequest"
		},
		"671": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "__type.records"
		},
		"672": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.baseId"
		},
		"673": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.tableIdOrName"
		},
		"674": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"675": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"676": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "Fields"
		},
		"677": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "CreateRecordsResponse"
		},
		"678": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "__type.records"
		},
		"679": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/type-fest@4.18.2/node_modules/type-fest/source/simplify.d.ts",
			"qualifiedName": "__type"
		},
		"680": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "id"
		},
		"681": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "createdTime"
		},
		"682": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "fields"
		},
		"683": {
			"sourceFileName": "src/records/create-records.ts",
			"qualifiedName": "Fields"
		},
		"684": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "deleteRecords"
		},
		"685": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "deleteRecords"
		},
		"686": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "client"
		},
		"687": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "request"
		},
		"688": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "DeleteRecordsRequest"
		},
		"689": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type.records"
		},
		"690": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.baseId"
		},
		"691": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.tableIdOrName"
		},
		"692": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "DeleteRecordsResponse"
		},
		"693": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type.records"
		},
		"694": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type"
		},
		"695": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type.id"
		},
		"696": {
			"sourceFileName": "src/records/delete-records.ts",
			"qualifiedName": "__type.deleted"
		},
		"697": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "listRecords"
		},
		"698": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "listRecords"
		},
		"699": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "Fields"
		},
		"700": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "client"
		},
		"701": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "request"
		},
		"702": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "ListRecordsRequest"
		},
		"703": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.fields"
		},
		"704": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.filterByFormula"
		},
		"705": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.maxRecords"
		},
		"706": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.offset"
		},
		"707": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.pageSize"
		},
		"708": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.recordMetadata"
		},
		"709": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.sort"
		},
		"710": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type"
		},
		"711": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.field"
		},
		"712": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.direction"
		},
		"713": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.timeZone"
		},
		"714": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.userLocale"
		},
		"715": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.view"
		},
		"716": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.baseId"
		},
		"717": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.tableIdOrName"
		},
		"718": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "cellFormat"
		},
		"719": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"720": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"721": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "Fields"
		},
		"722": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "ListRecordsResponse"
		},
		"723": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.offset"
		},
		"724": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.records"
		},
		"725": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type"
		},
		"726": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "__type.commentCount"
		},
		"727": {
			"sourceFileName": "src/records/list-records.ts",
			"qualifiedName": "Fields"
		},
		"728": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "updateRecords"
		},
		"729": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "updateRecords"
		},
		"730": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "RequestFields"
		},
		"731": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "ResponseFields"
		},
		"732": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "client"
		},
		"733": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "request"
		},
		"734": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "updateRecords"
		},
		"735": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "RequestFields"
		},
		"736": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "ResponseFields"
		},
		"737": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "client"
		},
		"738": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "request"
		},
		"739": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "UpdateRecordsRequestNonUpsert"
		},
		"740": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.records"
		},
		"741": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type"
		},
		"742": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.id"
		},
		"743": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.fields"
		},
		"744": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type"
		},
		"745": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.id"
		},
		"746": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.fields"
		},
		"747": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.method"
		},
		"748": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.baseId"
		},
		"749": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.tableIdOrName"
		},
		"750": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"751": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"752": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "Fields"
		},
		"753": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "UpdateRecordsRequestUpsert"
		},
		"754": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.performUpsert"
		},
		"755": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type"
		},
		"756": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.fieldsToMergeOn"
		},
		"757": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.records"
		},
		"758": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type"
		},
		"759": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.fields"
		},
		"760": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type"
		},
		"761": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "__type.fields"
		},
		"762": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.method"
		},
		"763": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.baseId"
		},
		"764": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.tableIdOrName"
		},
		"765": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"766": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"767": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "Fields"
		},
		"768": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "UpdateRecordsRequest"
		},
		"769": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "Fields"
		},
		"770": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "UpdateRecordsResponseNonUpsert"
		},
		"771": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "Fields"
		},
		"772": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "UpdateRecordsResponseUpsert"
		},
		"773": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "Fields"
		},
		"774": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "UpdateRecordsResponse"
		},
		"775": {
			"sourceFileName": "src/records/update-records.ts",
			"qualifiedName": "Fields"
		},
		"776": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "SCHEMA_RECORD_FIELDS"
		},
		"777": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "RecordFields"
		},
		"778": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "SCHEMA_COMMON_REQUEST_PARAMS"
		},
		"779": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object"
		},
		"780": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.cellFormat"
		},
		"781": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.returnFieldsByFieldId"
		},
		"782": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.typecast"
		},
		"783": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"784": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "cellFormat"
		},
		"785": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"786": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"787": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"788": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "cellFormat"
		},
		"789": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "returnFieldsByFieldId"
		},
		"790": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "typecast"
		},
		"791": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "CommonRequestParams"
		},
		"792": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"793": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.cellFormat"
		},
		"794": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.returnFieldsByFieldId"
		},
		"795": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.typecast"
		},
		"796": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "SCHEMA_REQUEST_METHOD"
		},
		"797": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object"
		},
		"798": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.method"
		},
		"799": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"800": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "method"
		},
		"801": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"802": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "method"
		},
		"803": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "RequestMethod"
		},
		"804": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"805": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.method"
		},
		"806": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "SCHEMA_BASE_AND_TABLE_PATH_PARAMS"
		},
		"807": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object"
		},
		"808": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.baseId"
		},
		"809": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.tableIdOrName"
		},
		"810": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"811": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"812": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"813": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"814": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"815": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"816": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "BaseAndTablePathParams"
		},
		"817": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"818": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.baseId"
		},
		"819": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.tableIdOrName"
		},
		"820": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "SCHEMA_BASE_TABLE_AND_RECORD_PATH_PARAMS"
		},
		"821": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object"
		},
		"822": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.baseId"
		},
		"823": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.tableIdOrName"
		},
		"824": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object"
		},
		"825": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.recordId"
		},
		"826": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"827": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"828": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"829": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "recordId"
		},
		"830": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"831": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "baseId"
		},
		"832": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "tableIdOrName"
		},
		"833": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "recordId"
		},
		"834": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "BaseTableAndRecordPathParams"
		},
		"835": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"836": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.recordId"
		},
		"837": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "SCHEMA_INDIVIDUAL_RECORD"
		},
		"838": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object"
		},
		"839": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.id"
		},
		"840": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.createdTime"
		},
		"841": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__object.fields"
		},
		"842": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"843": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "id"
		},
		"844": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "createdTime"
		},
		"845": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "fields"
		},
		"846": {
			"sourceFileName": "../../common/temp/node_modules/.pnpm/zod@3.23.7/node_modules/zod/lib/types.d.ts",
			"qualifiedName": "__type"
		},
		"847": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "id"
		},
		"848": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "createdTime"
		},
		"849": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "fields"
		},
		"850": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "IndividualRecord"
		},
		"851": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.id"
		},
		"852": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.createdTime"
		},
		"853": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.fields"
		},
		"854": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Fields"
		},
		"855": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "UnionToTuple"
		},
		"856": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "U"
		},
		"857": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "R"
		},
		"858": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "ExtendSchemaWithFields"
		},
		"859": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"860": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.fields"
		},
		"861": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Schema"
		},
		"862": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"863": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.fields"
		},
		"864": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Fields"
		},
		"865": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Options"
		},
		"866": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"867": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.nonEmpty"
		},
		"868": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"869": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.nonEmpty"
		},
		"870": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "ExtendSchemaWithFieldsForRecords"
		},
		"871": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"872": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.records"
		},
		"873": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"874": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.fields"
		},
		"875": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Schema"
		},
		"876": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"877": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.records"
		},
		"878": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"879": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.fields"
		},
		"880": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Fields"
		},
		"881": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "Options"
		},
		"882": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"883": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.nonEmpty"
		},
		"884": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type"
		},
		"885": {
			"sourceFileName": "src/records/shared.ts",
			"qualifiedName": "__type.nonEmpty"
		}
	}
}